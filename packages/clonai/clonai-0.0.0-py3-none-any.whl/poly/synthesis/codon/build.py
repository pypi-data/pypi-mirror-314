# python build stubs for package codon
# File is generated by gopy. Do not edit.
# gopy build -output=poly/synthesis/codon -vm=python3 github.com/bebop/poly/synthesis/codon

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_codon')
mod.add_include('"codon_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_genbank_BaseCount_CTor', retval('int64_t'), [])
mod.add_function('Slice_genbank_BaseCount_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_genbank_BaseCount_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_genbank_BaseCount_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_genbank_BaseCount_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_BaseCount_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Feature_CTor', retval('int64_t'), [])
mod.add_function('Slice_genbank_Feature_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_genbank_Feature_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_genbank_Feature_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_genbank_Feature_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Feature_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Location_CTor', retval('int64_t'), [])
mod.add_function('Slice_genbank_Location_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_genbank_Location_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_genbank_Location_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_genbank_Location_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Location_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Reference_CTor', retval('int64_t'), [])
mod.add_function('Slice_genbank_Reference_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_genbank_Reference_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_genbank_Reference_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_genbank_Reference_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_genbank_Reference_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_codon_AminoAcid_CTor', retval('int64_t'), [])
mod.add_function('Slice_codon_AminoAcid_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_codon_AminoAcid_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_codon_AminoAcid_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_codon_AminoAcid_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_codon_AminoAcid_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_codon_Codon_CTor', retval('int64_t'), [])
mod.add_function('Slice_codon_Codon_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_codon_Codon_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_codon_Codon_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_codon_Codon_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_codon_Codon_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Map_string_weightedrand_Chooser_CTor', retval('int64_t'), [])
mod.add_function('Map_string_weightedrand_Chooser_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_weightedrand_Chooser_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_weightedrand_Chooser_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_weightedrand_Chooser_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_weightedrand_Chooser_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_weightedrand_Chooser_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_int_CTor', retval('int64_t'), [])
mod.add_function('Map_string_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('int64_t', 'value')])
mod.add_function('Map_string_int_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_int_keys', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_CTor', retval('int64_t'), [])
mod.add_function('Map_string_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Map_string_string_elem', retval('char*'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_contains', retval('bool'), [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_set', None, [param('int64_t', 'handle'), param('char*', 'key'), param('char*', 'value')])
mod.add_function('Map_string_string_delete', None, [param('int64_t', 'handle'), param('char*', '_ky')])
mod.add_function('Map_string_string_keys', retval('int64_t'), [param('int64_t', 'handle')])
add_checked_function(mod, 'codon_Table_GetWeightedAminoAcids', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'codon_Table_Optimize', retval('char*'), [param('int64_t', '_handle'), param('char*', 'aminoAcids'), param('int64_t', 'randomState')])
add_checked_string_function(mod, 'codon_Table_Translate', retval('char*'), [param('int64_t', '_handle'), param('char*', 'dnaSeq')])
mod.add_function('codon_AminoAcid_CTor', retval('int64_t'), [])
mod.add_function('codon_AminoAcid_Letter_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('codon_AminoAcid_Letter_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('codon_AminoAcid_Codons_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_AminoAcid_Codons_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_Codon_CTor', retval('int64_t'), [])
mod.add_function('codon_Codon_Triplet_Get', retval('char*'), [param('int64_t', 'handle')])
mod.add_function('codon_Codon_Triplet_Set', None, [param('int64_t', 'handle'), param('char*', 'val')])
mod.add_function('codon_Codon_Weight_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_Codon_Weight_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_Stats_CTor', retval('int64_t'), [])
mod.add_function('codon_Stats_StartCodonCount_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_Stats_StartCodonCount_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_Stats_GeneCount_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_Stats_GeneCount_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_CTor', retval('int64_t'), [])
mod.add_function('codon_TranslationTable_StartCodons_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_StartCodons_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_StopCodons_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_StopCodons_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_AminoAcids_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_AminoAcids_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_TranslationMap_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_TranslationMap_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_StartCodonTable_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_StartCodonTable_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_Choosers_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_Choosers_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('codon_TranslationTable_Stats_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('codon_TranslationTable_Stats_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'codon_TranslationTable_Copy', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_function(mod, 'codon_TranslationTable_GetWeightedAminoAcids', retval('int64_t'), [param('int64_t', '_handle')])
add_checked_string_function(mod, 'codon_TranslationTable_Optimize', retval('char*'), [param('int64_t', '_handle'), param('char*', 'aminoAcids'), param('int64_t', 'randomState')])
add_checked_function(mod, 'codon_TranslationTable_UpdateWeights', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'aminoAcids')])
add_checked_function(mod, 'codon_TranslationTable_UpdateWeightsWithSequence', retval('char*'), [param('int64_t', '_handle'), param('int64_t', 'data')])
add_checked_string_function(mod, 'codon_TranslationTable_Translate', retval('char*'), [param('int64_t', '_handle'), param('char*', 'dnaSeq')])
add_checked_function(mod, 'codon_NewStats', retval('int64_t'), [])
add_checked_function(mod, 'codon_ReadCodonJSON', retval('int64_t'), [param('char*', 'path')])
add_checked_function(mod, 'codon_AddCodonTable', retval('int64_t'), [param('int64_t', 'firstCodonTable'), param('int64_t', 'secondCodonTable')])
add_checked_function(mod, 'codon_CompromiseCodonTable', retval('int64_t'), [param('int64_t', 'firstCodonTable'), param('int64_t', 'secondCodonTable'), param('double', 'cutOff')])
add_checked_function(mod, 'codon_NewTranslationTable', retval('int64_t'), [param('int64_t', 'index')])
add_checked_function(mod, 'codon_ParseCodonJSON', retval('int64_t'), [param('int64_t', 'file')])
add_checked_function(mod, 'codon_WriteCodonJSON', None, [param('int64_t', 'codonTable'), param('char*', 'path'), param('bool', 'goRun')])

mod.generate(open('codon.c', 'w'))

