# python build stubs for package matrix
# File is generated by gopy. Do not edit.
# gopy build -output=poly/search/align/matrix -vm=python3 github.com/bebop/poly/search/align/matrix

from pybindgen import retval, param, Function, Module
import sys

class CheckedFunction(Function):
    def __init__(self, *a, **kw):
        super(CheckedFunction, self).__init__(*a, **kw)
        self._failure_expression = kw.get('failure_expression', '')
        self._failure_cleanup = kw.get('failure_cleanup', '')

    def set_failure_expression(self, expr):
        self._failure_expression = expr

    def set_failure_cleanup(self, expr):
        self._failure_cleanup = expr

    def generate_call(self):
        super(CheckedFunction, self).generate_call()
        check = "PyErr_Occurred()"
        if self._failure_expression:
            check = "{} && {}".format(self._failure_expression, check)
        failure_cleanup = self._failure_cleanup or None
        self.before_call.write_error_check(check, failure_cleanup)

def add_checked_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

def add_checked_string_function(mod, name, retval, params, failure_expression='', *a, **kw):
    fn = CheckedFunction(name, retval, params, *a, **kw)
    fn.set_failure_cleanup('if (retval != NULL) free(retval);')
    fn.after_call.add_cleanup_code('free(retval);')
    fn.set_failure_expression(failure_expression)
    mod._add_function_obj(fn)
    return fn

mod = Module('_matrix')
mod.add_include('"matrix_go.h"')
mod.add_function('GoPyInit', None, [])
mod.add_function('DecRef', None, [param('int64_t', 'handle')])
mod.add_function('IncRef', None, [param('int64_t', 'handle')])
mod.add_function('NumHandles', retval('int'), [])
mod.add_function('Slice_bool_CTor', retval('int64_t'), [])
mod.add_function('Slice_bool_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_bool_elem', retval('bool'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_bool_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_bool_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('bool', 'value')])
mod.add_function('Slice_bool_append', None, [param('int64_t', 'handle'), param('bool', 'value')])
mod.add_function('Slice_byte_CTor', retval('int64_t'), [])
mod.add_function('Slice_byte_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_byte_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_byte_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_byte_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_byte_from_bytes', retval('int64_t'), [param('PyObject*', 'o', transfer_ownership=False)])
mod.add_function('Slice_byte_to_bytes', retval('PyObject*', caller_owns_return=True), [param('int64_t', 'handle')])
mod.add_function('Slice_error_CTor', retval('int64_t'), [])
mod.add_function('Slice_error_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_error_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_error_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_error_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_error_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_float32_CTor', retval('int64_t'), [])
mod.add_function('Slice_float32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float32_elem', retval('float'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('float', 'value')])
mod.add_function('Slice_float32_append', None, [param('int64_t', 'handle'), param('float', 'value')])
mod.add_function('Slice_float64_CTor', retval('int64_t'), [])
mod.add_function('Slice_float64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_float64_elem', retval('double'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_float64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_float64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('double', 'value')])
mod.add_function('Slice_float64_append', None, [param('int64_t', 'handle'), param('double', 'value')])
mod.add_function('Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int16_CTor', retval('int64_t'), [])
mod.add_function('Slice_int16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int16_elem', retval('int16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int16_t', 'value')])
mod.add_function('Slice_int16_append', None, [param('int64_t', 'handle'), param('int16_t', 'value')])
mod.add_function('Slice_int32_CTor', retval('int64_t'), [])
mod.add_function('Slice_int32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int32_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_int32_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_int64_CTor', retval('int64_t'), [])
mod.add_function('Slice_int64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int64_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_int64_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('Slice_int8_CTor', retval('int64_t'), [])
mod.add_function('Slice_int8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_int8_elem', retval('int8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_int8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_int8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int8_t', 'value')])
mod.add_function('Slice_int8_append', None, [param('int64_t', 'handle'), param('int8_t', 'value')])
mod.add_function('Slice_rune_CTor', retval('int64_t'), [])
mod.add_function('Slice_rune_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_rune_elem', retval('int32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_rune_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_rune_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int32_t', 'value')])
mod.add_function('Slice_rune_append', None, [param('int64_t', 'handle'), param('int32_t', 'value')])
mod.add_function('Slice_string_CTor', retval('int64_t'), [])
mod.add_function('Slice_string_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_string_elem', retval('char*'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_string_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_string_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('char*', 'value')])
mod.add_function('Slice_string_append', None, [param('int64_t', 'handle'), param('char*', 'value')])
mod.add_function('Slice_uint_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint16_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint16_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint16_elem', retval('uint16_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint16_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint16_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint16_t', 'value')])
mod.add_function('Slice_uint16_append', None, [param('int64_t', 'handle'), param('uint16_t', 'value')])
mod.add_function('Slice_uint32_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint32_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint32_elem', retval('uint32_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint32_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint32_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint32_t', 'value')])
mod.add_function('Slice_uint32_append', None, [param('int64_t', 'handle'), param('uint32_t', 'value')])
mod.add_function('Slice_uint64_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint64_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint64_elem', retval('uint64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint64_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint64_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint64_t', 'value')])
mod.add_function('Slice_uint64_append', None, [param('int64_t', 'handle'), param('uint64_t', 'value')])
mod.add_function('Slice_uint8_CTor', retval('int64_t'), [])
mod.add_function('Slice_uint8_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_uint8_elem', retval('uint8_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_uint8_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_uint8_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('uint8_t', 'value')])
mod.add_function('Slice_uint8_append', None, [param('int64_t', 'handle'), param('uint8_t', 'value')])
mod.add_function('Slice_Slice_int_CTor', retval('int64_t'), [])
mod.add_function('Slice_Slice_int_len', retval('int'), [param('int64_t', 'handle')])
mod.add_function('Slice_Slice_int_elem', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'idx')])
mod.add_function('Slice_Slice_int_subslice', retval('int64_t'), [param('int64_t', 'handle'), param('int', 'st'), param('int', 'ed')])
mod.add_function('Slice_Slice_int_set', None, [param('int64_t', 'handle'), param('int', 'idx'), param('int64_t', 'value')])
mod.add_function('Slice_Slice_int_append', None, [param('int64_t', 'handle'), param('int64_t', 'value')])
mod.add_function('matrix_BLOSUM100', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM100', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM30', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM30', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM35', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM35', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM40', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM40', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM45', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM45', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM50', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM50', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM55', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM55', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM60', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM60', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM62', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM62', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM65', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM65', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM70', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM70', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM75', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM75', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM80', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM80', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM85', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM85', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUM90', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUM90', None, [param('int64_t', 'val')])
mod.add_function('matrix_BLOSUMN', retval('int64_t'), [])
mod.add_function('matrix_Set_BLOSUMN', None, [param('int64_t', 'val')])
mod.add_function('matrix_DAYHOFF', retval('int64_t'), [])
mod.add_function('matrix_Set_DAYHOFF', None, [param('int64_t', 'val')])
mod.add_function('matrix_Default', retval('int64_t'), [])
mod.add_function('matrix_Set_Default', None, [param('int64_t', 'val')])
mod.add_function('matrix_GONNET', retval('int64_t'), [])
mod.add_function('matrix_Set_GONNET', None, [param('int64_t', 'val')])
mod.add_function('matrix_IDENTITY', retval('int64_t'), [])
mod.add_function('matrix_Set_IDENTITY', None, [param('int64_t', 'val')])
mod.add_function('matrix_MATCH', retval('int64_t'), [])
mod.add_function('matrix_Set_MATCH', None, [param('int64_t', 'val')])
mod.add_function('matrix_NUC_4', retval('int64_t'), [])
mod.add_function('matrix_Set_NUC_4', None, [param('int64_t', 'val')])
mod.add_function('matrix_NUC_4_4', retval('int64_t'), [])
mod.add_function('matrix_Set_NUC_4_4', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM10', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM10', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM100', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM100', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM110', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM110', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM120', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM120', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM120_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM120_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM130', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM130', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM140', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM140', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM150', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM150', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM160', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM160', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM160_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM160_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM170', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM170', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM180', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM180', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM190', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM190', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM20', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM20', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM200', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM200', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM200_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM200_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM210', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM210', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM220', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM220', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM230', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM230', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM240', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM240', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM250', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM250', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM250_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM250_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM260', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM260', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM270', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM270', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM280', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM280', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM290', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM290', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM30', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM30', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM300', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM300', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM310', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM310', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM320', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM320', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM330', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM330', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM340', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM340', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM350', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM350', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM360', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM360', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM370', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM370', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM380', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM380', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM390', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM390', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM40', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM40', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM400', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM400', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM40_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM40_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM410', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM410', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM420', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM420', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM430', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM430', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM440', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM440', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM450', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM450', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM460', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM460', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM470', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM470', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM480', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM480', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM490', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM490', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM50', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM50', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM500', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM500', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM60', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM60', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM70', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM70', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM80', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM80', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM80_cdi', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM80_cdi', None, [param('int64_t', 'val')])
mod.add_function('matrix_PAM90', retval('int64_t'), [])
mod.add_function('matrix_Set_PAM90', None, [param('int64_t', 'val')])
mod.add_function('matrix_SubstitutionMatrix_CTor', retval('int64_t'), [])
mod.add_function('matrix_SubstitutionMatrix_FirstAlphabet_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('matrix_SubstitutionMatrix_FirstAlphabet_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
mod.add_function('matrix_SubstitutionMatrix_SecondAlphabet_Get', retval('int64_t'), [param('int64_t', 'handle')])
mod.add_function('matrix_SubstitutionMatrix_SecondAlphabet_Set', None, [param('int64_t', 'handle'), param('int64_t', 'val')])
add_checked_function(mod, 'matrix_SubstitutionMatrix_Score', retval('int64_t'), [param('int64_t', '_handle'), param('char*', 'a'), param('char*', 'b')])
add_checked_function(mod, 'matrix_NewSubstitutionMatrix', retval('int64_t'), [param('int64_t', 'firstAlphabet'), param('int64_t', 'secondAlphabet'), param('int64_t', 'scores')])

mod.generate(open('matrix.c', 'w'))

