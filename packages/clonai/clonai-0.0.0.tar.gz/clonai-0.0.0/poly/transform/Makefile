# Makefile for python interface for package transform.
# File is generated by gopy. Do not edit.
# gopy build -output=poly/transform -vm=python3 github.com/bebop/poly/transform

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/opt/homebrew/bin/python3
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = "-I/opt/homebrew/opt/python@3.13/Frameworks/Python.framework/Versions/3.13/include/python3.13"
LDFLAGS = "-L/opt/homebrew/opt/python@3.13/Frameworks/Python.framework/Versions/3.13/lib" "-lpython3.13" -ldl  -framework CoreFoundation 

all: gen build

gen:
	gopy gen -no-make -vm=python3 github.com/bebop/poly/transform

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm transform.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w transform.go
	# generate transform_go$(LIBEXT) from transform.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o transform_go$(LIBEXT) transform.go
	# use pybindgen to build the transform.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _transform$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated transform.py python wrapper imports this c-code package
	
	$(GCC) transform.c -dynamiclib transform_go$(LIBEXT) -o _transform$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


