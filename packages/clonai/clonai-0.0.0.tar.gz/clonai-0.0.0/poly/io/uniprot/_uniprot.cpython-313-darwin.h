/* Code generated by cmd/cgo; DO NOT EDIT. */

/* package github.com/bebop/poly-py/poly/io/uniprot */


#line 1 "cgo-builtin-export-prolog"

#include <stddef.h>

#ifndef GO_CGO_EXPORT_PROLOGUE_H
#define GO_CGO_EXPORT_PROLOGUE_H

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef struct { const char *p; ptrdiff_t n; } _GoString_;
#endif

#endif

/* Start of preamble from import "C" comments.  */


#line 9 "uniprot.go"





// #define Py_LIMITED_API // need full API for PyRun*
#include <Python.h>
typedef uint8_t bool;
// static inline is trick for avoiding need for extra .c file
// the following are used for build value -- switch on reflect.Kind
// or the types equivalent
static inline PyObject* gopy_build_bool(uint8_t val) {
	return Py_BuildValue("b", val);
}
static inline PyObject* gopy_build_int64(int64_t val) {
	return Py_BuildValue("k", val);
}
static inline PyObject* gopy_build_uint64(uint64_t val) {
	return Py_BuildValue("K", val);
}
static inline PyObject* gopy_build_float64(double val) {
	return Py_BuildValue("d", val);
}
static inline PyObject* gopy_build_string(const char* val) {
	return Py_BuildValue("s", val);
}
static inline void gopy_decref(PyObject* obj) { // macro
	Py_XDECREF(obj);
}
static inline void gopy_incref(PyObject* obj) { // macro
	Py_XINCREF(obj);
}
static inline int gopy_method_check(PyObject* obj) { // macro
	return PyMethod_Check(obj);
}
static inline void gopy_err_handle() {
	if(PyErr_Occurred() != NULL) {
		PyErr_Print();
	}
}


#line 1 "cgo-generated-wrapper"


/* End of preamble from import "C" comments.  */


/* Start of boilerplate cgo prologue.  */
#line 1 "cgo-gcc-export-header-prolog"

#ifndef GO_CGO_PROLOGUE_H
#define GO_CGO_PROLOGUE_H

typedef signed char GoInt8;
typedef unsigned char GoUint8;
typedef short GoInt16;
typedef unsigned short GoUint16;
typedef int GoInt32;
typedef unsigned int GoUint32;
typedef long long GoInt64;
typedef unsigned long long GoUint64;
typedef GoInt64 GoInt;
typedef GoUint64 GoUint;
typedef size_t GoUintptr;
typedef float GoFloat32;
typedef double GoFloat64;
#ifdef _MSC_VER
#include <complex.h>
typedef _Fcomplex GoComplex64;
typedef _Dcomplex GoComplex128;
#else
typedef float _Complex GoComplex64;
typedef double _Complex GoComplex128;
#endif

/*
  static assertion to make sure the file is being used on architecture
  at least with matching size of GoInt.
*/
typedef char _check_for_64_bit_pointer_matching_GoInt[sizeof(void*)==64/8 ? 1:-1];

#ifndef GO_CGO_GOSTRING_TYPEDEF
typedef _GoString_ GoString;
#endif
typedef void *GoMap;
typedef void *GoChan;
typedef struct { void *t; void *v; } GoInterface;
typedef struct { void *data; GoInt len; GoInt cap; } GoSlice;

#endif

/* End of boilerplate cgo prologue.  */

#ifdef __cplusplus
extern "C" {
#endif

extern void GoPyInit();

// DecRef decrements the reference count for the specified handle
// and deletes it it goes to zero.
//
extern void DecRef(long long handle);

// IncRef increments the reference count for the specified handle.
//
extern void IncRef(long long handle);

// NumHandles returns the number of handles currently in use.
//
extern GoInt NumHandles();

// --- wrapping slice: []bool ---
//
extern long long Slice_bool_CTor();
extern GoInt Slice_bool_len(long long handle);
extern char Slice_bool_elem(long long handle, GoInt _idx);
extern long long Slice_bool_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_bool_set(long long handle, GoInt _idx, char _vl);
extern void Slice_bool_append(long long handle, char _vl);

// --- wrapping slice: []byte ---
//
extern long long Slice_byte_CTor();
extern GoInt Slice_byte_len(long long handle);
extern char Slice_byte_elem(long long handle, GoInt _idx);
extern long long Slice_byte_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_byte_set(long long handle, GoInt _idx, char _vl);
extern void Slice_byte_append(long long handle, char _vl);
extern long long Slice_byte_from_bytes(PyObject* o);
extern PyObject* Slice_byte_to_bytes(long long handle);

// --- wrapping slice: []error ---
//
extern long long Slice_error_CTor();
extern GoInt Slice_error_len(long long handle);
extern char* Slice_error_elem(long long handle, GoInt _idx);
extern long long Slice_error_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_error_set(long long handle, GoInt _idx, char* _vl);
extern void Slice_error_append(long long handle, char* _vl);

// --- wrapping slice: []float32 ---
//
extern long long Slice_float32_CTor();
extern GoInt Slice_float32_len(long long handle);
extern float Slice_float32_elem(long long handle, GoInt _idx);
extern long long Slice_float32_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_float32_set(long long handle, GoInt _idx, float _vl);
extern void Slice_float32_append(long long handle, float _vl);

// --- wrapping slice: []float64 ---
//
extern long long Slice_float64_CTor();
extern GoInt Slice_float64_len(long long handle);
extern double Slice_float64_elem(long long handle, GoInt _idx);
extern long long Slice_float64_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_float64_set(long long handle, GoInt _idx, double _vl);
extern void Slice_float64_append(long long handle, double _vl);

// --- wrapping slice: []int ---
//
extern long long Slice_int_CTor();
extern GoInt Slice_int_len(long long handle);
extern long long Slice_int_elem(long long handle, GoInt _idx);
extern long long Slice_int_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_int_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_int_append(long long handle, long long _vl);

// --- wrapping slice: []int16 ---
//
extern long long Slice_int16_CTor();
extern GoInt Slice_int16_len(long long handle);
extern short Slice_int16_elem(long long handle, GoInt _idx);
extern long long Slice_int16_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_int16_set(long long handle, GoInt _idx, short _vl);
extern void Slice_int16_append(long long handle, short _vl);

// --- wrapping slice: []int32 ---
//
extern long long Slice_int32_CTor();
extern GoInt Slice_int32_len(long long handle);
extern long Slice_int32_elem(long long handle, GoInt _idx);
extern long long Slice_int32_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_int32_set(long long handle, GoInt _idx, long _vl);
extern void Slice_int32_append(long long handle, long _vl);

// --- wrapping slice: []int64 ---
//
extern long long Slice_int64_CTor();
extern GoInt Slice_int64_len(long long handle);
extern long long Slice_int64_elem(long long handle, GoInt _idx);
extern long long Slice_int64_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_int64_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_int64_append(long long handle, long long _vl);

// --- wrapping slice: []int8 ---
//
extern long long Slice_int8_CTor();
extern GoInt Slice_int8_len(long long handle);
extern char Slice_int8_elem(long long handle, GoInt _idx);
extern long long Slice_int8_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_int8_set(long long handle, GoInt _idx, char _vl);
extern void Slice_int8_append(long long handle, char _vl);

// --- wrapping slice: []rune ---
//
extern long long Slice_rune_CTor();
extern GoInt Slice_rune_len(long long handle);
extern long Slice_rune_elem(long long handle, GoInt _idx);
extern long long Slice_rune_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_rune_set(long long handle, GoInt _idx, long _vl);
extern void Slice_rune_append(long long handle, long _vl);

// --- wrapping slice: []string ---
//
extern long long Slice_string_CTor();
extern GoInt Slice_string_len(long long handle);
extern char* Slice_string_elem(long long handle, GoInt _idx);
extern long long Slice_string_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_string_set(long long handle, GoInt _idx, char* _vl);
extern void Slice_string_append(long long handle, char* _vl);

// --- wrapping slice: []uint ---
//
extern long long Slice_uint_CTor();
extern GoInt Slice_uint_len(long long handle);
extern unsigned long long Slice_uint_elem(long long handle, GoInt _idx);
extern long long Slice_uint_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uint_set(long long handle, GoInt _idx, unsigned long long _vl);
extern void Slice_uint_append(long long handle, unsigned long long _vl);

// --- wrapping slice: []uint16 ---
//
extern long long Slice_uint16_CTor();
extern GoInt Slice_uint16_len(long long handle);
extern unsigned short Slice_uint16_elem(long long handle, GoInt _idx);
extern long long Slice_uint16_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uint16_set(long long handle, GoInt _idx, unsigned short _vl);
extern void Slice_uint16_append(long long handle, unsigned short _vl);

// --- wrapping slice: []uint32 ---
//
extern long long Slice_uint32_CTor();
extern GoInt Slice_uint32_len(long long handle);
extern unsigned long Slice_uint32_elem(long long handle, GoInt _idx);
extern long long Slice_uint32_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uint32_set(long long handle, GoInt _idx, unsigned long _vl);
extern void Slice_uint32_append(long long handle, unsigned long _vl);

// --- wrapping slice: []uint64 ---
//
extern long long Slice_uint64_CTor();
extern GoInt Slice_uint64_len(long long handle);
extern unsigned long long Slice_uint64_elem(long long handle, GoInt _idx);
extern long long Slice_uint64_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uint64_set(long long handle, GoInt _idx, unsigned long long _vl);
extern void Slice_uint64_append(long long handle, unsigned long long _vl);

// --- wrapping slice: []uint8 ---
//
extern long long Slice_uint8_CTor();
extern GoInt Slice_uint8_len(long long handle);
extern unsigned char Slice_uint8_elem(long long handle, GoInt _idx);
extern long long Slice_uint8_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uint8_set(long long handle, GoInt _idx, unsigned char _vl);
extern void Slice_uint8_append(long long handle, unsigned char _vl);

// --- wrapping slice: []xml.Attr ---
//
extern long long Slice_xml_Attr_CTor();
extern GoInt Slice_xml_Attr_len(long long handle);
extern long long Slice_xml_Attr_elem(long long handle, GoInt _idx);
extern long long Slice_xml_Attr_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_xml_Attr_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_xml_Attr_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.AlternativeName ---
//
extern long long Slice_uniprot_AlternativeName_CTor();
extern GoInt Slice_uniprot_AlternativeName_len(long long handle);
extern long long Slice_uniprot_AlternativeName_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_AlternativeName_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_AlternativeName_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_AlternativeName_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.CofactorType ---
//
extern long long Slice_uniprot_CofactorType_CTor();
extern GoInt Slice_uniprot_CofactorType_len(long long handle);
extern long long Slice_uniprot_CofactorType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_CofactorType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_CofactorType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_CofactorType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.CommentType ---
//
extern long long Slice_uniprot_CommentType_CTor();
extern GoInt Slice_uniprot_CommentType_len(long long handle);
extern long long Slice_uniprot_CommentType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_CommentType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_CommentType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_CommentType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.Component ---
//
extern long long Slice_uniprot_Component_CTor();
extern GoInt Slice_uniprot_Component_len(long long handle);
extern long long Slice_uniprot_Component_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_Component_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_Component_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_Component_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.DbReferenceType ---
//
extern long long Slice_uniprot_DbReferenceType_CTor();
extern GoInt Slice_uniprot_DbReferenceType_len(long long handle);
extern long long Slice_uniprot_DbReferenceType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_DbReferenceType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_DbReferenceType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_DbReferenceType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.Domain ---
//
extern long long Slice_uniprot_Domain_CTor();
extern GoInt Slice_uniprot_Domain_len(long long handle);
extern long long Slice_uniprot_Domain_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_Domain_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_Domain_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_Domain_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.EventType ---
//
extern long long Slice_uniprot_EventType_CTor();
extern GoInt Slice_uniprot_EventType_len(long long handle);
extern long long Slice_uniprot_EventType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_EventType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_EventType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_EventType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.EvidenceType ---
//
extern long long Slice_uniprot_EvidenceType_CTor();
extern GoInt Slice_uniprot_EvidenceType_len(long long handle);
extern long long Slice_uniprot_EvidenceType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_EvidenceType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_EvidenceType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_EvidenceType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.EvidencedStringType ---
//
extern long long Slice_uniprot_EvidencedStringType_CTor();
extern GoInt Slice_uniprot_EvidencedStringType_len(long long handle);
extern long long Slice_uniprot_EvidencedStringType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_EvidencedStringType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_EvidencedStringType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_EvidencedStringType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.FeatureType ---
//
extern long long Slice_uniprot_FeatureType_CTor();
extern GoInt Slice_uniprot_FeatureType_len(long long handle);
extern long long Slice_uniprot_FeatureType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_FeatureType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_FeatureType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_FeatureType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.GeneLocationType ---
//
extern long long Slice_uniprot_GeneLocationType_CTor();
extern GoInt Slice_uniprot_GeneLocationType_len(long long handle);
extern long long Slice_uniprot_GeneLocationType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_GeneLocationType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_GeneLocationType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_GeneLocationType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.GeneNameType ---
//
extern long long Slice_uniprot_GeneNameType_CTor();
extern GoInt Slice_uniprot_GeneNameType_len(long long handle);
extern long long Slice_uniprot_GeneNameType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_GeneNameType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_GeneNameType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_GeneNameType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.GeneType ---
//
extern long long Slice_uniprot_GeneType_CTor();
extern GoInt Slice_uniprot_GeneType_len(long long handle);
extern long long Slice_uniprot_GeneType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_GeneType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_GeneType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_GeneType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.InteractantType ---
//
extern long long Slice_uniprot_InteractantType_CTor();
extern GoInt Slice_uniprot_InteractantType_len(long long handle);
extern long long Slice_uniprot_InteractantType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_InteractantType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_InteractantType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_InteractantType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.IsoformType ---
//
extern long long Slice_uniprot_IsoformType_CTor();
extern GoInt Slice_uniprot_IsoformType_len(long long handle);
extern long long Slice_uniprot_IsoformType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_IsoformType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_IsoformType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_IsoformType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.KeywordType ---
//
extern long long Slice_uniprot_KeywordType_CTor();
extern GoInt Slice_uniprot_KeywordType_len(long long handle);
extern long long Slice_uniprot_KeywordType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_KeywordType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_KeywordType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_KeywordType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.Link ---
//
extern long long Slice_uniprot_Link_CTor();
extern GoInt Slice_uniprot_Link_len(long long handle);
extern long long Slice_uniprot_Link_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_Link_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_Link_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_Link_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.LocationType ---
//
extern long long Slice_uniprot_LocationType_CTor();
extern GoInt Slice_uniprot_LocationType_len(long long handle);
extern long long Slice_uniprot_LocationType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_LocationType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_LocationType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_LocationType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.Name ---
//
extern long long Slice_uniprot_Name_CTor();
extern GoInt Slice_uniprot_Name_len(long long handle);
extern long long Slice_uniprot_Name_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_Name_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_Name_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_Name_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.OrganismNameType ---
//
extern long long Slice_uniprot_OrganismNameType_CTor();
extern GoInt Slice_uniprot_OrganismNameType_len(long long handle);
extern long long Slice_uniprot_OrganismNameType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_OrganismNameType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_OrganismNameType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_OrganismNameType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.OrganismType ---
//
extern long long Slice_uniprot_OrganismType_CTor();
extern GoInt Slice_uniprot_OrganismType_len(long long handle);
extern long long Slice_uniprot_OrganismType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_OrganismType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_OrganismType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_OrganismType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.PhysiologicalReactionType ---
//
extern long long Slice_uniprot_PhysiologicalReactionType_CTor();
extern GoInt Slice_uniprot_PhysiologicalReactionType_len(long long handle);
extern long long Slice_uniprot_PhysiologicalReactionType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_PhysiologicalReactionType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_PhysiologicalReactionType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_PhysiologicalReactionType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.PropertyType ---
//
extern long long Slice_uniprot_PropertyType_CTor();
extern GoInt Slice_uniprot_PropertyType_len(long long handle);
extern long long Slice_uniprot_PropertyType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_PropertyType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_PropertyType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_PropertyType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.ReferenceType ---
//
extern long long Slice_uniprot_ReferenceType_CTor();
extern GoInt Slice_uniprot_ReferenceType_len(long long handle);
extern long long Slice_uniprot_ReferenceType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_ReferenceType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_ReferenceType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_ReferenceType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.StatusType ---
//
extern long long Slice_uniprot_StatusType_CTor();
extern GoInt Slice_uniprot_StatusType_len(long long handle);
extern long long Slice_uniprot_StatusType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_StatusType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_StatusType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_StatusType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.SubcellularLocationType ---
//
extern long long Slice_uniprot_SubcellularLocationType_CTor();
extern GoInt Slice_uniprot_SubcellularLocationType_len(long long handle);
extern long long Slice_uniprot_SubcellularLocationType_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_SubcellularLocationType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_SubcellularLocationType_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_SubcellularLocationType_append(long long handle, long long _vl);

// --- wrapping slice: []uniprot.SubmittedName ---
//
extern long long Slice_uniprot_SubmittedName_CTor();
extern GoInt Slice_uniprot_SubmittedName_len(long long handle);
extern long long Slice_uniprot_SubmittedName_elem(long long handle, GoInt _idx);
extern long long Slice_uniprot_SubmittedName_subslice(long long handle, GoInt _st, GoInt _ed);
extern void Slice_uniprot_SubmittedName_set(long long handle, GoInt _idx, long long _vl);
extern void Slice_uniprot_SubmittedName_append(long long handle, long long _vl);

// --- wrapping map: map[string]string ---
//
extern long long Map_string_string_CTor();
extern GoInt Map_string_string_len(long long handle);
extern char* Map_string_string_elem(long long handle, char* _ky);
extern char Map_string_string_contains(long long handle, char* _ky);
extern void Map_string_string_set(long long handle, char* _ky, char* _vl);
extern void Map_string_string_delete(long long handle, char* _ky);
extern long long Map_string_string_keys(long long handle);
extern char* uniprot_Decoder_DecodeElement(long long _handle, char* v, long long start);
extern long long uniprot_Decoder_Token(long long _handle);

// --- wrapping struct: uniprot.EvidencedStringType ---
//
extern long long uniprot_EvidencedStringType_CTor();
extern char* uniprot_EvidencedStringType_Value_Get(long long handle);
extern void uniprot_EvidencedStringType_Value_Set(long long handle, char* val);
extern long long uniprot_EvidencedStringType_Evidence_Get(long long handle);
extern void uniprot_EvidencedStringType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.PhysiologicalReactionType ---
//
extern long long uniprot_PhysiologicalReactionType_CTor();
extern long long uniprot_PhysiologicalReactionType_DbReference_Get(long long handle);
extern void uniprot_PhysiologicalReactionType_DbReference_Set(long long handle, long long val);
extern char* uniprot_PhysiologicalReactionType_Direction_Get(long long handle);
extern void uniprot_PhysiologicalReactionType_Direction_Set(long long handle, char* val);
extern long long uniprot_PhysiologicalReactionType_Evidence_Get(long long handle);
extern void uniprot_PhysiologicalReactionType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.PropertyType ---
//
extern long long uniprot_PropertyType_CTor();
extern char* uniprot_PropertyType_Type_Get(long long handle);
extern void uniprot_PropertyType_Type_Set(long long handle, char* val);
extern char* uniprot_PropertyType_Value_Get(long long handle);
extern void uniprot_PropertyType_Value_Set(long long handle, char* val);

// --- wrapping struct: uniprot.EvidenceType ---
//
extern long long uniprot_EvidenceType_CTor();
extern long long uniprot_EvidenceType_Source_Get(long long handle);
extern void uniprot_EvidenceType_Source_Set(long long handle, long long val);
extern long long uniprot_EvidenceType_ImportedFrom_Get(long long handle);
extern void uniprot_EvidenceType_ImportedFrom_Set(long long handle, long long val);
extern char* uniprot_EvidenceType_Type_Get(long long handle);
extern void uniprot_EvidenceType_Type_Set(long long handle, char* val);
extern long long uniprot_EvidenceType_Key_Get(long long handle);
extern void uniprot_EvidenceType_Key_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Absorption ---
//
extern long long uniprot_Absorption_CTor();
extern long long uniprot_Absorption_Max_Get(long long handle);
extern void uniprot_Absorption_Max_Set(long long handle, long long val);
extern long long uniprot_Absorption_Text_Get(long long handle);
extern void uniprot_Absorption_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ConsortiumType ---
//
extern long long uniprot_ConsortiumType_CTor();
extern char* uniprot_ConsortiumType_Name_Get(long long handle);
extern void uniprot_ConsortiumType_Name_Set(long long handle, char* val);

// --- wrapping struct: uniprot.DbReferenceType ---
//
extern long long uniprot_DbReferenceType_CTor();
extern char* uniprot_DbReferenceType_Molecule_Get(long long handle);
extern void uniprot_DbReferenceType_Molecule_Set(long long handle, char* val);
extern long long uniprot_DbReferenceType_Property_Get(long long handle);
extern void uniprot_DbReferenceType_Property_Set(long long handle, long long val);
extern char* uniprot_DbReferenceType_Type_Get(long long handle);
extern void uniprot_DbReferenceType_Type_Set(long long handle, char* val);
extern long long uniprot_DbReferenceType_Evidence_Get(long long handle);
extern void uniprot_DbReferenceType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.LocationType ---
//
extern long long uniprot_LocationType_CTor();
extern long long uniprot_LocationType_Begin_Get(long long handle);
extern void uniprot_LocationType_Begin_Set(long long handle, long long val);
extern long long uniprot_LocationType_End_Get(long long handle);
extern void uniprot_LocationType_End_Set(long long handle, long long val);
extern long long uniprot_LocationType_Position_Get(long long handle);
extern void uniprot_LocationType_Position_Set(long long handle, long long val);
extern char* uniprot_LocationType_Sequence_Get(long long handle);
extern void uniprot_LocationType_Sequence_Set(long long handle, char* val);

// --- wrapping struct: uniprot.Transposon ---
//
extern long long uniprot_Transposon_CTor();
extern char* uniprot_Transposon_Value_Get(long long handle);
extern void uniprot_Transposon_Value_Set(long long handle, char* val);
extern long long uniprot_Transposon_Evidence_Get(long long handle);
extern void uniprot_Transposon_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Anon6 ---
//
extern long long uniprot_Anon6_CTor();
extern char* uniprot_Anon6_Type_Get(long long handle);
extern void uniprot_Anon6_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.FeatureType ---
//
extern long long uniprot_FeatureType_CTor();
extern char* uniprot_FeatureType_Original_Get(long long handle);
extern void uniprot_FeatureType_Original_Set(long long handle, char* val);
extern long long uniprot_FeatureType_Variation_Get(long long handle);
extern void uniprot_FeatureType_Variation_Set(long long handle, long long val);
extern long long uniprot_FeatureType_Location_Get(long long handle);
extern void uniprot_FeatureType_Location_Set(long long handle, long long val);
extern char* uniprot_FeatureType_Type_Get(long long handle);
extern void uniprot_FeatureType_Type_Set(long long handle, char* val);
extern char* uniprot_FeatureType_Description_Get(long long handle);
extern void uniprot_FeatureType_Description_Set(long long handle, char* val);
extern long long uniprot_FeatureType_Evidence_Get(long long handle);
extern void uniprot_FeatureType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.OrganismNameType ---
//
extern long long uniprot_OrganismNameType_CTor();
extern char* uniprot_OrganismNameType_Value_Get(long long handle);
extern void uniprot_OrganismNameType_Value_Set(long long handle, char* val);
extern char* uniprot_OrganismNameType_Type_Get(long long handle);
extern void uniprot_OrganismNameType_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.OrganismType ---
//
extern long long uniprot_OrganismType_CTor();
extern long long uniprot_OrganismType_Name_Get(long long handle);
extern void uniprot_OrganismType_Name_Set(long long handle, long long val);
extern long long uniprot_OrganismType_DbReference_Get(long long handle);
extern void uniprot_OrganismType_DbReference_Set(long long handle, long long val);
extern long long uniprot_OrganismType_Lineage_Get(long long handle);
extern void uniprot_OrganismType_Lineage_Set(long long handle, long long val);
extern long long uniprot_OrganismType_Evidence_Get(long long handle);
extern void uniprot_OrganismType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ProteinExistenceType ---
//
extern long long uniprot_ProteinExistenceType_CTor();
extern char* uniprot_ProteinExistenceType_Type_Get(long long handle);
extern void uniprot_ProteinExistenceType_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.SourceType ---
//
extern long long uniprot_SourceType_CTor();
extern long long uniprot_SourceType_DbReference_Get(long long handle);
extern void uniprot_SourceType_DbReference_Set(long long handle, long long val);

// --- wrapping struct: uniprot.GeneNameType ---
//
extern long long uniprot_GeneNameType_CTor();
extern char* uniprot_GeneNameType_Value_Get(long long handle);
extern void uniprot_GeneNameType_Value_Set(long long handle, char* val);
extern long long uniprot_GeneNameType_Evidence_Get(long long handle);
extern void uniprot_GeneNameType_Evidence_Set(long long handle, long long val);
extern char* uniprot_GeneNameType_Type_Get(long long handle);
extern void uniprot_GeneNameType_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.Plasmid ---
//
extern long long uniprot_Plasmid_CTor();
extern char* uniprot_Plasmid_Value_Get(long long handle);
extern void uniprot_Plasmid_Value_Set(long long handle, char* val);
extern long long uniprot_Plasmid_Evidence_Get(long long handle);
extern void uniprot_Plasmid_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Name ---
//
extern long long uniprot_Name_CTor();
extern char* uniprot_Name_Value_Get(long long handle);
extern void uniprot_Name_Value_Set(long long handle, char* val);
extern long long uniprot_Name_Evidence_Get(long long handle);
extern void uniprot_Name_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ReferenceType ---
//
extern long long uniprot_ReferenceType_CTor();
extern long long uniprot_ReferenceType_Citation_Get(long long handle);
extern void uniprot_ReferenceType_Citation_Set(long long handle, long long val);
extern long long uniprot_ReferenceType_Scope_Get(long long handle);
extern void uniprot_ReferenceType_Scope_Set(long long handle, long long val);
extern long long uniprot_ReferenceType_Source_Get(long long handle);
extern void uniprot_ReferenceType_Source_Set(long long handle, long long val);
extern long long uniprot_ReferenceType_Evidence_Get(long long handle);
extern void uniprot_ReferenceType_Evidence_Set(long long handle, long long val);
extern char* uniprot_ReferenceType_Key_Get(long long handle);
extern void uniprot_ReferenceType_Key_Set(long long handle, char* val);

// --- wrapping struct: uniprot.Disease ---
//
extern long long uniprot_Disease_CTor();
extern char* uniprot_Disease_Name_Get(long long handle);
extern void uniprot_Disease_Name_Set(long long handle, char* val);
extern char* uniprot_Disease_Acronym_Get(long long handle);
extern void uniprot_Disease_Acronym_Set(long long handle, char* val);
extern char* uniprot_Disease_Description_Get(long long handle);
extern void uniprot_Disease_Description_Set(long long handle, char* val);
extern long long uniprot_Disease_DbReference_Get(long long handle);
extern void uniprot_Disease_DbReference_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Entry ---
//
extern long long uniprot_Entry_CTor();
extern long long uniprot_Entry_Accession_Get(long long handle);
extern void uniprot_Entry_Accession_Set(long long handle, long long val);
extern long long uniprot_Entry_Name_Get(long long handle);
extern void uniprot_Entry_Name_Set(long long handle, long long val);
extern long long uniprot_Entry_Protein_Get(long long handle);
extern void uniprot_Entry_Protein_Set(long long handle, long long val);
extern long long uniprot_Entry_Gene_Get(long long handle);
extern void uniprot_Entry_Gene_Set(long long handle, long long val);
extern long long uniprot_Entry_Organism_Get(long long handle);
extern void uniprot_Entry_Organism_Set(long long handle, long long val);
extern long long uniprot_Entry_OrganismHost_Get(long long handle);
extern void uniprot_Entry_OrganismHost_Set(long long handle, long long val);
extern long long uniprot_Entry_GeneLocation_Get(long long handle);
extern void uniprot_Entry_GeneLocation_Set(long long handle, long long val);
extern long long uniprot_Entry_Reference_Get(long long handle);
extern void uniprot_Entry_Reference_Set(long long handle, long long val);
extern long long uniprot_Entry_Comment_Get(long long handle);
extern void uniprot_Entry_Comment_Set(long long handle, long long val);
extern long long uniprot_Entry_DbReference_Get(long long handle);
extern void uniprot_Entry_DbReference_Set(long long handle, long long val);
extern long long uniprot_Entry_ProteinExistence_Get(long long handle);
extern void uniprot_Entry_ProteinExistence_Set(long long handle, long long val);
extern long long uniprot_Entry_Keyword_Get(long long handle);
extern void uniprot_Entry_Keyword_Set(long long handle, long long val);
extern long long uniprot_Entry_Feature_Get(long long handle);
extern void uniprot_Entry_Feature_Set(long long handle, long long val);
extern long long uniprot_Entry_Evidence_Get(long long handle);
extern void uniprot_Entry_Evidence_Set(long long handle, long long val);
extern long long uniprot_Entry_Sequence_Get(long long handle);
extern void uniprot_Entry_Sequence_Set(long long handle, long long val);
extern char* uniprot_Entry_Dataset_Get(long long handle);
extern void uniprot_Entry_Dataset_Set(long long handle, char* val);
extern long long uniprot_Entry_Created_Get(long long handle);
extern void uniprot_Entry_Created_Set(long long handle, long long val);
extern long long uniprot_Entry_Modified_Get(long long handle);
extern void uniprot_Entry_Modified_Set(long long handle, long long val);
extern long long uniprot_Entry_Version_Get(long long handle);
extern void uniprot_Entry_Version_Set(long long handle, long long val);
extern char* uniprot_Entry_UnmarshalXML(long long _handle, long long d, long long start);

// --- wrapping struct: uniprot.KeywordType ---
//
extern long long uniprot_KeywordType_CTor();
extern char* uniprot_KeywordType_Value_Get(long long handle);
extern void uniprot_KeywordType_Value_Set(long long handle, char* val);
extern long long uniprot_KeywordType_Evidence_Get(long long handle);
extern void uniprot_KeywordType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.GeneType ---
//
extern long long uniprot_GeneType_CTor();
extern long long uniprot_GeneType_Name_Get(long long handle);
extern void uniprot_GeneType_Name_Set(long long handle, long long val);

// --- wrapping struct: uniprot.IsoformType ---
//
extern long long uniprot_IsoformType_CTor();
extern long long uniprot_IsoformType_Id_Get(long long handle);
extern void uniprot_IsoformType_Id_Set(long long handle, long long val);
extern long long uniprot_IsoformType_Name_Get(long long handle);
extern void uniprot_IsoformType_Name_Set(long long handle, long long val);
extern long long uniprot_IsoformType_Sequence_Get(long long handle);
extern void uniprot_IsoformType_Sequence_Set(long long handle, long long val);
extern long long uniprot_IsoformType_Text_Get(long long handle);
extern void uniprot_IsoformType_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.NameListType ---
//
extern long long uniprot_NameListType_CTor();
extern long long uniprot_NameListType_Consortium_Get(long long handle);
extern void uniprot_NameListType_Consortium_Set(long long handle, long long val);
extern long long uniprot_NameListType_Person_Get(long long handle);
extern void uniprot_NameListType_Person_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ReactionType ---
//
extern long long uniprot_ReactionType_CTor();
extern char* uniprot_ReactionType_Text_Get(long long handle);
extern void uniprot_ReactionType_Text_Set(long long handle, char* val);
extern long long uniprot_ReactionType_DbReference_Get(long long handle);
extern void uniprot_ReactionType_DbReference_Set(long long handle, long long val);
extern long long uniprot_ReactionType_Evidence_Get(long long handle);
extern void uniprot_ReactionType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ImportedFromType ---
//
extern long long uniprot_ImportedFromType_CTor();
extern long long uniprot_ImportedFromType_DbReference_Get(long long handle);
extern void uniprot_ImportedFromType_DbReference_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Lineage ---
//
extern long long uniprot_Lineage_CTor();
extern long long uniprot_Lineage_Taxon_Get(long long handle);
extern void uniprot_Lineage_Taxon_Set(long long handle, long long val);

// --- wrapping struct: uniprot.StatusType ---
//
extern long long uniprot_StatusType_CTor();
extern char* uniprot_StatusType_Value_Get(long long handle);
extern void uniprot_StatusType_Value_Set(long long handle, char* val);
extern char* uniprot_StatusType_Status_Get(long long handle);
extern void uniprot_StatusType_Status_Set(long long handle, char* val);

// --- wrapping struct: uniprot.SubcellularLocationType ---
//
extern long long uniprot_SubcellularLocationType_CTor();
extern long long uniprot_SubcellularLocationType_Location_Get(long long handle);
extern void uniprot_SubcellularLocationType_Location_Set(long long handle, long long val);
extern long long uniprot_SubcellularLocationType_Topology_Get(long long handle);
extern void uniprot_SubcellularLocationType_Topology_Set(long long handle, long long val);
extern long long uniprot_SubcellularLocationType_Orientation_Get(long long handle);
extern void uniprot_SubcellularLocationType_Orientation_Set(long long handle, long long val);

// --- wrapping struct: uniprot.SubmittedName ---
//
extern long long uniprot_SubmittedName_CTor();
extern long long uniprot_SubmittedName_FullName_Get(long long handle);
extern void uniprot_SubmittedName_FullName_Set(long long handle, long long val);
extern long long uniprot_SubmittedName_EcNumber_Get(long long handle);
extern void uniprot_SubmittedName_EcNumber_Set(long long handle, long long val);

// --- wrapping struct: uniprot.CommentType ---
//
extern long long uniprot_CommentType_CTor();
extern char* uniprot_CommentType_Molecule_Get(long long handle);
extern void uniprot_CommentType_Molecule_Set(long long handle, char* val);
extern long long uniprot_CommentType_Absorption_Get(long long handle);
extern void uniprot_CommentType_Absorption_Set(long long handle, long long val);
extern long long uniprot_CommentType_Kinetics_Get(long long handle);
extern void uniprot_CommentType_Kinetics_Set(long long handle, long long val);
extern long long uniprot_CommentType_PhDependence_Get(long long handle);
extern void uniprot_CommentType_PhDependence_Set(long long handle, long long val);
extern long long uniprot_CommentType_RedoxPotential_Get(long long handle);
extern void uniprot_CommentType_RedoxPotential_Set(long long handle, long long val);
extern long long uniprot_CommentType_TemperatureDependence_Get(long long handle);
extern void uniprot_CommentType_TemperatureDependence_Set(long long handle, long long val);
extern long long uniprot_CommentType_Reaction_Get(long long handle);
extern void uniprot_CommentType_Reaction_Set(long long handle, long long val);
extern long long uniprot_CommentType_PhysiologicalReaction_Get(long long handle);
extern void uniprot_CommentType_PhysiologicalReaction_Set(long long handle, long long val);
extern long long uniprot_CommentType_Cofactor_Get(long long handle);
extern void uniprot_CommentType_Cofactor_Set(long long handle, long long val);
extern long long uniprot_CommentType_SubcellularLocation_Get(long long handle);
extern void uniprot_CommentType_SubcellularLocation_Set(long long handle, long long val);
extern long long uniprot_CommentType_Conflict_Get(long long handle);
extern void uniprot_CommentType_Conflict_Set(long long handle, long long val);
extern long long uniprot_CommentType_Link_Get(long long handle);
extern void uniprot_CommentType_Link_Set(long long handle, long long val);
extern long long uniprot_CommentType_Event_Get(long long handle);
extern void uniprot_CommentType_Event_Set(long long handle, long long val);
extern long long uniprot_CommentType_Isoform_Get(long long handle);
extern void uniprot_CommentType_Isoform_Set(long long handle, long long val);
extern long long uniprot_CommentType_Interactant_Get(long long handle);
extern void uniprot_CommentType_Interactant_Set(long long handle, long long val);
extern char uniprot_CommentType_OrganismsDiffer_Get(long long handle);
extern void uniprot_CommentType_OrganismsDiffer_Set(long long handle, char val);
extern long long uniprot_CommentType_Experiments_Get(long long handle);
extern void uniprot_CommentType_Experiments_Set(long long handle, long long val);
extern long long uniprot_CommentType_Disease_Get(long long handle);
extern void uniprot_CommentType_Disease_Set(long long handle, long long val);
extern long long uniprot_CommentType_Location_Get(long long handle);
extern void uniprot_CommentType_Location_Set(long long handle, long long val);
extern long long uniprot_CommentType_Text_Get(long long handle);
extern void uniprot_CommentType_Text_Set(long long handle, long long val);
extern char* uniprot_CommentType_Type_Get(long long handle);
extern void uniprot_CommentType_Type_Set(long long handle, char* val);
extern char* uniprot_CommentType_LocationType_Get(long long handle);
extern void uniprot_CommentType_LocationType_Set(long long handle, char* val);
extern char* uniprot_CommentType_Name_Get(long long handle);
extern void uniprot_CommentType_Name_Set(long long handle, char* val);
extern float uniprot_CommentType_Mass_Get(long long handle);
extern void uniprot_CommentType_Mass_Set(long long handle, float val);
extern char* uniprot_CommentType_Error_Get(long long handle);
extern void uniprot_CommentType_Error_Set(long long handle, char* val);
extern char* uniprot_CommentType_Method_Get(long long handle);
extern void uniprot_CommentType_Method_Set(long long handle, char* val);
extern long long uniprot_CommentType_Evidence_Get(long long handle);
extern void uniprot_CommentType_Evidence_Set(long long handle, long long val);
extern char* uniprot_CommentType_UnmarshalXML(long long _handle, long long d, long long start);

// --- wrapping struct: uniprot.EventType ---
//
extern long long uniprot_EventType_CTor();
extern char* uniprot_EventType_Type_Get(long long handle);
extern void uniprot_EventType_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.PositionType ---
//
extern long long uniprot_PositionType_CTor();
extern unsigned long long uniprot_PositionType_Position_Get(long long handle);
extern void uniprot_PositionType_Position_Set(long long handle, unsigned long long val);
extern char* uniprot_PositionType_Status_Get(long long handle);
extern void uniprot_PositionType_Status_Set(long long handle, char* val);
extern long long uniprot_PositionType_Evidence_Get(long long handle);
extern void uniprot_PositionType_Evidence_Set(long long handle, long long val);
extern char* uniprot_PositionType_UnmarshalXML(long long _handle, long long d, long long start);

// --- wrapping struct: uniprot.RedoxPotential ---
//
extern long long uniprot_RedoxPotential_CTor();
extern long long uniprot_RedoxPotential_Text_Get(long long handle);
extern void uniprot_RedoxPotential_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.CofactorType ---
//
extern long long uniprot_CofactorType_CTor();
extern char* uniprot_CofactorType_Name_Get(long long handle);
extern void uniprot_CofactorType_Name_Set(long long handle, char* val);
extern long long uniprot_CofactorType_DbReference_Get(long long handle);
extern void uniprot_CofactorType_DbReference_Set(long long handle, long long val);
extern long long uniprot_CofactorType_Evidence_Get(long long handle);
extern void uniprot_CofactorType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Conflict ---
//
extern long long uniprot_Conflict_CTor();
extern long long uniprot_Conflict_Sequence_Get(long long handle);
extern void uniprot_Conflict_Sequence_Set(long long handle, long long val);
extern char* uniprot_Conflict_Type_Get(long long handle);
extern void uniprot_Conflict_Type_Set(long long handle, char* val);

// --- wrapping struct: uniprot.Strain ---
//
extern long long uniprot_Strain_CTor();
extern char* uniprot_Strain_Value_Get(long long handle);
extern void uniprot_Strain_Value_Set(long long handle, char* val);
extern long long uniprot_Strain_Evidence_Get(long long handle);
extern void uniprot_Strain_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.ProteinType ---
//
extern long long uniprot_ProteinType_CTor();
extern long long uniprot_ProteinType_RecommendedName_Get(long long handle);
extern void uniprot_ProteinType_RecommendedName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_AlternativeName_Get(long long handle);
extern void uniprot_ProteinType_AlternativeName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_SubmittedName_Get(long long handle);
extern void uniprot_ProteinType_SubmittedName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_AllergenName_Get(long long handle);
extern void uniprot_ProteinType_AllergenName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_BiotechName_Get(long long handle);
extern void uniprot_ProteinType_BiotechName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_CdAntigenName_Get(long long handle);
extern void uniprot_ProteinType_CdAntigenName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_InnName_Get(long long handle);
extern void uniprot_ProteinType_InnName_Set(long long handle, long long val);
extern long long uniprot_ProteinType_Domain_Get(long long handle);
extern void uniprot_ProteinType_Domain_Set(long long handle, long long val);
extern long long uniprot_ProteinType_Component_Get(long long handle);
extern void uniprot_ProteinType_Component_Set(long long handle, long long val);

// --- wrapping struct: uniprot.RecommendedName ---
//
extern long long uniprot_RecommendedName_CTor();
extern long long uniprot_RecommendedName_FullName_Get(long long handle);
extern void uniprot_RecommendedName_FullName_Set(long long handle, long long val);
extern long long uniprot_RecommendedName_ShortName_Get(long long handle);
extern void uniprot_RecommendedName_ShortName_Set(long long handle, long long val);
extern long long uniprot_RecommendedName_EcNumber_Get(long long handle);
extern void uniprot_RecommendedName_EcNumber_Set(long long handle, long long val);

// --- wrapping struct: uniprot.SequenceType ---
//
extern long long uniprot_SequenceType_CTor();
extern char* uniprot_SequenceType_Value_Get(long long handle);
extern void uniprot_SequenceType_Value_Set(long long handle, char* val);
extern long long uniprot_SequenceType_Length_Get(long long handle);
extern void uniprot_SequenceType_Length_Set(long long handle, long long val);
extern long long uniprot_SequenceType_Mass_Get(long long handle);
extern void uniprot_SequenceType_Mass_Set(long long handle, long long val);
extern char* uniprot_SequenceType_Checksum_Get(long long handle);
extern void uniprot_SequenceType_Checksum_Set(long long handle, char* val);
extern long long uniprot_SequenceType_Modified_Get(long long handle);
extern void uniprot_SequenceType_Modified_Set(long long handle, long long val);
extern long long uniprot_SequenceType_Version_Get(long long handle);
extern void uniprot_SequenceType_Version_Set(long long handle, long long val);
extern char uniprot_SequenceType_Precursor_Get(long long handle);
extern void uniprot_SequenceType_Precursor_Set(long long handle, char val);
extern char* uniprot_SequenceType_Fragment_Get(long long handle);
extern void uniprot_SequenceType_Fragment_Set(long long handle, char* val);
extern char* uniprot_SequenceType_UnmarshalXML(long long _handle, long long d, long long start);

// --- wrapping struct: uniprot.Component ---
//
extern long long uniprot_Component_CTor();
extern long long uniprot_Component_RecommendedName_Get(long long handle);
extern void uniprot_Component_RecommendedName_Set(long long handle, long long val);
extern long long uniprot_Component_AlternativeName_Get(long long handle);
extern void uniprot_Component_AlternativeName_Set(long long handle, long long val);
extern long long uniprot_Component_SubmittedName_Get(long long handle);
extern void uniprot_Component_SubmittedName_Set(long long handle, long long val);
extern long long uniprot_Component_AllergenName_Get(long long handle);
extern void uniprot_Component_AllergenName_Set(long long handle, long long val);
extern long long uniprot_Component_BiotechName_Get(long long handle);
extern void uniprot_Component_BiotechName_Set(long long handle, long long val);
extern long long uniprot_Component_CdAntigenName_Get(long long handle);
extern void uniprot_Component_CdAntigenName_Set(long long handle, long long val);
extern long long uniprot_Component_InnName_Get(long long handle);
extern void uniprot_Component_InnName_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Domain ---
//
extern long long uniprot_Domain_CTor();
extern long long uniprot_Domain_RecommendedName_Get(long long handle);
extern void uniprot_Domain_RecommendedName_Set(long long handle, long long val);
extern long long uniprot_Domain_AlternativeName_Get(long long handle);
extern void uniprot_Domain_AlternativeName_Set(long long handle, long long val);
extern long long uniprot_Domain_SubmittedName_Get(long long handle);
extern void uniprot_Domain_SubmittedName_Set(long long handle, long long val);
extern long long uniprot_Domain_AllergenName_Get(long long handle);
extern void uniprot_Domain_AllergenName_Set(long long handle, long long val);
extern long long uniprot_Domain_BiotechName_Get(long long handle);
extern void uniprot_Domain_BiotechName_Set(long long handle, long long val);
extern long long uniprot_Domain_CdAntigenName_Get(long long handle);
extern void uniprot_Domain_CdAntigenName_Set(long long handle, long long val);
extern long long uniprot_Domain_InnName_Get(long long handle);
extern void uniprot_Domain_InnName_Set(long long handle, long long val);

// --- wrapping struct: uniprot.InteractantType ---
//
extern long long uniprot_InteractantType_CTor();
extern char* uniprot_InteractantType_Id_Get(long long handle);
extern void uniprot_InteractantType_Id_Set(long long handle, char* val);
extern char* uniprot_InteractantType_Label_Get(long long handle);
extern void uniprot_InteractantType_Label_Set(long long handle, char* val);
extern long long uniprot_InteractantType_DbReference_Get(long long handle);
extern void uniprot_InteractantType_DbReference_Set(long long handle, long long val);
extern char* uniprot_InteractantType_IntactId_Get(long long handle);
extern void uniprot_InteractantType_IntactId_Set(long long handle, char* val);

// --- wrapping struct: uniprot.Kinetics ---
//
extern long long uniprot_Kinetics_CTor();
extern long long uniprot_Kinetics_KM_Get(long long handle);
extern void uniprot_Kinetics_KM_Set(long long handle, long long val);
extern long long uniprot_Kinetics_Vmax_Get(long long handle);
extern void uniprot_Kinetics_Vmax_Set(long long handle, long long val);
extern long long uniprot_Kinetics_Text_Get(long long handle);
extern void uniprot_Kinetics_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Sequence ---
//
extern long long uniprot_Sequence_CTor();
extern char* uniprot_Sequence_Resource_Get(long long handle);
extern void uniprot_Sequence_Resource_Set(long long handle, char* val);
extern long long uniprot_Sequence_Version_Get(long long handle);
extern void uniprot_Sequence_Version_Set(long long handle, long long val);

// --- wrapping struct: uniprot.AlternativeName ---
//
extern long long uniprot_AlternativeName_CTor();
extern long long uniprot_AlternativeName_FullName_Get(long long handle);
extern void uniprot_AlternativeName_FullName_Set(long long handle, long long val);
extern long long uniprot_AlternativeName_ShortName_Get(long long handle);
extern void uniprot_AlternativeName_ShortName_Set(long long handle, long long val);
extern long long uniprot_AlternativeName_EcNumber_Get(long long handle);
extern void uniprot_AlternativeName_EcNumber_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Link ---
//
extern long long uniprot_Link_CTor();
extern char* uniprot_Link_Uri_Get(long long handle);
extern void uniprot_Link_Uri_Set(long long handle, char* val);

// --- wrapping struct: uniprot.PhDependence ---
//
extern long long uniprot_PhDependence_CTor();
extern long long uniprot_PhDependence_Text_Get(long long handle);
extern void uniprot_PhDependence_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.SourceDataType ---
//
extern long long uniprot_SourceDataType_CTor();
extern long long uniprot_SourceDataType_Strain_Get(long long handle);
extern void uniprot_SourceDataType_Strain_Set(long long handle, long long val);
extern long long uniprot_SourceDataType_Plasmid_Get(long long handle);
extern void uniprot_SourceDataType_Plasmid_Set(long long handle, long long val);
extern long long uniprot_SourceDataType_Transposon_Get(long long handle);
extern void uniprot_SourceDataType_Transposon_Set(long long handle, long long val);
extern long long uniprot_SourceDataType_Tissue_Get(long long handle);
extern void uniprot_SourceDataType_Tissue_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Uniprot ---
//
extern long long uniprot_Uniprot_CTor();
extern long long uniprot_Uniprot_Entry_Get(long long handle);
extern void uniprot_Uniprot_Entry_Set(long long handle, long long val);
extern char* uniprot_Uniprot_Copyright_Get(long long handle);
extern void uniprot_Uniprot_Copyright_Set(long long handle, char* val);

// --- wrapping struct: uniprot.CitationType ---
//
extern long long uniprot_CitationType_CTor();
extern char* uniprot_CitationType_Title_Get(long long handle);
extern void uniprot_CitationType_Title_Set(long long handle, char* val);
extern long long uniprot_CitationType_EditorList_Get(long long handle);
extern void uniprot_CitationType_EditorList_Set(long long handle, long long val);
extern long long uniprot_CitationType_AuthorList_Get(long long handle);
extern void uniprot_CitationType_AuthorList_Set(long long handle, long long val);
extern char* uniprot_CitationType_Locator_Get(long long handle);
extern void uniprot_CitationType_Locator_Set(long long handle, char* val);
extern long long uniprot_CitationType_DbReference_Get(long long handle);
extern void uniprot_CitationType_DbReference_Set(long long handle, long long val);
extern char* uniprot_CitationType_Type_Get(long long handle);
extern void uniprot_CitationType_Type_Set(long long handle, char* val);
extern char* uniprot_CitationType_Date_Get(long long handle);
extern void uniprot_CitationType_Date_Set(long long handle, char* val);
extern char* uniprot_CitationType_Name_Get(long long handle);
extern void uniprot_CitationType_Name_Set(long long handle, char* val);
extern char* uniprot_CitationType_Volume_Get(long long handle);
extern void uniprot_CitationType_Volume_Set(long long handle, char* val);
extern char* uniprot_CitationType_First_Get(long long handle);
extern void uniprot_CitationType_First_Set(long long handle, char* val);
extern char* uniprot_CitationType_Last_Get(long long handle);
extern void uniprot_CitationType_Last_Set(long long handle, char* val);
extern char* uniprot_CitationType_Publisher_Get(long long handle);
extern void uniprot_CitationType_Publisher_Set(long long handle, char* val);
extern char* uniprot_CitationType_City_Get(long long handle);
extern void uniprot_CitationType_City_Set(long long handle, char* val);
extern char* uniprot_CitationType_Db_Get(long long handle);
extern void uniprot_CitationType_Db_Set(long long handle, char* val);
extern char* uniprot_CitationType_Number_Get(long long handle);
extern void uniprot_CitationType_Number_Set(long long handle, char* val);
extern char* uniprot_CitationType_Institute_Get(long long handle);
extern void uniprot_CitationType_Institute_Set(long long handle, char* val);
extern char* uniprot_CitationType_Country_Get(long long handle);
extern void uniprot_CitationType_Country_Set(long long handle, char* val);

// --- wrapping struct: uniprot.GeneLocationType ---
//
extern long long uniprot_GeneLocationType_CTor();
extern long long uniprot_GeneLocationType_Name_Get(long long handle);
extern void uniprot_GeneLocationType_Name_Set(long long handle, long long val);
extern char* uniprot_GeneLocationType_Type_Get(long long handle);
extern void uniprot_GeneLocationType_Type_Set(long long handle, char* val);
extern long long uniprot_GeneLocationType_Evidence_Get(long long handle);
extern void uniprot_GeneLocationType_Evidence_Set(long long handle, long long val);

// --- wrapping struct: uniprot.PersonType ---
//
extern long long uniprot_PersonType_CTor();
extern char* uniprot_PersonType_Name_Get(long long handle);
extern void uniprot_PersonType_Name_Set(long long handle, char* val);

// --- wrapping struct: uniprot.TemperatureDependence ---
//
extern long long uniprot_TemperatureDependence_CTor();
extern long long uniprot_TemperatureDependence_Text_Get(long long handle);
extern void uniprot_TemperatureDependence_Text_Set(long long handle, long long val);

// --- wrapping struct: uniprot.Tissue ---
//
extern long long uniprot_Tissue_CTor();
extern char* uniprot_Tissue_Value_Get(long long handle);
extern void uniprot_Tissue_Value_Set(long long handle, char* val);
extern long long uniprot_Tissue_Evidence_Get(long long handle);
extern void uniprot_Tissue_Evidence_Set(long long handle, long long val);

// --- wrapping slice: uniprot.IntListType ---
//
extern long long uniprot_IntListType_CTor();
extern GoInt uniprot_IntListType_len(long long handle);
extern long long uniprot_IntListType_elem(long long handle, GoInt _idx);
extern long long uniprot_IntListType_subslice(long long handle, GoInt _st, GoInt _ed);
extern void uniprot_IntListType_set(long long handle, GoInt _idx, long long _vl);
extern void uniprot_IntListType_append(long long handle, long long _vl);
extern char* uniprot_IntListType_UnmarshalText(long long _handle, long long text);

#ifdef __cplusplus
}
#endif
