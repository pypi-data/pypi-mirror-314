Provide extra Entropy, to improve the randomness of your Seed.

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 Controls  Extra Entropy  Description                                      
───────────────────────────────────────────────────────────────────────────
 Create    None           No extra randness; you trust ours completely. :) 
 Recover   Die Rolls, …   Provide any data; we'll SHA-512 hash it          
 Pro       Hex            Provide raw hex data from an external source     
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

It is wise not to trust *anyone* (including this program) to provide
randomness for your Seed!  Many wallet tools have been made that produce
a "predictable" Seed (mostly pre-defined, with a small amount of
randomness added to make them seem legitimate.)  Then, after you derive
your addresses and fund your wallets, the attacker who created the tool
can also easily derive your private keys, and steal your Cryptocurrency.

All Seed Source and Extra Randomness are combined using XOR, which you
can confirm visually (if you understand hexadecimal representation).


1 None
══════

  We are using Python's `secrets.token_bytes', which is designed to
  provide cryptographically [strong random] numbers, to produce entropy
  for your Seed.

  So, using the default Random Seed source should be fine for most
  purposes.


[strong random] <https://docs.python.org/3/library/secrets.html>


2 Die Rolls, …
══════════════

  For higher security, provide yourself with a source of high-quality
  randomness.

  A couple hand-fulls of high-quality dice is a good option.  Roll 'em,
  and enter them here.

  We will SHA-512 hash them; you can confirm our [SHA-512] results here,
  to prove we aren't lying.


[SHA-512] <https://emn178.github.io/online-tools/sha512.html>
