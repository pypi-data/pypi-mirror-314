Metadata-Version: 2.1
Name: schemantis
Version: 0.1.5
Summary: A python client for schemantis api
Author-email: James Rao <james@10xtech.ca>
Project-URL: Homepage, https://git.10xtech.ca/root/schemantis-docs
Project-URL: Bug Tracker, https://git.10xtech.ca/root/schemantis-docs
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Requires-Dist: pydantic
Requires-Dist: python-dateutil
Requires-Dist: urllib3

# schemantis
This the documentation for the Schemantis REST API.

The `schemantis` package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.0
- Package version: 1.0.0
- Generator version: 7.7.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.7+

## Installation & Usage

This python library package is generated without supporting files like setup.py or requirements files

To be able to use it, you will need these dependencies in your own package that uses this library:

* urllib3 >= 1.25.3
* python-dateutil
* pydantic

## Getting Started

In your own code, to use this library to connect and interact with schemantis,
you can run the following:

```python

import schemantis
from schemantis.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to https://api.schemantis.ca
# See configuration.py for a list of all supported configuration parameters.
configuration = schemantis.Configuration(
    host = "https://api.schemantis.ca"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure API key authorization: api_key
configuration.api_key['api_key'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['api_key'] = 'Bearer'


# Enter a context with an instance of the API client
with schemantis.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = schemantis.DefaultApi(api_client)
    map_id = 'map_id_example' # str | The ID of the map to retrieve (optional)
    map_name = 'map_name_example' # str | The name of the map to retrieve (optional)

    try:
        # retrieve map with optional configurable formatting
        api_response = api_instance.retrieve_map_get(map_id=map_id, map_name=map_name)
        print("The response of DefaultApi->retrieve_map_get:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling DefaultApi->retrieve_map_get: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *https://api.schemantis.ca*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*DefaultApi* | [**retrieve_map_get**](schemantis/docs/DefaultApi.md#retrieve_map_get) | **GET** /retrieve-map | retrieve map with optional configurable formatting
*DefaultApi* | [**update_schema_post**](schemantis/docs/DefaultApi.md#update_schema_post) | **POST** /update-schema | update schema


## Documentation For Models

 - [Edge](schemantis/docs/Edge.md)
 - [ModelSchema](schemantis/docs/ModelSchema.md)
 - [Node](schemantis/docs/Node.md)
 - [RetrieveMapGet200Response](schemantis/docs/RetrieveMapGet200Response.md)
 - [RetrieveMapGet200ResponseIntermediate](schemantis/docs/RetrieveMapGet200ResponseIntermediate.md)
 - [RetrieveMapGet200ResponseSource](schemantis/docs/RetrieveMapGet200ResponseSource.md)
 - [UpdateSchemaPost200Response](schemantis/docs/UpdateSchemaPost200Response.md)
 - [UpdateSchemaPostRequest](schemantis/docs/UpdateSchemaPostRequest.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="api_key"></a>
### api_key

- **Type**: API key
- **API key parameter name**: x-api-key
- **Location**: HTTP header


## Author




