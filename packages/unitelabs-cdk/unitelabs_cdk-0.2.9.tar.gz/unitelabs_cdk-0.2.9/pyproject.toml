[tool.poetry]
name = "unitelabs-cdk"
version = "0.2.9"
description = "A framework to develop UniteLabs connectors based on the SiLA 2 standard specification."
license = "MIT"
authors = ["UniteLabs <developers+cdk@unitelabs.io>"]
readme = "README.md"
homepage = "https://unitelabs.io"
repository = "https://gitlab.com/unitelabs/dev-tools/python-cdk"
documentation = "https://gitlab.com/unitelabs/dev-tools/python-cdk/-/tree/main/docs/"
keywords = ["UniteLabs", "SiLA 2", "laboratory", "automation", "connectivity"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Healthcare Industry",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
]
packages = [{include = "unitelabs", from = "src"}]

[tool.poetry.urls]
"Bug Tracker" = "https://gitlab.com/unitelabs/dev-tools/python-cdk/-/issues"

[tool.poetry.scripts]
certificate = 'unitelabs.cdk.cli:certificate'
connector = 'unitelabs.cdk.cli:connector'

[tool.poetry.dependencies]
python = "^3.9"
click = "8.1.7"
deprecated = "1.2.14"
pydantic_settings = "2.1.0"
python-dotenv = "1.0.1"
pyyaml = "6.0.2"
unitelabs-sila = "^0.1.7"

[tool.poetry.group.dev.dependencies]
pytest = "7.4.4"
pytest-asyncio = "0.23.3"
pytest-cov = "4.1.0"
ruff = "0.7.4"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
unitelabs-jsondocs = {version="0.1.1", source="unitelabs"}

[[tool.poetry.source]]
name = "unitelabs"
url = "https://gitlab.com/api/v4/groups/1009252/-/packages/pypi/simple"
priority = "supplemental"

[tool.ruff]
src = ["src", "tests"]
line-length = 120
target-version = "py39"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["test"]
asyncio_mode = "auto"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "@typing.overload",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
