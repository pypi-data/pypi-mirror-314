Metadata-Version: 2.1
Name: ilimikudi
Version: 0.3.1
Summary: Datasets for Gen AI customer care and data processing for Nigerian Banks and Fintech
Author: thelaycon
Author-email: tobitobitobiwhy@gmail.com
Requires-Python: >=3.10,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Dist: drissionpage (>=4.1.0.13,<5.0.0.0)
Requires-Dist: mamaduck (>=1.0.1,<2.0.0)
Requires-Dist: pandas (>=2.2.2,<3.0.0)
Requires-Dist: playwright (>=1.49.1,<2.0.0)
Requires-Dist: tiktoken (>=0.8.0,<0.9.0)
Description-Content-Type: text/markdown

# IlimiKudi

**IlimiKudi** provides access to Fintech and Banking datasets like blog posts and support articles from platforms such as GTBank, Paystack, Moniepoint, and OPay. It is designed for use in AI-powered customer applications, including retrieval-augmented generation (RAG) for NLP.

## Features
- Access datasets stored in CSV format.
- Query an integrated database with multiple data sources.

## Installation

Install the required dependencies via `pip`:

```bash
pip install pandas duckdb
```

## Usage

### Accessing CSV Datasets

Load datasets using the following classes:

```python
from ilimikudi import GTBSupportPosts

# Access GTB Support Posts data
gtb_posts = GTBSupportPosts()
data = gtb_posts.get_data()  # Return as pandas DataFrame
print(data.head())
```

Available classes for CSV files:
- `GTBSupportPosts`
- `MergedData`
- `MoniepointBlogPosts`
- `OpayBlogPosts`
- `PaystackBlogPosts`
- `PaystackSupportPosts`

### Querying the Integrated Database

Query the integrated database:

```python
from ilimikudi import MergedDB

# Query the integrated database
db = MergedDB()
result = db.query()  # Default: SELECT * FROM unified
print(result.head())
```

Custom queries can also be executed:

```python
custom_query = "SELECT column_name FROM unified WHERE condition"
result = db.query(custom_query)
print(result)
```

## License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

