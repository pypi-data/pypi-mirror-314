Metadata-Version: 2.1
Name: acia
Version: 0.2.37
Summary: The acia library provides utility functionality for analyzing 2D+t time-lapse image sequences in microfluidic live-cell imaging experiments.
Home-page: https://github.com/JojoDevel/acia
Author: Johannes Seiffarth
Author-email: j.seiffarth@fz-juelich.de
License: MIT license
Keywords: acia
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Python: >=3.6
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: shapely<2.0.0,>=1.8.0
Requires-Dist: tqdm>=4.61.2
Requires-Dist: opencv-python-headless==4.5.5.64
Requires-Dist: rtree>=0.9.7
Requires-Dist: pillow>=8.3.1
Requires-Dist: scikit-learn>=1.0
Requires-Dist: scikit-image>=0.19.1
Requires-Dist: seaborn>=0.11.2
Requires-Dist: roifile>=2021.6.6
Requires-Dist: tifffile==2020.11.18
Requires-Dist: pycocotools==2.0.7
Requires-Dist: pint>=0.18
Requires-Dist: papermill>=2.4.0
Requires-Dist: numpy<2.0.0,>=1.23.1
Requires-Dist: rasterio>=1.3.6
Requires-Dist: moviepy==1.0.3
Requires-Dist: retry==0.9.2
Provides-Extra: omero
Requires-Dist: omero-py>=5.9.3; extra == "omero"

# **acia**: Automated single-cell image analysis

![pipeline](https://jugit.fz-juelich.de/IBG-1/ModSim/imageanalysis/acia/badges/master/pipeline.svg)
![coverage](https://jugit.fz-juelich.de/IBG-1/ModSim/imageanalysis/acia/badges/master/coverage.svg)

The `acia` library provides utility functionality for analysing 2D+t time-lapse image sequences in microfluidic live-cell imaging experiments. It provides:
- Abstraction for various image sources (local, OMERO)
- automated image analysis for instance segmentation and tracking
- automated and unit-aware single-object property extraction.

Although the funtionality is developed with microfluidic applications in mind, the library can be used for any objects detected in images.

## Installation

Install `acia` from pypi:

```bash
pip install acia
```


## Developers

1. Clone this repository
    ```bash
    git clone https://jugit.fz-juelich.de/IBG-1/ModSim/imageanalysis/acia
    ```

2. Create the conda environment (including dependencies) and install `acia`

    ```bash
    conda env create -f conda.yaml
    conda activate acia
    pip install -e .
    ```
