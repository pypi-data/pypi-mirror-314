[project]
name = "PyPackIT-Test1"
description = "A New Python Project"
keywords = [
    "First Keyword",
    "Second Keyword",
    "Third Keyword",
    "Fourth Keyword",
    "Fifth Keyword",
    "Sixth Keyword",
]
classifiers = [
    "Natural Language :: English",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: OS Independent",
    "Development Status :: 4 - Beta",
    "Typing :: Typed",
]
authors = [
    {name = "Armin Ariamajd", email = "armiariam@gmail.com"},
]
maintainers = [
    {name = "Armin Ariamajd", email = "armiariam@gmail.com"},
]
requires-python = ">=3.10"
dependencies = [
    "pkgdata",
]
dynamic = [
    "version",
]
license = {text = "MIT"}

[project.urls]
Homepage = "https://AAriam.github.io/PyPackIT-Test1"
Documentation = "https://AAriam.github.io/PyPackIT-Test1/manual"
Source = "https://github.com/AAriam/PyPackIT-Test1"
Download = "https://github.com/AAriam/PyPackIT-Test1/releases"
News = "https://AAriam.github.io/PyPackIT-Test1/news"
Issue-Tracker = "https://github.com/AAriam/PyPackIT-Test1/issues"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.scripts]
PyPackIT-Test1 = "pypackit_test1.__main__:main"

[build-system]
requires = [
    "setuptools >=72.1.0",
    "versioningit >=3.1.2",
]
build-backend = "setuptools.build_meta"

[tool]
[tool.setuptools]
include-package-data = true
license-files = ["LICENSES/*", "COPYRIGHTS/*"]

[tool.setuptools.packages.find]
where = ["src"]
namespaces = true

[tool.setuptools.cmdclass]
build_py = "versioningit.cmdclass.build_py"
sdist = "versioningit.cmdclass.sdist"

[tool.versioningit]
[tool.versioningit.vcs]
method = "git"
match = ["ver/[0-9]*.[0-9]*.[0-9]*"]
default-tag = "ver/0.0.0"

[tool.versioningit.tag2version]
rmprefix = "ver/"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}"
dirty = "{base_version}+0.{committer_date:%Y.%m.%d}.{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{committer_date:%Y.%m.%d}.{rev}.dirty"

[tool.versioningit.onbuild]
method = "replace-version"
regex = "^__version_details__: dict\\[str, str\\] = (?P<version>.*)"
require-match = true
source-file = "src/pypackit_test1/__init__.py"
build-file = "pypackit_test1/__init__.py"
replacement = "{{ \"version\": \"{version}\", \"build_date\": \"{build_date:%Y.%m.%d}\", \"committer_date\": \"{committer_date:%Y.%m.%d}\", \"author_date\": \"{author_date:%Y.%m.%d}\", \"branch\": \"{branch}\", \"distance\": \"{distance}\", \"commit_hash\": \"{revision}\" }}"
