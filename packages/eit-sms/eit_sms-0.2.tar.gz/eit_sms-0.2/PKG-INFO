Metadata-Version: 2.1
Name: eit-sms
Version: 0.2
Summary: A Django app to scaffold SMS functions.
Author-email: Kalume Kitsao <kalumewakitsao@gmail.com>
Project-URL: Homepage, https://github.com/kalumewakitsao/eit-sms
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Framework :: Django :: 4.2
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Requires-Python: >=3.9
Description-Content-Type: text/x-rst
License-File: LICENSE
Requires-Dist: dj-database-url
Requires-Dist: Django>=3.2.4
Requires-Dist: ipython
Requires-Dist: djangorestframework
Requires-Dist: django-extensions
Requires-Dist: django-filter
Requires-Dist: psycopg2-binary

=======
eit-sms
=======

eit-sms is a Django app that aims at scaffolding the common functionality of
sending SMS from a parent Django application. It allows you to define configs
and flow by which you would like to send SMSs, whether synchronous or asynchronous.

Quick start
-----------

1. Add "eit_sms" to your INSTALLED_APPS setting like this::

    INSTALLED_APPS = [
        ...,
        "eit_sms",
    ]

2. Include the polls URLconf in your project urls.py like this::

    path("sms/", include("eit_sms.urls")),

3. Run ``python manage.py migrate`` to create the models.

