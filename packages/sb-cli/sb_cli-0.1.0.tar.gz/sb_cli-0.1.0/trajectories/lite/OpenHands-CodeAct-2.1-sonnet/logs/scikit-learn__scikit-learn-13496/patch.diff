diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..5af164895
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,28 @@
+import numpy as np
+from sklearn.ensemble import IsolationForest
+
+# Generate sample data
+rng = np.random.RandomState(42)
+X = rng.randn(100, 2)
+
+# Create and fit initial model
+clf = IsolationForest(n_estimators=10, random_state=42)
+clf.fit(X)
+print("Initial number of trees:", len(clf.estimators_))
+
+# Try to add more trees
+clf.n_estimators = 15
+clf.fit(X)  # This should reset all trees since warm_start=False by default
+print("Number of trees after second fit:", len(clf.estimators_))
+
+# Now try with warm_start
+clf = IsolationForest(n_estimators=10, random_state=42)
+# This should work since warm_start is inherited from BaseBagging
+clf.warm_start = True  
+clf.fit(X)
+print("\nWith warm_start:")
+print("Initial number of trees:", len(clf.estimators_))
+
+clf.n_estimators = 15
+clf.fit(X)  # This should add 5 more trees
+print("Number of trees after second fit:", len(clf.estimators_))
\ No newline at end of file
diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py
index 8a1bd3625..f42c80532 100644
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -120,6 +120,11 @@ class IsolationForest(BaseBagging, OutlierMixin):
     verbose : int, optional (default=0)
         Controls the verbosity of the tree building process.
 
+    warm_start : bool, optional (default=False)
+        When set to ``True``, reuse the solution of the previous call to fit
+        and add more estimators to the ensemble, otherwise, just fit a whole
+        new forest. See :term:`the Glossary <warm_start>`.
+
 
     Attributes
     ----------
@@ -173,7 +178,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
                  n_jobs=None,
                  behaviour='old',
                  random_state=None,
-                 verbose=0):
+                 verbose=0,
+                 warm_start=False):
         super().__init__(
             base_estimator=ExtraTreeRegressor(
                 max_features=1,
@@ -187,7 +193,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
             max_features=max_features,
             n_jobs=n_jobs,
             random_state=random_state,
-            verbose=verbose)
+            verbose=verbose,
+            warm_start=warm_start)
 
         self.behaviour = behaviour
         self.contamination = contamination
