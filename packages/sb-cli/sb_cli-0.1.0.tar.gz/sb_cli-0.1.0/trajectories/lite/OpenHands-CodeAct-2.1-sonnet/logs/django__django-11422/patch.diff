diff --git a/django/utils/autoreload.py b/django/utils/autoreload.py
index 7ca0d68fae..4abe1fb0bd 100644
--- a/django/utils/autoreload.py
+++ b/django/utils/autoreload.py
@@ -221,6 +221,9 @@ class BaseReloader:
         self.extra_files = set()
         self.directory_globs = defaultdict(set)
         self._stop_condition = threading.Event()
+        # Add the current script to watched files since it may not be in sys.modules
+        if sys.argv[0]:
+            self.watch_file(Path(sys.argv[0]).absolute())
 
     def watch_dir(self, path, glob):
         path = Path(path)
diff --git a/test_project/manage.py b/test_project/manage.py
new file mode 100755
index 0000000000..dd63f98503
--- /dev/null
+++ b/test_project/manage.py
@@ -0,0 +1,19 @@
+#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    print('Modified message')  # Changed to test reloading
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_project.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed and "
+            "available on your PYTHONPATH environment variable? Did you "
+            "forget to activate a virtual environment?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
\ No newline at end of file
diff --git a/test_project/server.log b/test_project/server.log
new file mode 100644
index 0000000000..3ed2ee7822
--- /dev/null
+++ b/test_project/server.log
@@ -0,0 +1,29 @@
+Watching for file changes with StatReloader
+Exception in thread django-main-thread:
+Traceback (most recent call last):
+  File "/opt/miniconda3/envs/testbed/lib/python3.6/threading.py", line 916, in _bootstrap_inner
+    self.run()
+  File "/opt/miniconda3/envs/testbed/lib/python3.6/threading.py", line 864, in run
+    self._target(*self._args, **self._kwargs)
+  File "/testbed/django/utils/autoreload.py", line 54, in wrapper
+    fn(*args, **kwargs)
+  File "/testbed/django/core/management/commands/runserver.py", line 117, in inner_run
+    self.check(display_num_errors=True)
+  File "/testbed/django/core/management/base.py", line 441, in check
+    raise SystemCheckError(msg)
+django.core.management.base.SystemCheckError: SystemCheckError: System check identified some issues:
+
+ERRORS:
+?: (admin.E403) A 'django.template.backends.django.DjangoTemplates' instance must be configured in TEMPLATES in order to use the admin application.
+?: (admin.E408) 'django.contrib.auth.middleware.AuthenticationMiddleware' must be in MIDDLEWARE in order to use the admin application.
+?: (admin.E409) 'django.contrib.messages.middleware.MessageMiddleware' must be in MIDDLEWARE in order to use the admin application.
+?: (admin.E410) 'django.contrib.sessions.middleware.SessionMiddleware' must be in MIDDLEWARE in order to use the admin application.
+
+System check identified 4 issues (0 silenced).
+
+/testbed/test_project/manage.py changed, reloading.
+Initial message
+Performing system checks...
+
+Watching for file changes with StatReloader
+Initial message
diff --git a/test_project/test_project/__init__.py b/test_project/test_project/__init__.py
new file mode 100644
index 0000000000..a9ace3a2ae
--- /dev/null
+++ b/test_project/test_project/__init__.py
@@ -0,0 +1 @@
+# Empty __init__.py
\ No newline at end of file
diff --git a/test_project/test_project/settings.py b/test_project/test_project/settings.py
new file mode 100644
index 0000000000..ec2fcca72f
--- /dev/null
+++ b/test_project/test_project/settings.py
@@ -0,0 +1,21 @@
+SECRET_KEY = 'dummy'
+DEBUG = True
+ALLOWED_HOSTS = []
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+MIDDLEWARE = []
+ROOT_URLCONF = 'test_project.urls'
+TEMPLATES = []
+DATABASES = {'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': 'db.sqlite3'}}
+LANGUAGE_CODE = 'en-us'
+TIME_ZONE = 'UTC'
+USE_I18N = True
+USE_L10N = True
+USE_TZ = True
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/test_project/test_project/urls.py b/test_project/test_project/urls.py
new file mode 100644
index 0000000000..a848dfb64f
--- /dev/null
+++ b/test_project/test_project/urls.py
@@ -0,0 +1,3 @@
+from django.urls import path
+
+urlpatterns = []
\ No newline at end of file
