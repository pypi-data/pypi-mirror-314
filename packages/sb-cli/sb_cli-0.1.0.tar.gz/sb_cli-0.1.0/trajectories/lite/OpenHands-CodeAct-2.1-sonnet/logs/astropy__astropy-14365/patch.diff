diff --git a/astropy/io/ascii/qdp.py b/astropy/io/ascii/qdp.py
index 83a4f004aa..5f3a3621ec 100644
--- a/astropy/io/ascii/qdp.py
+++ b/astropy/io/ascii/qdp.py
@@ -60,7 +60,7 @@ def _line_type(line, delimiter=None):
     ValueError: Unrecognized QDP line...
     """
     _decimal_re = r"[+-]?(\d+(\.\d*)?|\.\d+)([eE][+-]?\d+)?"
-    _command_re = r"READ [TS]ERR(\s+[0-9]+)+"
+    _command_re = r"(?i)READ [TS]ERR(\s+[0-9]+)+"
 
     sep = delimiter
     if delimiter is None:
diff --git a/test.qdp b/test.qdp
new file mode 100644
index 0000000000..bf56ad45a2
--- /dev/null
+++ b/test.qdp
@@ -0,0 +1,2 @@
+read TERR 1
+1 0.5 -0.5
diff --git a/test_qdp.py b/test_qdp.py
new file mode 100644
index 0000000000..03e71b7db7
--- /dev/null
+++ b/test_qdp.py
@@ -0,0 +1,9 @@
+from astropy.table import Table
+
+# Create test QDP file
+with open('test.qdp', 'w') as f:
+    f.write('read serr 1 2\n')
+    f.write('1 0.5 1 0.5\n')
+
+# Try to read it
+table = Table.read('test.qdp', format='ascii.qdp')
\ No newline at end of file
diff --git a/test_qdp_edge_cases.py b/test_qdp_edge_cases.py
new file mode 100644
index 0000000000..75e9592515
--- /dev/null
+++ b/test_qdp_edge_cases.py
@@ -0,0 +1,25 @@
+from astropy.table import Table
+
+# Test various case combinations
+test_cases = [
+    ('READ SERR 1 2', '1 0.5 1 0.5'),  # Original uppercase SERR
+    ('read serr 1 2', '1 0.5 1 0.5'),  # All lowercase SERR
+    ('Read Serr 1 2', '1 0.5 1 0.5'),  # Title case SERR
+    ('ReAd SeRr 1 2', '1 0.5 1 0.5'),  # Mixed case SERR
+    ('READ terr 1', '1 0.5 -0.5'),  # Mixed case with TERR (needs 3 columns)
+    ('read TERR 1', '1 0.5 -0.5'),  # Mixed case with TERR (needs 3 columns)
+]
+
+for i, (command, data) in enumerate(test_cases):
+    print(f"\nTesting case {i + 1}: {command}")
+    # Create test QDP file
+    with open('test.qdp', 'w') as f:
+        f.write(f'{command}\n')
+        f.write(f'{data}\n')
+
+    # Try to read it
+    try:
+        table = Table.read('test.qdp', format='ascii.qdp')
+        print("Success!")
+    except Exception as e:
+        print(f"Failed with error: {str(e)}")
\ No newline at end of file
