diff --git a/lib/mpl_toolkits/mplot3d/art3d.py b/lib/mpl_toolkits/mplot3d/art3d.py
index 8fe6e7a9c1..f8533c271f 100644
--- a/lib/mpl_toolkits/mplot3d/art3d.py
+++ b/lib/mpl_toolkits/mplot3d/art3d.py
@@ -708,6 +708,7 @@ class Poly3DCollection(PolyCollection):
                 raise ValueError('verts must be a list of (N, 3) array-like')
         self.set_zsort(zsort)
         self._codes3d = None
+        self._facecolors2d = None  # Initialize to None
 
     _zsort_functions = {
         'average': np.average,
@@ -867,6 +868,9 @@ class Poly3DCollection(PolyCollection):
         self.stale = True
 
     def get_facecolor(self):
+        # Return 3D colors if 2D colors haven't been computed yet
+        if self._facecolors2d is None:
+            return self._facecolor3d
         return self._facecolors2d
 
     def get_edgecolor(self):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..883ceebe09
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,13 @@
+import numpy as np
+import matplotlib.tri as mtri
+import matplotlib.pyplot as plt
+from mpl_toolkits.mplot3d import Axes3D
+
+y,x = np.ogrid[1:10:100j, 1:10:100j]
+z2 = np.cos(x)**3 - np.sin(y)**2
+fig = plt.figure()
+ax = fig.add_subplot(111, projection='3d')
+r = ax.plot_surface(x,y,z2, cmap='hot')
+print("Attempting to get face colors...")
+colors = r.get_facecolors()
+print("Face colors:", colors)
\ No newline at end of file
