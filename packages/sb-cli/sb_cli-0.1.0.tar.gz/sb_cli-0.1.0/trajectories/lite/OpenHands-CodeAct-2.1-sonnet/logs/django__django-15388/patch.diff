diff --git a/django/template/autoreload.py b/django/template/autoreload.py
index cf1b20ba95..7faf778498 100644
--- a/django/template/autoreload.py
+++ b/django/template/autoreload.py
@@ -19,16 +19,19 @@ def get_template_directories():
         if not isinstance(backend, DjangoTemplates):
             continue
 
-        items.update(cwd / to_path(dir) for dir in backend.engine.dirs)
+        # Handle both absolute and relative paths
+        for dir in backend.engine.dirs:
+            path = to_path(dir)
+            items.add(path if path.is_absolute() else cwd / path)
 
         for loader in backend.engine.template_loaders:
             if not hasattr(loader, 'get_dirs'):
                 continue
-            items.update(
-                cwd / to_path(directory)
-                for directory in loader.get_dirs()
-                if not is_django_path(directory)
-            )
+            for directory in loader.get_dirs():
+                if is_django_path(directory):
+                    continue
+                path = to_path(directory)
+                items.add(path if path.is_absolute() else cwd / path)
     return items
 
 
diff --git a/repro.py b/repro.py
new file mode 100644
index 0000000000..336d532b48
--- /dev/null
+++ b/repro.py
@@ -0,0 +1,142 @@
+import os
+import sys
+import tempfile
+import time
+from pathlib import Path
+
+# Create a test project structure
+with tempfile.TemporaryDirectory() as temp_dir:
+    # Create project structure
+    project_dir = Path(temp_dir) / "testproject"
+    project_dir.mkdir()
+    
+    # Create manage.py
+    with open(project_dir / "manage.py", "w") as f:
+        f.write('''#!/usr/bin/env python
+import os
+import sys
+
+def main():
+    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'testproject.settings')
+    try:
+        from django.core.management import execute_from_command_line
+    except ImportError as exc:
+        raise ImportError(
+            "Couldn't import Django. Are you sure it's installed?"
+        ) from exc
+    execute_from_command_line(sys.argv)
+
+if __name__ == '__main__':
+    main()
+''')
+    
+    # Create project package
+    project_package = project_dir / "testproject"
+    project_package.mkdir()
+    
+    # Create __init__.py
+    with open(project_package / "__init__.py", "w") as f:
+        f.write("")
+    
+    # Create settings.py with BASE_DIR in TEMPLATES
+    with open(project_package / "settings.py", "w") as f:
+        f.write('''import os
+from pathlib import Path
+
+BASE_DIR = Path(__file__).resolve().parent.parent
+
+SECRET_KEY = 'dummy-key-for-test'
+DEBUG = True
+ALLOWED_HOSTS = []
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+]
+
+MIDDLEWARE = [
+    'django.middleware.security.SecurityMiddleware',
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+    'django.middleware.clickjacking.XFrameOptionsMiddleware',
+]
+
+ROOT_URLCONF = 'testproject.urls'
+
+TEMPLATES = [
+    {
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'DIRS': [BASE_DIR],  # This is the problematic line
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    },
+]
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': BASE_DIR / 'db.sqlite3',
+    }
+}
+
+LANGUAGE_CODE = 'en-us'
+TIME_ZONE = 'UTC'
+USE_I18N = True
+USE_TZ = True
+STATIC_URL = 'static/'
+DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
+''')
+    
+    # Create urls.py
+    with open(project_package / "urls.py", "w") as f:
+        f.write('''from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
+''')
+    
+    # Create a test template
+    templates_dir = project_dir / "templates"
+    templates_dir.mkdir()
+    with open(templates_dir / "test.html", "w") as f:
+        f.write("<html><body>Test template</body></html>")
+    
+    # Change to project directory
+    os.chdir(project_dir)
+    
+    # Start Django development server
+    from django.core.management import execute_from_command_line
+    
+    # Run the server in a separate process
+    import subprocess
+    server_process = subprocess.Popen([sys.executable, "manage.py", "runserver", "--noreload"])
+    
+    # Wait a bit for server to start
+    time.sleep(2)
+    
+    # Modify the template file
+    with open(templates_dir / "test.html", "w") as f:
+        f.write("<html><body>Modified template</body></html>")
+    
+    # Wait a bit to see if server reloads
+    time.sleep(2)
+    
+    # Kill the server
+    server_process.terminate()
+    server_process.wait()
\ No newline at end of file
