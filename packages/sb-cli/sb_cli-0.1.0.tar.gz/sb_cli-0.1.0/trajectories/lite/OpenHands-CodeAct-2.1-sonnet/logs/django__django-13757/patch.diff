diff --git a/django/db/models/fields/json.py b/django/db/models/fields/json.py
index 29c6ff0926..887171a673 100644
--- a/django/db/models/fields/json.py
+++ b/django/db/models/fields/json.py
@@ -368,12 +368,20 @@ class KeyTransformIsNull(lookups.IsNull):
     def as_oracle(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_oracle(compiler, connection)
-        return super().as_sql(compiler, connection)
+        # key__isnull=True is equivalent to NOT JSON_EXISTS(data, '$.key')
+        lhs, params, key_transforms = self.lhs.preprocess_lhs(compiler, connection)
+        json_path = compile_json_path(key_transforms)
+        sql = "NOT JSON_EXISTS(%s, '%s')" % (lhs, json_path)
+        return sql, params
 
     def as_sqlite(self, compiler, connection):
         if not self.rhs:
             return HasKey(self.lhs.lhs, self.lhs.key_name).as_sqlite(compiler, connection)
-        return super().as_sql(compiler, connection)
+        # key__isnull=True is equivalent to JSON_TYPE(data, '$.key') IS NULL
+        lhs, params, key_transforms = self.lhs.preprocess_lhs(compiler, connection)
+        json_path = compile_json_path(key_transforms)
+        sql = "JSON_TYPE(%s, %%s) IS NULL" % lhs
+        return sql, tuple(params) + (json_path,)
 
 
 class KeyTransformIn(lookups.In):
