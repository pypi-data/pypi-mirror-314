diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index 0f53d9c30b..0567dd8ec2 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -2524,7 +2524,11 @@ class AutoFieldMeta(type):
         return isinstance(instance, self._subclasses) or super().__instancecheck__(instance)
 
     def __subclasscheck__(self, subclass):
-        return subclass in self._subclasses or super().__subclasscheck__(subclass)
+        return (
+            subclass in self._subclasses or
+            any(issubclass(subclass, cls) for cls in self._subclasses) or
+            super().__subclasscheck__(subclass)
+        )
 
 
 class AutoField(AutoFieldMixin, IntegerField, metaclass=AutoFieldMeta):
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..7e1b170496
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,32 @@
+import django
+from django.conf import settings
+from django.db import models
+
+# Configure minimal Django settings
+settings.configure(
+    INSTALLED_APPS=[
+        'django.contrib.contenttypes',
+        'django.contrib.auth',
+    ],
+    DEFAULT_AUTO_FIELD='__main__.MyNestedSmallAutoField',
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    }
+)
+
+# Initialize Django
+django.setup()
+
+# Create the models module
+class MySmallAutoField(models.SmallAutoField):
+    pass
+
+class MyNestedSmallAutoField(MySmallAutoField):
+    pass
+
+class MyModel(models.Model):
+    class Meta:
+        app_label = 'example'
\ No newline at end of file
