diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 09a9d73077..7c4789e524 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -501,6 +501,30 @@ class SQLCompiler:
                 if not getattr(features, 'supports_select_{}'.format(combinator)):
                     raise NotSupportedError('{} is not supported on this database backend.'.format(combinator))
                 result, params = self.get_combinator_sql(combinator, self.query.combinator_all)
+                # If we have a DISTINCT ON clause with a UNION, we need to wrap the UNION in a subquery
+                if self.query.distinct and self.query.distinct_fields:
+                    # Get the table alias for the subquery
+                    alias = self.query.get_initial_alias()
+                    # Wrap the UNION query in a subquery
+                    # Store the original UNION query
+                    union_sql = ' '.join(result)
+                    # Create the new query with DISTINCT ON
+                    result = ['SELECT']
+                    # Add DISTINCT ON clause
+                    distinct_fields, distinct_params = self.get_distinct()
+                    distinct_result, distinct_params = self.connection.ops.distinct_sql(
+                        distinct_fields,
+                        distinct_params,
+                    )
+                    result.extend(distinct_result)
+                    # Add * FROM (UNION query) alias
+                    result.append('*')
+                    result.append('FROM')
+                    result.append('(')
+                    result.append(union_sql)
+                    result.append(') AS %s' % self.quote_name_unless_alias(alias))
+                    # Update params - distinct params go first
+                    params = distinct_params + params
             else:
                 distinct_fields, distinct_params = self.get_distinct()
                 # This must come after 'select', 'ordering', and 'distinct'
