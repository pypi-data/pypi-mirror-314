diff --git a/lib/matplotlib/__init__.py b/lib/matplotlib/__init__.py
index b657a35cf7..514df6e6c3 100644
--- a/lib/matplotlib/__init__.py
+++ b/lib/matplotlib/__init__.py
@@ -148,6 +148,17 @@ def __getattr__(name):
         else:  # Get the version from the _version.py setuptools_scm file.
             __version__ = _version.version
         return __version__
+    elif name == "version_info":
+        # Get the version string first
+        version = __getattr__("__version__")
+        # Parse version into a tuple using packaging.version
+        v = parse_version(version)
+        # Return a tuple of (major, minor, patch)
+        return (v.major, v.minor, v.micro)
+    elif name == "LooseVersion":
+        # For backward compatibility, we'll keep LooseVersion but use packaging.version internally
+        from packaging.version import Version
+        return Version
     raise AttributeError(f"module {__name__!r} has no attribute {name!r}")
 
 
diff --git a/test_version.py b/test_version.py
new file mode 100644
index 0000000000..718b7b75e9
--- /dev/null
+++ b/test_version.py
@@ -0,0 +1,16 @@
+import matplotlib
+
+print("Current version info:")
+print(f"__version__: {matplotlib.__version__}")
+
+# Try to access version_info (should fail)
+try:
+    print(f"version_info: {matplotlib.version_info}")
+except AttributeError as e:
+    print(f"version_info not available: {e}")
+
+# Try to access LooseVersion (should fail)
+try:
+    print(f"LooseVersion: {matplotlib.LooseVersion}")
+except AttributeError as e:
+    print(f"LooseVersion not available: {e}")
\ No newline at end of file
diff --git a/test_version_edge_cases.py b/test_version_edge_cases.py
new file mode 100644
index 0000000000..e0133954b5
--- /dev/null
+++ b/test_version_edge_cases.py
@@ -0,0 +1,35 @@
+import matplotlib
+
+# Test version comparison with Version
+print("Testing Version comparisons:")
+print(f"3.4.2 < 3.10.0: {matplotlib.LooseVersion('3.4.2') < matplotlib.LooseVersion('3.10.0')}")
+print(f"3.4.2 > 3.3.0: {matplotlib.LooseVersion('3.4.2') > matplotlib.LooseVersion('3.3.0')}")
+
+# Test version_info tuple comparison
+print("\nTesting version_info tuple comparisons:")
+print(f"Current version_info: {matplotlib.version_info}")
+print(f"(3, 4, 2) < (3, 10, 0): {(3, 4, 2) < (3, 10, 0)}")
+print(f"(3, 4, 2) > (3, 3, 0): {(3, 4, 2) > (3, 3, 0)}")
+
+# Test version_info with different version formats
+test_versions = [
+    "3.4.2",
+    "3.4.2.post1324+gb7d0591986",
+    "3.10.0",
+    "4.0.0.dev123",
+]
+
+print("\nTesting version parsing:")
+for ver in test_versions:
+    # Mock the version
+    matplotlib.__version__ = ver
+    print(f"\nVersion string: {ver}")
+    print(f"version_info: {matplotlib.version_info}")
+    # Test version comparison
+    v = matplotlib.LooseVersion(ver)
+    print(f"Version object: {v}")
+    print(f"major={v.major}, minor={v.minor}, micro={v.micro}")
+    if v.is_prerelease:
+        print("This is a pre-release version")
+    if v.is_postrelease:
+        print("This is a post-release version")
\ No newline at end of file
