diff --git a/django/core/management/templates.py b/django/core/management/templates.py
index 8dc6068286..f248ab1b71 100644
--- a/django/core/management/templates.py
+++ b/django/core/management/templates.py
@@ -74,7 +74,7 @@ class TemplateCommand(BaseCommand):
                 raise CommandError(e)
         else:
             if app_or_project == 'app':
-                self.validate_name(os.path.basename(target), 'directory')
+                self.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')
             top_dir = os.path.abspath(os.path.expanduser(target))
             if not os.path.exists(top_dir):
                 raise CommandError("Destination directory '%s' does not "
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..21855013c1
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,33 @@
+import os
+import sys
+from django.core.management.templates import TemplateCommand
+
+class TestCommand(TemplateCommand):
+    def __init__(self):
+        self.stdout = sys.stdout
+        self.stderr = sys.stderr
+        self.style = None
+        self.verbosity = 1
+        self.app_or_project = 'app'
+        self.a_or_an = 'an'
+
+# Create test command instance
+cmd = TestCommand()
+
+# Test cases
+test_cases = [
+    ("test_app/", "Test with trailing slash"),
+    ("test_app///", "Test with multiple trailing slashes"),
+    ("test_app", "Test without trailing slash"),
+    ("test_app" + os.sep, "Test with OS-specific path separator"),
+    ("test_app" + os.sep + os.sep, "Test with multiple OS-specific separators"),
+    ("valid_name/", "Another valid name with trailing slash"),
+]
+
+for target, description in test_cases:
+    print(f"\nTesting: {description}")
+    try:
+        cmd.validate_name(os.path.basename(target.rstrip(os.sep)), 'directory')
+        print(f"PASSED: Successfully validated '{target}'")
+    except Exception as e:
+        print(f"FAILED: Got error for '{target}': {str(e)}")
\ No newline at end of file
