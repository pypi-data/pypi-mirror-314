diff --git a/lib/matplotlib/cbook/__init__.py b/lib/matplotlib/cbook/__init__.py
index 34c6ddb861..8fe505644d 100644
--- a/lib/matplotlib/cbook/__init__.py
+++ b/lib/matplotlib/cbook/__init__.py
@@ -1746,7 +1746,11 @@ def _safe_first_finite(obj, *, skip_nonfinite=True):
         raise RuntimeError("matplotlib does not "
                            "support generators as input")
     else:
-        return next(val for val in obj if safe_isfinite(val))
+        # Try to find first finite value, but if none exists, return first value
+        try:
+            return next(val for val in obj if safe_isfinite(val))
+        except StopIteration:
+            return next(iter(obj))
 
 
 def sanitize_sequence(data):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..3a5f3b1e2b
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,6 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])
+plt.show()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..3331064fdb
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,34 @@
+import numpy as np
+import matplotlib.pyplot as plt
+
+# Test cases from PR description
+print("Testing cases from PR description...")
+f, ax = plt.subplots()
+ax.bar([np.nan], [np.nan])  # Should work
+ax.bar([np.nan], [0])  # Should work
+ax.bar([0], [np.nan])  # Should work
+plt.close()
+
+# Additional edge cases
+print("\nTesting additional edge cases...")
+
+# Multiple NaN values
+f, ax = plt.subplots()
+ax.bar([np.nan, np.nan], [np.nan, np.nan])  # Should work
+plt.close()
+
+# Mix of NaN and finite values
+f, ax = plt.subplots()
+ax.bar([np.nan, 1, 2], [np.nan, 1, 2])  # Should work
+plt.close()
+
+# Empty arrays
+try:
+    f, ax = plt.subplots()
+    ax.bar([], [])  # Should handle gracefully
+    plt.close()
+    print("Empty arrays: OK")
+except Exception as e:
+    print("Empty arrays failed:", str(e))
+
+print("\nAll tests completed!")
\ No newline at end of file
