diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a13754376b
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+from sympy import zeros
+
+# Create a 4x2 matrix of zeros
+A = zeros(4, 2)
+
+# This should raise IndexError
+print("Testing is_upper property...")
+print(A.is_upper)
\ No newline at end of file
diff --git a/sympy/matrices/matrices.py b/sympy/matrices/matrices.py
index 90ea232faf..c600fe88e2 100644
--- a/sympy/matrices/matrices.py
+++ b/sympy/matrices/matrices.py
@@ -1112,7 +1112,7 @@ def is_upper(self):
         """
         return all(self[i, j].is_zero
                    for i in range(1, self.rows)
-                   for j in range(i))
+                   for j in range(min(i, self.cols)))
 
     @property
     def is_zero(self):
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..7884365d21
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,32 @@
+from sympy import zeros, Matrix
+
+# Test various matrix shapes
+test_cases = [
+    (4, 2),  # Original failing case - tall matrix
+    (2, 4),  # Wide matrix
+    (1, 1),  # 1x1 matrix
+    (1, 3),  # Single row
+    (3, 1),  # Single column
+    (0, 0),  # Empty matrix
+    (3, 0),  # Zero columns
+    (0, 3),  # Zero rows
+]
+
+for rows, cols in test_cases:
+    print(f"\nTesting {rows}x{cols} zero matrix:")
+    try:
+        m = zeros(rows, cols)
+        print(f"is_upper = {m.is_upper}")
+    except Exception as e:
+        print(f"Error: {type(e).__name__}: {str(e)}")
+
+# Test non-zero matrices
+print("\nTesting non-zero matrices:")
+m1 = Matrix([[1, 2, 3], [0, 4, 5], [0, 0, 6]])  # Upper triangular
+print("Upper triangular matrix is_upper =", m1.is_upper)
+
+m2 = Matrix([[1, 2, 3], [1, 4, 5], [0, 0, 6]])  # Not upper triangular
+print("Non-upper triangular matrix is_upper =", m2.is_upper)
+
+m3 = Matrix([[1, 2], [0, 3], [0, 4]])  # Tall matrix with zeros below diagonal
+print("Tall matrix with zeros below diagonal is_upper =", m3.is_upper)
\ No newline at end of file
