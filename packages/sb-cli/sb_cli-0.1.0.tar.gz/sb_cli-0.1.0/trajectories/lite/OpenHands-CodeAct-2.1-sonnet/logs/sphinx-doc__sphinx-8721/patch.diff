diff --git a/sphinx/ext/viewcode.py b/sphinx/ext/viewcode.py
index a7d52a91c..060604e25 100644
--- a/sphinx/ext/viewcode.py
+++ b/sphinx/ext/viewcode.py
@@ -182,6 +182,8 @@ def collect_pages(app: Sphinx) -> Generator[Tuple[str, Dict[str, Any], str], Non
     env = app.builder.env
     if not hasattr(env, '_viewcode_modules'):
         return
+    if app.builder.name.startswith("epub") and not env.config.viewcode_enable_epub:
+        return
     highlighter = app.builder.highlighter  # type: ignore
     urito = app.builder.get_relative_uri
 
diff --git a/test_viewcode_epub.py b/test_viewcode_epub.py
new file mode 100644
index 000000000..d9c8f72ad
--- /dev/null
+++ b/test_viewcode_epub.py
@@ -0,0 +1,93 @@
+import os
+import shutil
+import tempfile
+from pathlib import Path
+
+from sphinx.application import Sphinx
+
+def main():
+    # Create a temporary directory for our test
+    with tempfile.TemporaryDirectory() as tmpdir:
+        # Create source directory
+        srcdir = Path(tmpdir) / 'src'
+        srcdir.mkdir()
+        
+        # Create a simple Python module to document
+        module_dir = srcdir / 'mymodule'
+        module_dir.mkdir()
+        with open(module_dir / '__init__.py', 'w') as f:
+            f.write('''
+def hello():
+    """A simple function."""
+    return "Hello World"
+''')
+            
+        # Create conf.py
+        with open(srcdir / 'conf.py', 'w') as f:
+            f.write('''
+import os
+import sys
+sys.path.insert(0, os.path.abspath('.'))
+extensions = ['sphinx.ext.viewcode', 'sphinx.ext.autodoc']
+viewcode_enable_epub = True
+master_doc = 'index'
+project = 'Test'
+copyright = '2023'
+version = '1.0'
+''')
+            
+        # Create index.rst
+        with open(srcdir / 'index.rst', 'w') as f:
+            f.write('''
+Welcome to Test
+==============
+
+.. automodule:: mymodule
+   :members:
+''')
+            
+        # Create build directory
+        outdir = Path(tmpdir) / 'out'
+        outdir.mkdir()
+        
+        # First build HTML
+        html_outdir = outdir / 'html'
+        html_outdir.mkdir()
+        app_html = Sphinx(
+            srcdir=str(srcdir),
+            confdir=str(srcdir),
+            outdir=str(html_outdir),
+            doctreedir=str(outdir / '.doctrees'),
+            buildername='html',
+        )
+        app_html.build()
+        
+        # Check if _modules directory exists in HTML output (it should)
+        html_modules = html_outdir / '_modules'
+        if not html_modules.exists():
+            print("ERROR: _modules directory was not created for HTML output")
+            return 1
+            
+        # Then build EPUB
+        epub_outdir = outdir / 'epub'
+        epub_outdir.mkdir()
+        app_epub = Sphinx(
+            srcdir=str(srcdir),
+            confdir=str(srcdir),
+            outdir=str(epub_outdir),
+            doctreedir=str(outdir / '.doctrees'),
+            buildername='epub',
+        )
+        app_epub.build()
+        
+        # Check if _modules directory exists in epub output
+        epub_modules = epub_outdir / '_modules'
+        if not epub_modules.exists():
+            print("ERROR: _modules directory was not created for epub even though viewcode_enable_epub=True")
+            return 1
+        else:
+            print("SUCCESS: _modules directory was created for epub as expected")
+            return 0
+
+if __name__ == '__main__':
+    exit(main())
\ No newline at end of file
