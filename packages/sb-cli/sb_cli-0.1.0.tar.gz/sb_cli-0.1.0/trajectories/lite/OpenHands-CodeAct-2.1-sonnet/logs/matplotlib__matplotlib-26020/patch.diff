diff --git a/lib/mpl_toolkits/axes_grid1/axes_grid.py b/lib/mpl_toolkits/axes_grid1/axes_grid.py
index 2b1b1d3200..5460b47cb0 100644
--- a/lib/mpl_toolkits/axes_grid1/axes_grid.py
+++ b/lib/mpl_toolkits/axes_grid1/axes_grid.py
@@ -13,8 +13,17 @@ from .mpl_axes import Axes
 def _tick_only(ax, bottom_on, left_on):
     bottom_off = not bottom_on
     left_off = not left_on
-    ax.axis["bottom"].toggle(ticklabels=bottom_off, label=bottom_off)
-    ax.axis["left"].toggle(ticklabels=left_off, label=left_off)
+    
+    # Handle both dict-like axis and method axis cases
+    if hasattr(ax.axis, '__getitem__'):
+        # Dict-like axis (mpl_toolkits.axes_grid1.mpl_axes.Axes)
+        ax.axis["bottom"].toggle(ticklabels=bottom_off, label=bottom_off)
+        ax.axis["left"].toggle(ticklabels=left_off, label=left_off)
+    else:
+        # Method axis (GeoAxes and others)
+        # Use standard matplotlib methods to control tick visibility
+        ax.tick_params(bottom=not bottom_off, labelbottom=not bottom_off,
+                      left=not left_off, labelleft=not left_off)
 
 
 class CbarAxesBase:
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..2b7114c2d1
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,10 @@
+import matplotlib.pyplot as plt
+from cartopy.crs import PlateCarree
+from cartopy.mpl.geoaxes import GeoAxes
+from mpl_toolkits.axes_grid1 import AxesGrid
+
+fig = plt.figure()
+axes_class = (GeoAxes, dict(map_projection=PlateCarree()))
+gr = AxesGrid(fig, 111, nrows_ncols=(1,1),
+              axes_class=axes_class)
+plt.show()
\ No newline at end of file
