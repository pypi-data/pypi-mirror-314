diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 0000000000..d1b1023851
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,18 @@
+from sympy import *
+x = Symbol('x')
+
+# Test cases with complex exponents
+print("Test 1: cos(x)**I")
+print(simplify(cos(x)**I))
+
+print("\nTest 2: sin(x)**(2*I)")
+print(simplify(sin(x)**(2*I)))
+
+print("\nTest 3: cos(x)**(1 + I)")
+print(simplify(cos(x)**(1 + I)))
+
+print("\nTest 4: sin(x)**(I/2)")
+print(simplify(sin(x)**(I/2)))
+
+print("\nTest 5: (cos(x) + sin(x))**I")
+print(simplify((cos(x) + sin(x))**I))
\ No newline at end of file
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..b7112cc775
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,3 @@
+from sympy import *
+x = Symbol('x')
+print(simplify(cos(x)**I))
\ No newline at end of file
diff --git a/sympy/simplify/fu.py b/sympy/simplify/fu.py
index ad1130ef96..637d903860 100644
--- a/sympy/simplify/fu.py
+++ b/sympy/simplify/fu.py
@@ -501,9 +501,11 @@ def _f(rv):
         if not (rv.is_Pow and rv.base.func == f):
             return rv
 
-        if (rv.exp < 0) == True:
+        # Skip complex exponents
+        if rv.exp.is_complex and not rv.exp.is_real:
             return rv
-        if (rv.exp > max) == True:
+        # Skip negative or too large exponents
+        if (rv.exp < 0) == True or (rv.exp > max) == True:
             return rv
         if rv.exp == 2:
             return h(g(rv.base.args[0])**2)
