diff --git a/src/_pytest/skipping.py b/src/_pytest/skipping.py
index 335e10996..c72d3f658 100644
--- a/src/_pytest/skipping.py
+++ b/src/_pytest/skipping.py
@@ -261,7 +261,9 @@ def pytest_runtest_call(item: Item) -> Generator[None, None, None]:
 def pytest_runtest_makereport(item: Item, call: CallInfo[None]):
     outcome = yield
     rep = outcome.get_result()
-    xfailed = item._store.get(xfailed_key, None)
+    # Re-evaluate xfail markers to catch dynamically added ones
+    xfailed = evaluate_xfail_marks(item)
+    item._store[xfailed_key] = xfailed
     # unittest special case, see setting of unexpectedsuccess_key
     if unexpectedsuccess_key in item._store and rep.when == "call":
         reason = item._store[unexpectedsuccess_key]
diff --git a/test_foo.py b/test_foo.py
new file mode 100644
index 000000000..e1d30df0c
--- /dev/null
+++ b/test_foo.py
@@ -0,0 +1,6 @@
+import pytest
+
+def test_xfail_test(request):
+    mark = pytest.mark.xfail(reason="xfail")
+    request.node.add_marker(mark)
+    assert 0
\ No newline at end of file
diff --git a/test_foo2.py b/test_foo2.py
new file mode 100644
index 000000000..39a0c8fe7
--- /dev/null
+++ b/test_foo2.py
@@ -0,0 +1,6 @@
+import pytest
+
+def test_conditional_xfail(request):
+    mark = pytest.mark.xfail(condition=True, reason="conditional xfail")
+    request.node.add_marker(mark)
+    assert 0
\ No newline at end of file
diff --git a/test_foo3.py b/test_foo3.py
new file mode 100644
index 000000000..45488cff3
--- /dev/null
+++ b/test_foo3.py
@@ -0,0 +1,6 @@
+import pytest
+
+def test_strict_xfail(request):
+    mark = pytest.mark.xfail(strict=True, reason="strict xfail")
+    request.node.add_marker(mark)
+    assert True  # This should fail since it's strict and passes
\ No newline at end of file
diff --git a/test_foo4.py b/test_foo4.py
new file mode 100644
index 000000000..edadaba8f
--- /dev/null
+++ b/test_foo4.py
@@ -0,0 +1,6 @@
+import pytest
+
+def test_raises_xfail(request):
+    mark = pytest.mark.xfail(raises=ValueError, reason="raises xfail")
+    request.node.add_marker(mark)
+    raise ValueError("expected error")
\ No newline at end of file
