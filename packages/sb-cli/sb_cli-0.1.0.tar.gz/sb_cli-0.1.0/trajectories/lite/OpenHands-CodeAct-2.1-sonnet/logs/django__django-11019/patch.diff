diff --git a/django/forms/widgets.py b/django/forms/widgets.py
index 02aa32b207..cd79ffe5e1 100644
--- a/django/forms/widgets.py
+++ b/django/forms/widgets.py
@@ -125,28 +125,47 @@ class Media:
         in a certain order. In JavaScript you may not be able to reference a
         global or in CSS you might want to override a style.
         """
-        # Start with a copy of list_1.
+        # Build a dependency graph from both lists
+        dependencies = {}
+        for lst in [list_1, list_2]:
+            for i, path in enumerate(lst):
+                if path not in dependencies:
+                    dependencies[path] = set()
+                # Everything after this path depends on it
+                for dep in lst[i+1:]:
+                    dependencies[path].add(dep)
+
+        # Start with a copy of list_1
         combined_list = list(list_1)
-        last_insert_index = len(list_1)
-        # Walk list_2 in reverse, inserting each element into combined_list if
-        # it doesn't already exist.
-        for path in reversed(list_2):
-            try:
-                # Does path already exist in the list?
-                index = combined_list.index(path)
-            except ValueError:
-                # Add path to combined_list since it doesn't exist.
-                combined_list.insert(last_insert_index, path)
+        
+        # For each item in list_2, ensure it's in the right position
+        for path in list_2:
+            if path not in combined_list:
+                # Find the right position - after all items it depends on
+                insert_index = 0
+                for i, existing in enumerate(combined_list):
+                    if path in dependencies[existing]:
+                        insert_index = i + 1
+                combined_list.insert(insert_index, path)
             else:
-                if index > last_insert_index:
-                    warnings.warn(
-                        'Detected duplicate Media files in an opposite order:\n'
-                        '%s\n%s' % (combined_list[last_insert_index], combined_list[index]),
-                        MediaOrderConflictWarning,
-                    )
-                # path already exists in the list. Update last_insert_index so
-                # that the following elements are inserted in front of this one.
-                last_insert_index = index
+                # Item already exists - check if it's in the right position
+                current_index = combined_list.index(path)
+                correct_index = 0
+                for i, existing in enumerate(combined_list[:current_index]):
+                    if path in dependencies[existing]:
+                        correct_index = i + 1
+                    elif existing in dependencies[path]:
+                        # If we find an item that should come after this one,
+                        # warn about the conflict
+                        warnings.warn(
+                            'Detected duplicate Media files in an opposite order:\n'
+                            '%s\n%s' % (path, existing),
+                            MediaOrderConflictWarning,
+                        )
+                if current_index != correct_index:
+                    combined_list.pop(current_index)
+                    combined_list.insert(correct_index, path)
+                    
         return combined_list
 
     def __add__(self, other):
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..eda7f6b08f
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,36 @@
+from django import forms, setup
+from django.conf import settings
+
+settings.configure(
+    USE_I18N=False,
+    DEBUG=True,
+    INSTALLED_APPS=[],
+    STATIC_URL='/static/'
+)
+setup()
+
+class ColorPicker(forms.Widget):
+    class Media:
+        js = ['color-picker.js']
+
+class SimpleTextWidget(forms.Widget):
+    class Media:
+        js = ['text-editor.js']
+
+class FancyTextWidget(forms.Widget):
+    class Media:
+        js = ['text-editor.js', 'text-editor-extras.js', 'color-picker.js']
+
+class ComplexWidget(forms.Widget):
+    class Media:
+        js = ['color-picker.js', 'text-editor-extras.js', 'text-editor.js']
+
+class MyForm(forms.Form):
+    background_color = forms.CharField(widget=ColorPicker())
+    intro = forms.CharField(widget=SimpleTextWidget())
+    body = forms.CharField(widget=FancyTextWidget())
+    extra = forms.CharField(widget=ComplexWidget())
+
+if __name__ == '__main__':
+    form = MyForm()
+    print(form.media)
\ No newline at end of file
