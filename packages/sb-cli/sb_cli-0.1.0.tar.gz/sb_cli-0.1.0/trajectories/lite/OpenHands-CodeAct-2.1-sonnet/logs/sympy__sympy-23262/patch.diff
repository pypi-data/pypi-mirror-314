diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..96225907d7
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,10 @@
+import inspect
+from sympy import lambdify
+
+# Test single element tuple
+print("Single element tuple:")
+print(inspect.getsource(lambdify([], tuple([1]))))
+
+# Test multi-element tuple for comparison
+print("\nMulti-element tuple:")
+print(inspect.getsource(lambdify([], tuple([1, 2]))))
\ No newline at end of file
diff --git a/sympy/printing/lambdarepr.py b/sympy/printing/lambdarepr.py
index b9227d8d7a..1087ab3990 100644
--- a/sympy/printing/lambdarepr.py
+++ b/sympy/printing/lambdarepr.py
@@ -53,6 +53,12 @@ def _print_BooleanTrue(self, expr):
     def _print_BooleanFalse(self, expr):
         return "False"
 
+    def _print_tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % self.stringify(expr, ", ")
+
     def _print_ITE(self, expr):
         result = [
             '((', self._print(expr.args[1]),
diff --git a/sympy/printing/pycode.py b/sympy/printing/pycode.py
index 1877c3f92a..9294b301d4 100644
--- a/sympy/printing/pycode.py
+++ b/sympy/printing/pycode.py
@@ -331,6 +331,12 @@ def _print_Stream(self, strm):
     def _print_NoneToken(self, arg):
         return 'None'
 
+    def _print_tuple(self, expr):
+        if len(expr) == 1:
+            return "(%s,)" % self._print(expr[0])
+        else:
+            return "(%s)" % self.stringify(expr, ", ")
+
     def _hprint_Pow(self, expr, rational=False, sqrt='math.sqrt'):
         """Printing helper function for ``Pow``
