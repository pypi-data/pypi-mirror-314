diff --git a/lib/matplotlib/widgets.py b/lib/matplotlib/widgets.py
index ebe5da43e2..d1f9da4940 100644
--- a/lib/matplotlib/widgets.py
+++ b/lib/matplotlib/widgets.py
@@ -882,6 +882,12 @@ class RangeSlider(SliderBase):
             self.drag_active = False
             event.canvas.release_mouse(self.ax)
             self._active_handle = None
+            # Ensure we process the final value change before returning
+            if event.name == "button_release_event" and event.inaxes == self.ax:
+                if self.orientation == "vertical":
+                    self._update_val_from_pos(event.ydata)
+                else:
+                    self._update_val_from_pos(event.xdata)
             return
 
         # determine which handle was grabbed
@@ -963,9 +969,14 @@ class RangeSlider(SliderBase):
         self.valtext.set_text(self._format((vmin, vmax)))
 
         if self.drawon:
+            # Use draw_idle instead of draw to avoid blocking
             self.ax.figure.canvas.draw_idle()
         self.val = (vmin, vmax)
         if self.eventson:
+            # Reset drag state before triggering the callback to avoid state issues
+            self.drag_active = False
+            if hasattr(self, '_active_handle'):
+                self._active_handle = None
             self._observers.process("changed", (vmin, vmax))
 
     def on_changed(self, func):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..33c6159040
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,29 @@
+import matplotlib.pyplot as pyplot
+import matplotlib.widgets as widgets
+
+def onchanged(values):
+    print("on changed")
+    print(values)
+    pyplot.clf()
+    addElements()
+    pyplot.draw()
+
+def onclick(e):
+    print("on click")
+    pyplot.clf()
+    addElements()
+    pyplot.draw()
+
+def addElements():
+    ax = pyplot.axes([0.1, 0.45, 0.8, 0.1])
+    global slider
+    slider = widgets.RangeSlider(ax, "Test", valmin=1, valmax=10, valinit=(1, 10))
+    slider.on_changed(onchanged)
+    ax = pyplot.axes([0.1, 0.30, 0.8, 0.1])
+    global button
+    button = widgets.Button(ax, "Test")
+    button.on_clicked(onclick)
+
+addElements()
+
+pyplot.show()
\ No newline at end of file
