diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..a5e2bab4cd
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,11 @@
+from sympy import pi, E
+from sympy.printing.pretty import pretty
+from sympy.printing.latex import latex
+
+expr = pi**(1/E)
+print("Pretty printed:")
+print(pretty(expr))
+print("\nString representation:")
+print(str(expr))
+print("\nLatex representation:")
+print(latex(expr))
\ No newline at end of file
diff --git a/sympy/printing/pretty/pretty.py b/sympy/printing/pretty/pretty.py
index df7452ee87..ea3b9f1b90 100644
--- a/sympy/printing/pretty/pretty.py
+++ b/sympy/printing/pretty/pretty.py
@@ -1954,7 +1954,7 @@ def _print_Pow(self, power):
             if e is S.NegativeOne:
                 return prettyForm("1")/self._print(b)
             n, d = fraction(e)
-            if n is S.One and d.is_Atom and not e.is_Integer and self._settings['root_notation']:
+            if n is S.One and d.is_Integer and not e.is_Integer and self._settings['root_notation']:
                 return self._print_nth_root(b, e)
             if e.is_Rational and e < 0:
                 return prettyForm("1")/self._print(Pow(b, -e, evaluate=False))
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..3cd2e5a98f
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,22 @@
+from sympy import pi, E, sqrt, S
+from sympy.printing.pretty import pretty
+
+# Test cases
+test_cases = [
+    pi**(1/E),      # Our original case - should show as power
+    pi**(1/2),      # Square root - should show as root
+    pi**(1/3),      # Cube root - should show as root
+    pi**(-1/2),     # Negative square root - should show as 1/sqrt
+    pi**(S(1)/2),   # Square root with Rational - should show as root
+    pi**2,          # Regular integer power - should show as power
+    pi**(-2),       # Negative integer power - should show as 1/power
+]
+
+print("Testing edge cases:")
+print("-" * 40)
+for expr in test_cases:
+    print(f"\nExpression: {expr}")
+    print("Pretty printed:")
+    print(pretty(expr))
+    print("String representation:")
+    print(str(expr))
\ No newline at end of file
