diff --git a/django/contrib/auth/forms.py b/django/contrib/auth/forms.py
index b3cfc6723c..f6c4b7fc2f 100644
--- a/django/contrib/auth/forms.py
+++ b/django/contrib/auth/forms.py
@@ -163,7 +163,7 @@ class UserChangeForm(forms.ModelForm):
         super().__init__(*args, **kwargs)
         password = self.fields.get("password")
         if password:
-            password.help_text = password.help_text.format("../password/")
+            password.help_text = password.help_text.format(f"../../{self.instance.pk}/password/")
         user_permissions = self.fields.get("user_permissions")
         if user_permissions:
             user_permissions.queryset = user_permissions.queryset.select_related(
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..d8ca8d0485
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,41 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'django.conf.global_settings')
+
+import django
+from django.conf import settings
+if not settings.configured:
+    settings.configure(
+        INSTALLED_APPS=['django.contrib.auth', 'django.contrib.contenttypes'],
+        DATABASES={'default': {'ENGINE': 'django.db.backends.sqlite3', 'NAME': ':memory:'}},
+    )
+    django.setup()
+
+# Create database tables
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+from django.contrib.auth.forms import UserChangeForm
+from django.contrib.auth.models import User
+from django.test import RequestFactory
+
+# Create a test user
+user = User.objects.create_user(username='testuser', password='testpass')
+
+# Create a request with a UUID in the path
+factory = RequestFactory()
+request = factory.get('/admin/auth/user/22222222-3333-4444-5555-666677778888/change/?_to_field=uuid')
+
+# Create the form instance
+form = UserChangeForm(instance=user)
+
+# Print the password help text to see the issue
+print("\nTesting password help text with user ID:", user.pk)
+print("Password help text:", form.fields['password'].help_text)
+
+# Verify the link points to the correct URL
+expected_link = f"../../{user.pk}/password/"
+actual_link = form.fields['password'].help_text[form.fields['password'].help_text.find('"')+1:form.fields['password'].help_text.find('">')]
+print("\nVerifying link correctness:")
+print("Expected link:", expected_link)
+print("Actual link:", actual_link)
+print("Link is correct:", expected_link == actual_link)
\ No newline at end of file
