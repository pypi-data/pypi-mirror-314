diff --git a/output.png b/output.png
new file mode 100644
index 00000000..34b495c7
Binary files /dev/null and b/output.png differ
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..7b694ee5
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,8 @@
+import seaborn as sns
+import matplotlib.pyplot as plt
+
+iris = sns.load_dataset("iris")
+g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+g.map(sns.scatterplot, hue=iris["species"])
+g.map(sns.regplot, scatter=False)
+plt.savefig('output.png')
\ No newline at end of file
diff --git a/seaborn/axisgrid.py b/seaborn/axisgrid.py
index 8526f44b..92adc7fa 100644
--- a/seaborn/axisgrid.py
+++ b/seaborn/axisgrid.py
@@ -1563,7 +1563,11 @@ class PairGrid(Grid):
         if self._hue_var is None:
             hue = None
         else:
-            hue = data.get(self._hue_var)
+            # Handle both string column names and Series objects
+            if isinstance(self._hue_var, (pd.Series, np.ndarray)):
+                hue = self._hue_var
+            else:
+                hue = data.get(self._hue_var)
 
         if "hue" not in kwargs:
             kwargs.update({
diff --git a/test1.png b/test1.png
new file mode 100644
index 00000000..94c3cd64
Binary files /dev/null and b/test1.png differ
diff --git a/test2.png b/test2.png
new file mode 100644
index 00000000..315046b8
Binary files /dev/null and b/test2.png differ
diff --git a/test3.png b/test3.png
new file mode 100644
index 00000000..9d504647
Binary files /dev/null and b/test3.png differ
diff --git a/test4.png b/test4.png
new file mode 100644
index 00000000..52c1022a
Binary files /dev/null and b/test4.png differ
diff --git a/test5.png b/test5.png
new file mode 100644
index 00000000..874e18ed
Binary files /dev/null and b/test5.png differ
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..ecd0a2c8
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,51 @@
+import seaborn as sns
+import matplotlib.pyplot as plt
+import pandas as pd
+import numpy as np
+
+# Load the iris dataset
+iris = sns.load_dataset("iris")
+
+# Test case 1: Using numpy array for hue
+g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+g.map(sns.scatterplot, hue=iris["species"].values)  # Using numpy array
+g.map(sns.regplot, scatter=False)
+plt.savefig('test1.png')
+plt.close()
+
+# Test case 2: Using pandas Series with missing values
+species_with_na = pd.Series(iris["species"].values.copy())
+species_with_na.iloc[0] = None
+g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+g.map(sns.scatterplot, hue=species_with_na)
+g.map(sns.regplot, scatter=False)
+plt.savefig('test2.png')
+plt.close()
+
+# Test case 3: Using pandas Series with different index
+species_diff_idx = pd.Series(iris["species"].values, index=range(10, len(iris) + 10))
+g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+g.map(sns.scatterplot, hue=species_diff_idx)
+g.map(sns.regplot, scatter=False)
+plt.savefig('test3.png')
+plt.close()
+
+# Test case 4: Using pandas Series with different length (should fail gracefully)
+try:
+    species_short = pd.Series(iris["species"].values[:-10])
+    g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+    g.map(sns.scatterplot, hue=species_short)
+    g.map(sns.regplot, scatter=False)
+    plt.savefig('test4.png')
+    plt.close()
+except ValueError as e:
+    print("Expected error with shorter series:", e)
+
+# Test case 5: Using pandas Series with different categories
+species_diff_cats = pd.Series(iris["species"].values.copy())
+species_diff_cats.iloc[0] = "new_category"
+g = sns.PairGrid(iris, y_vars=["sepal_length","sepal_width"], x_vars=["petal_length","petal_width"])
+g.map(sns.scatterplot, hue=species_diff_cats)
+g.map(sns.regplot, scatter=False)
+plt.savefig('test5.png')
+plt.close()
\ No newline at end of file
