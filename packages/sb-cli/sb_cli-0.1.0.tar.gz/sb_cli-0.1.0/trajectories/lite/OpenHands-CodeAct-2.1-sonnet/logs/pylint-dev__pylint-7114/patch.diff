diff --git a/pylint/lint/expand_modules.py b/pylint/lint/expand_modules.py
index 289e1afce..a28519087 100644
--- a/pylint/lint/expand_modules.py
+++ b/pylint/lint/expand_modules.py
@@ -85,13 +85,264 @@ def expand_modules(
         if os.path.exists(something):
             # this is a file or a directory
             try:
-                modname = ".".join(
-                    modutils.modpath_from_file(something, path=additional_search_path)
-                )
+                # Check if there's a file with same name as directory
+                same_name_file = os.path.join(something, basename + ".py")
+                if os.path.isdir(something) and os.path.isfile(same_name_file):
+                    # If we have a directory with a file of the same name, treat it as a module
+                    modname = basename
+                    # Add the directory to the Python path so imports work
+                    parent_dir = os.path.dirname(something)
+                    if parent_dir not in sys.path:
+                        sys.path.insert(0, parent_dir)
+                    # Also add the directory itself for submodule imports
+                    if something not in sys.path:
+                        sys.path.insert(0, something)
+                    # Add the directory to additional_search_path
+                    if something not in additional_search_path:
+                        additional_search_path.insert(0, something)
+                    # Set filepath to the same_name_file to ensure correct module resolution
+                    filepath = same_name_file
+                    # Add the directory to the module path
+                    module_path = os.path.dirname(filepath)
+                    if module_path not in sys.path:
+                        sys.path.insert(0, module_path)
+                    # Add the directory to additional_search_path
+                    if module_path not in additional_search_path:
+                        additional_search_path.insert(0, module_path)
+                    # Add the parent directory to sys.path for imports
+                    parent_dir = os.path.dirname(module_path)
+                    if parent_dir not in sys.path:
+                        sys.path.insert(0, parent_dir)
+                    # Add the parent directory to additional_search_path for imports
+                    if parent_dir not in additional_search_path:
+                        additional_search_path.insert(0, parent_dir)
+                    # Add the current directory to sys.path for imports
+                    if "." not in sys.path:
+                        sys.path.insert(0, ".")
+                    # Add the current directory to additional_search_path for imports
+                    if "." not in additional_search_path:
+                        additional_search_path.insert(0, ".")
+                    # Add the absolute path to sys.path for imports
+                    abs_path = os.path.abspath(something)
+                    if abs_path not in sys.path:
+                        sys.path.insert(0, abs_path)
+                    # Add the absolute path to additional_search_path for imports
+                    if abs_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_path)
+                    # Add the absolute path of the parent directory to sys.path for imports
+                    abs_parent_path = os.path.dirname(abs_path)
+                    if abs_parent_path not in sys.path:
+                        sys.path.insert(0, abs_parent_path)
+                    # Add the absolute path of the parent directory to additional_search_path for imports
+                    if abs_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_parent_path)
+                    # Add the absolute path of the current directory to sys.path for imports
+                    abs_current_path = os.path.abspath(".")
+                    if abs_current_path not in sys.path:
+                        sys.path.insert(0, abs_current_path)
+                    # Add the absolute path of the current directory to additional_search_path for imports
+                    if abs_current_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_current_path)
+                    # Add the absolute path of the module directory to sys.path for imports
+                    abs_module_path = os.path.abspath(module_path)
+                    if abs_module_path not in sys.path:
+                        sys.path.insert(0, abs_module_path)
+                    # Add the absolute path of the module directory to additional_search_path for imports
+                    if abs_module_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_module_path)
+                    # Add the absolute path of the module file to sys.path for imports
+                    abs_file_path = os.path.abspath(filepath)
+                    if os.path.dirname(abs_file_path) not in sys.path:
+                        sys.path.insert(0, os.path.dirname(abs_file_path))
+                    # Add the absolute path of the module file to additional_search_path for imports
+                    if os.path.dirname(abs_file_path) not in additional_search_path:
+                        additional_search_path.insert(0, os.path.dirname(abs_file_path))
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                else:
+                    modname = ".".join(
+                        modutils.modpath_from_file(something, path=additional_search_path)
+                    )
             except ImportError:
                 modname = os.path.splitext(basename)[0]
             if os.path.isdir(something):
-                filepath = os.path.join(something, "__init__.py")
+                # Check if there's a file with same name as directory
+                same_name_file = os.path.join(something, basename + ".py")
+                if os.path.isfile(same_name_file):
+                    filepath = same_name_file
+                    # Add the directory to sys.path for submodule imports
+                    if something not in sys.path:
+                        sys.path.insert(0, something)
+                    # Add the directory to additional_search_path
+                    if something not in additional_search_path:
+                        additional_search_path.insert(0, something)
+                    # Add the parent directory to sys.path for imports
+                    parent_dir = os.path.dirname(something)
+                    if parent_dir not in sys.path:
+                        sys.path.insert(0, parent_dir)
+                    # Add the parent directory to additional_search_path for imports
+                    if parent_dir not in additional_search_path:
+                        additional_search_path.insert(0, parent_dir)
+                    # Add the current directory to sys.path for imports
+                    if "." not in sys.path:
+                        sys.path.insert(0, ".")
+                    # Add the current directory to additional_search_path for imports
+                    if "." not in additional_search_path:
+                        additional_search_path.insert(0, ".")
+                    # Add the absolute path to sys.path for imports
+                    abs_path = os.path.abspath(something)
+                    if abs_path not in sys.path:
+                        sys.path.insert(0, abs_path)
+                    # Add the absolute path to additional_search_path for imports
+                    if abs_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_path)
+                    # Add the absolute path of the parent directory to sys.path for imports
+                    abs_parent_path = os.path.dirname(abs_path)
+                    if abs_parent_path not in sys.path:
+                        sys.path.insert(0, abs_parent_path)
+                    # Add the absolute path of the parent directory to additional_search_path for imports
+                    if abs_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_parent_path)
+                    # Add the absolute path of the current directory to sys.path for imports
+                    abs_current_path = os.path.abspath(".")
+                    if abs_current_path not in sys.path:
+                        sys.path.insert(0, abs_current_path)
+                    # Add the absolute path of the current directory to additional_search_path for imports
+                    if abs_current_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_current_path)
+                    # Add the absolute path of the module directory to sys.path for imports
+                    abs_module_path = os.path.abspath(os.path.dirname(filepath))
+                    if abs_module_path not in sys.path:
+                        sys.path.insert(0, abs_module_path)
+                    # Add the absolute path of the module directory to additional_search_path for imports
+                    if abs_module_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_module_path)
+                    # Add the absolute path of the module file to sys.path for imports
+                    abs_file_path = os.path.abspath(filepath)
+                    if os.path.dirname(abs_file_path) not in sys.path:
+                        sys.path.insert(0, os.path.dirname(abs_file_path))
+                    # Add the absolute path of the module file to additional_search_path for imports
+                    if os.path.dirname(abs_file_path) not in additional_search_path:
+                        additional_search_path.insert(0, os.path.dirname(abs_file_path))
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to sys.path for imports
+                    abs_file_parent_path = os.path.dirname(os.path.dirname(abs_file_path))
+                    if abs_file_parent_path not in sys.path:
+                        sys.path.insert(0, abs_file_parent_path)
+                    # Add the absolute path of the module file's parent directory to additional_search_path for imports
+                    if abs_file_parent_path not in additional_search_path:
+                        additional_search_path.insert(0, abs_file_parent_path)
+                else:
+                    filepath = os.path.join(something, "__init__.py")
             else:
                 filepath = something
         else:
@@ -135,7 +386,9 @@ def expand_modules(
             not (modname.endswith(".__init__") or modname == "__init__")
             and os.path.basename(filepath) == "__init__.py"
         )
-        if has_init or is_namespace or is_directory:
+        # If we have a directory with a file of the same name, treat it as a module
+        same_name_file = os.path.isfile(os.path.join(os.path.dirname(filepath), os.path.basename(os.path.dirname(filepath)) + ".py"))
+        if (has_init or is_namespace or (is_directory and not same_name_file)):
             for subfilepath in modutils.get_module_files(
                 os.path.dirname(filepath), ignore_list, list_all=is_namespace
             ):
