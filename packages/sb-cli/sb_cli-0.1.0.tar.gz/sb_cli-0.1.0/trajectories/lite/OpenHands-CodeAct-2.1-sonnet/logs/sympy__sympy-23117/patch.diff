diff --git a/reproduce_array_error.py b/reproduce_array_error.py
new file mode 100644
index 0000000000..8c6e2cdcd5
--- /dev/null
+++ b/reproduce_array_error.py
@@ -0,0 +1,17 @@
+from sympy import Array, Matrix
+
+# Test empty Array construction
+print("Testing Array([]):")
+try:
+    a = Array([])
+    print("Success! a =", a)
+except Exception as e:
+    print("Failed with error:", str(e))
+
+# Test empty Matrix construction for comparison
+print("\nTesting Matrix([]):")
+try:
+    m = Matrix([])
+    print("Success! m =", m)
+except Exception as e:
+    print("Failed with error:", str(e))
\ No newline at end of file
diff --git a/sympy/tensor/array/ndim_array.py b/sympy/tensor/array/ndim_array.py
index 6490a655a4..1a054670e8 100644
--- a/sympy/tensor/array/ndim_array.py
+++ b/sympy/tensor/array/ndim_array.py
@@ -194,6 +194,10 @@ def f(pointer):
             if not isinstance(pointer, Iterable):
                 return [pointer], ()
 
+            # Handle empty lists
+            if not pointer:
+                return [], (0,)
+
             result = []
             elems, shapes = zip(*[f(i) for i in pointer])
             if len(set(shapes)) != 1:
diff --git a/test_array_edge_cases.py b/test_array_edge_cases.py
new file mode 100644
index 0000000000..5fe90dfa81
--- /dev/null
+++ b/test_array_edge_cases.py
@@ -0,0 +1,22 @@
+from sympy import Array, Matrix
+
+# Test cases for empty arrays
+print("1. Empty list:")
+a1 = Array([])
+print("Success! a1 =", a1)
+print("Shape:", a1.shape)
+
+print("\n2. Empty list of lists:")
+a2 = Array([[]])
+print("Success! a2 =", a2)
+print("Shape:", a2.shape)
+
+print("\n3. List with empty lists:")
+a3 = Array([[], []])
+print("Success! a3 =", a3)
+print("Shape:", a3.shape)
+
+print("\n4. Nested empty lists:")
+a4 = Array([[[]], [[]]])
+print("Success! a4 =", a4)
+print("Shape:", a4.shape)
\ No newline at end of file
