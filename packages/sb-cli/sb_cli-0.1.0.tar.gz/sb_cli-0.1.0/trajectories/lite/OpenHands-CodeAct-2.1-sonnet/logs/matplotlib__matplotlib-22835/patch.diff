diff --git a/lib/matplotlib/artist.py b/lib/matplotlib/artist.py
index 1f33b9d3ec..2ad847ad2f 100644
--- a/lib/matplotlib/artist.py
+++ b/lib/matplotlib/artist.py
@@ -1303,11 +1303,19 @@ class Artist:
                 return "[]"
             normed = self.norm(data)
             if np.isfinite(normed):
-                # Midpoints of neighboring color intervals.
-                neighbors = self.norm.inverse(
-                    (int(self.norm(data) * n) + np.array([0, 1])) / n)
-                delta = abs(neighbors - data).max()
-                g_sig_digits = cbook._g_sig_digits(data, delta)
+                try:
+                    # Try to use the colorbar formatter if available
+                    if hasattr(self, 'colorbar') and self.colorbar is not None:
+                        return self.colorbar.formatter.format_data(data)
+                    # Try to calculate precision based on neighboring values
+                    neighbors = self.norm.inverse(
+                        (int(normed * n) + np.array([0, 1])) / n)
+                    delta = abs(neighbors - data).max()
+                    g_sig_digits = cbook._g_sig_digits(data, delta)
+                except (AttributeError, ValueError):
+                    # If colorbar not available or norm is not invertible,
+                    # use default precision
+                    g_sig_digits = 3
             else:
                 g_sig_digits = 3  # Consistent with default below.
             return "[{:-#.{}g}]".format(data, g_sig_digits)
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..efd1426d81
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,9 @@
+import matplotlib.pyplot as plt
+import numpy as np
+import matplotlib as mpl
+
+fig, ax = plt.subplots()
+norm = mpl.colors.BoundaryNorm(np.linspace(-4, 4, 5), 256)
+X = np.random.randn(10, 10)
+pc = ax.imshow(X, cmap='RdBu_r', norm=norm)
+plt.show()
\ No newline at end of file
diff --git a/test_fix.py b/test_fix.py
new file mode 100644
index 0000000000..ff0fc8bbbd
--- /dev/null
+++ b/test_fix.py
@@ -0,0 +1,22 @@
+import matplotlib.pyplot as plt
+import numpy as np
+import matplotlib as mpl
+
+# Test with BoundaryNorm (non-invertible)
+fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 5))
+
+# Test 1: BoundaryNorm
+norm1 = mpl.colors.BoundaryNorm(np.linspace(-4, 4, 5), 256)
+X1 = np.random.randn(10, 10)
+pc1 = ax1.imshow(X1, cmap='RdBu_r', norm=norm1)
+ax1.set_title('BoundaryNorm')
+
+# Test 2: Regular Normalize (invertible) for comparison
+norm2 = mpl.colors.Normalize(vmin=-4, vmax=4)
+X2 = np.random.randn(10, 10)
+pc2 = ax2.imshow(X2, cmap='RdBu_r', norm=norm2)
+ax2.set_title('Normalize')
+
+plt.colorbar(pc1, ax=ax1)
+plt.colorbar(pc2, ax=ax2)
+plt.show()
\ No newline at end of file
