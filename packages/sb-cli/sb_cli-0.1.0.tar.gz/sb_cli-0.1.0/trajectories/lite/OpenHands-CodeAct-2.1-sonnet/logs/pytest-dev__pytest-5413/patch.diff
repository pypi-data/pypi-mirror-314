diff --git a/edge_cases.py b/edge_cases.py
new file mode 100644
index 000000000..5b46b7ef9
--- /dev/null
+++ b/edge_cases.py
@@ -0,0 +1,52 @@
+import pytest
+
+def test_empty_message():
+    try:
+        raise ValueError()
+    except ValueError as e:
+        print("Normal exception (empty):")
+        print(str(e))
+        print("\n")
+
+    with pytest.raises(ValueError) as e:
+        raise ValueError()
+    print("Pytest raises (empty):")
+    print(str(e))
+    print("\n")
+
+def test_unicode_message():
+    try:
+        raise ValueError("üêç Python\nüéØ Test")
+    except ValueError as e:
+        print("Normal exception (unicode):")
+        print(str(e))
+        print("\n")
+
+    with pytest.raises(ValueError) as e:
+        raise ValueError("üêç Python\nüéØ Test")
+    print("Pytest raises (unicode):")
+    print(str(e))
+    print("\n")
+
+def test_custom_str():
+    class CustomError(Exception):
+        def __str__(self):
+            return "Line 1\nLine 2\nLine 3"
+
+    try:
+        raise CustomError()
+    except CustomError as e:
+        print("Normal exception (custom str):")
+        print(str(e))
+        print("\n")
+
+    with pytest.raises(CustomError) as e:
+        raise CustomError()
+    print("Pytest raises (custom str):")
+    print(str(e))
+    print("\n")
+
+if __name__ == "__main__":
+    test_empty_message()
+    test_unicode_message()
+    test_custom_str()
\ No newline at end of file
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..7a56f3e7b
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,29 @@
+import pytest
+
+def test_normal_exception():
+    try:
+        raise LookupError(
+            f"A\n"
+            f"B\n"
+            f"C"
+        )
+    except LookupError as e:
+        print("Normal exception:")
+        print(str(e))
+        print("\n")
+
+def test_pytest_raises():
+    with pytest.raises(LookupError) as e:
+        raise LookupError(
+            f"A\n"
+            f"B\n"
+            f"C"
+        )
+    print("Pytest raises:")
+    print(str(e))
+    print("\nPytest raises with .value:")
+    print(str(e.value))
+
+if __name__ == "__main__":
+    test_normal_exception()
+    test_pytest_raises()
\ No newline at end of file
diff --git a/src/_pytest/_code/code.py b/src/_pytest/_code/code.py
index c4ed961ac..977e859e4 100644
--- a/src/_pytest/_code/code.py
+++ b/src/_pytest/_code/code.py
@@ -537,9 +537,7 @@ class ExceptionInfo:
     def __str__(self):
         if self._excinfo is None:
             return repr(self)
-        entry = self.traceback[-1]
-        loc = ReprFileLocation(entry.path, entry.lineno + 1, self.exconly())
-        return str(loc)
+        return str(self.value)
 
     def match(self, regexp):
         """
