diff --git a/django/db/models/deletion.py b/django/db/models/deletion.py
index 92fe4affb9..68383c24ce 100644
--- a/django/db/models/deletion.py
+++ b/django/db/models/deletion.py
@@ -277,6 +277,8 @@ class Collector:
             if self.can_fast_delete(instance):
                 with transaction.mark_for_rollback_on_error():
                     count = sql.DeleteQuery(model).delete_batch([instance.pk], self.using)
+                    # Set primary key to None after deletion
+                    setattr(instance, model._meta.pk.attname, None)
                 return count, {model._meta.label: count}
 
         with transaction.atomic(using=self.using, savepoint=False):
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..d7a37251d3
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,58 @@
+from django.conf import settings
+from django.db import models
+import os
+
+# Configure Django settings
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[],
+)
+
+import django
+django.setup()
+
+# Create models with no dependencies
+class SimpleModel(models.Model):
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+
+class CustomPKModel(models.Model):
+    id = models.UUIDField(primary_key=True)
+    name = models.CharField(max_length=100)
+
+    class Meta:
+        app_label = 'test_app'
+
+# Create the database tables
+from django.db import connection
+with connection.schema_editor() as schema_editor:
+    schema_editor.create_model(SimpleModel)
+    schema_editor.create_model(CustomPKModel)
+
+# Test single object deletion with auto-incrementing PK
+obj1 = SimpleModel.objects.create(name='test1')
+print(f"Before deletion (auto PK) - PK: {obj1.pk}")
+obj1.delete()
+print(f"After deletion (auto PK) - PK: {obj1.pk}")
+
+# Test multiple objects deletion
+obj2 = SimpleModel.objects.create(name='test2')
+obj3 = SimpleModel.objects.create(name='test3')
+print(f"\nBefore deletion (multiple) - PKs: {obj2.pk}, {obj3.pk}")
+SimpleModel.objects.filter(name__in=['test2', 'test3']).delete()
+print(f"After deletion (multiple) - PKs: {obj2.pk}, {obj3.pk}")  # These should stay as is since they use the normal path
+
+# Test single object deletion with custom PK field
+import uuid
+custom_pk = uuid.uuid4()
+obj4 = CustomPKModel.objects.create(id=custom_pk, name='test4')
+print(f"\nBefore deletion (custom PK) - PK: {obj4.pk}")
+obj4.delete()
+print(f"After deletion (custom PK) - PK: {obj4.pk}")
\ No newline at end of file
