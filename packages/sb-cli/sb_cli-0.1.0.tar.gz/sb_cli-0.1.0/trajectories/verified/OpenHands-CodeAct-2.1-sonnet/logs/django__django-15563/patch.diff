diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..ec8de04156
Binary files /dev/null and b/db.sqlite3 differ
diff --git a/django/db/models/sql/subqueries.py b/django/db/models/sql/subqueries.py
index 04063f73bc..f9041a0dd5 100644
--- a/django/db/models/sql/subqueries.py
+++ b/django/db/models/sql/subqueries.py
@@ -134,7 +134,27 @@ class UpdateQuery(Query):
             query = UpdateQuery(model)
             query.values = values
             if self.related_ids is not None:
-                query.add_filter("pk__in", self.related_ids)
+                # For multi-table inheritance, we need to use the correct parent link field
+                # to filter the rows to update
+                parent_link = None
+                for parent, parent_link in self.get_meta().parents.items():
+                    if parent == model:
+                        break
+                if parent_link:
+                    # Get the parent link field name from the child model
+                    parent_link_name = parent_link.name + "_id"
+                    # Get the parent IDs directly from the child model
+                    parent_ids = []
+                    for child_id in self.related_ids:
+                        try:
+                            parent_id = self.get_meta().model.objects.filter(pk=child_id).values_list(parent_link_name, flat=True)[0]
+                            parent_ids.append(parent_id)
+                        except (IndexError, self.get_meta().model.DoesNotExist):
+                            continue
+                    query.add_filter("pk__in", parent_ids)
+                else:
+                    # Fallback to using the child IDs directly
+                    query.add_filter("pk__in", self.related_ids)
             result.append(query)
         return result
