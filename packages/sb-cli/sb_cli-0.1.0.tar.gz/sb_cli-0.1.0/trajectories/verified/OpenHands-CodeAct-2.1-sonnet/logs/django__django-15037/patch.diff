diff --git a/django/core/management/commands/inspectdb.py b/django/core/management/commands/inspectdb.py
index f9b4bfb477..a3333d3550 100644
--- a/django/core/management/commands/inspectdb.py
+++ b/django/core/management/commands/inspectdb.py
@@ -124,10 +124,14 @@ class Command(BaseCommand):
                             "self" if relations[column_name][1] == table_name
                             else table2model(relations[column_name][1])
                         )
+                        rel_field = relations[column_name][0]  # Get the referenced field name
                         if rel_to in known_models:
                             field_type = '%s(%s' % (rel_type, rel_to)
                         else:
                             field_type = "%s('%s'" % (rel_type, rel_to)
+                        # Add to_field parameter if the referenced field is not the primary key
+                        if rel_field != 'id':
+                            field_type += ", to_field='%s'" % rel_field
                     else:
                         # Calling `get_field_type` to get the field type string and any
                         # additional parameters and notes.
diff --git a/reproduce_fk_issue.py b/reproduce_fk_issue.py
new file mode 100644
index 0000000000..019cb7a409
--- /dev/null
+++ b/reproduce_fk_issue.py
@@ -0,0 +1,55 @@
+import os
+import sys
+from django.core.management import execute_from_command_line
+from django.db import connection
+
+# Setup minimal Django settings
+os.environ['DJANGO_SETTINGS_MODULE'] = 'test_settings'
+
+# Create test settings module
+with open('test_settings.py', 'w') as f:
+    f.write("""
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.postgresql',
+        'NAME': 'postgres',
+        'USER': 'postgres',
+        'PASSWORD': 'postgres',
+        'HOST': 'localhost',
+        'PORT': '5432',
+    }
+}
+INSTALLED_APPS = ['django.contrib.contenttypes']
+SECRET_KEY = 'dummy'
+""")
+
+def create_test_schema():
+    with connection.cursor() as cursor:
+        # Drop tables if they exist
+        cursor.execute("""
+            DROP TABLE IF EXISTS bar;
+            DROP TABLE IF EXISTS foo;
+        """)
+        
+        # Create the tables
+        cursor.execute("""
+            CREATE TABLE foo (
+                id serial primary key,
+                other_id int UNIQUE
+            );
+            
+            CREATE TABLE bar (
+                id serial primary key,
+                other_id int,
+                constraint myconst 
+                FOREIGN KEY(other_id) references foo(other_id)
+            );
+        """)
+
+if __name__ == '__main__':
+    # Create the test schema
+    create_test_schema()
+    
+    # Run inspectdb
+    sys.argv = ['manage.py', 'inspectdb', 'bar', 'foo']
+    execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..c8fa6f5c98
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,13 @@
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.postgresql',
+        'NAME': 'postgres',
+        'USER': 'postgres',
+        'PASSWORD': 'postgres',
+        'HOST': 'localhost',
+        'PORT': '5432',
+    }
+}
+INSTALLED_APPS = ['django.contrib.contenttypes']
+SECRET_KEY = 'dummy'
