diff --git a/sklearn/model_selection/_search.py b/sklearn/model_selection/_search.py
index 99d6096af..c1c726121 100644
--- a/sklearn/model_selection/_search.py
+++ b/sklearn/model_selection/_search.py
@@ -764,12 +764,16 @@ class BaseSearchCV(six.with_metaclass(ABCMeta, BaseEstimator,
                 self.best_index_]
 
         if self.refit:
+            # Time the refit of the best estimator
+            import time
+            refit_start_time = time.time()
             self.best_estimator_ = clone(base_estimator).set_params(
                 **self.best_params_)
             if y is not None:
                 self.best_estimator_.fit(X, y, **fit_params)
             else:
                 self.best_estimator_.fit(X, **fit_params)
+            self.refit_time_ = time.time() - refit_start_time
 
         # Store the only scorer not as a dict for single metric evaluation
         self.scorer_ = scorers if self.multimetric_ else scorers['score']
@@ -1064,7 +1068,11 @@ class GridSearchCV(BaseSearchCV):
         mean score (``search.best_score_``).
 
         For multi-metric evaluation, this is present only if ``refit`` is
-        specified.
+
+    refit_time_ : float
+        Time in seconds taken to refit the best model on the whole dataset.
+
+        This is present only if ``refit`` is not False.
 
     scorer_ : function or a dict
         Scorer function used on the held out data to choose the best
