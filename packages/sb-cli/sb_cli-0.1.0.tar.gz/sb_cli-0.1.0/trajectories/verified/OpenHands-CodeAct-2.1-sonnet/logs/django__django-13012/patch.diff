diff --git a/django/db/models/expressions.py b/django/db/models/expressions.py
index c1a76584f0..e3f5e7fa45 100644
--- a/django/db/models/expressions.py
+++ b/django/db/models/expressions.py
@@ -866,6 +866,13 @@ class ExpressionWrapper(Expression):
     def as_sql(self, compiler, connection):
         return self.expression.as_sql(compiler, connection)
 
+    def get_group_by_cols(self, alias=None):
+        # Check if the wrapped expression is a constant expression
+        if not self.expression.contains_column_references:
+            return []
+        # Otherwise delegate to the wrapped expression's get_group_by_cols()
+        return self.expression.get_group_by_cols()
+
     def __repr__(self):
         return "{}({})".format(self.__class__.__name__, self.expression)
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..94ba275fba
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,39 @@
+from django.conf import settings
+
+# Configure Django settings first
+settings.configure(
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    DEFAULT_AUTO_FIELD='django.db.models.AutoField',
+    INSTALLED_APPS=['testapp'],
+)
+
+import django
+django.setup()
+
+from django.db import connection, models
+from django.db.models import Value, IntegerField, Sum, ExpressionWrapper
+from django.db.models.sql.query import Query
+
+# Create a minimal model class
+class Model(models.Model):
+    column_a = models.IntegerField()
+    column_b = models.IntegerField()
+
+    class Meta:
+        app_label = 'testapp'
+        db_table = 'model'
+
+# Create a queryset using the ORM
+qs = Model.objects.annotate(
+    expr_res=ExpressionWrapper(Value(3) * models.F('column_b'), output_field=IntegerField())
+).values('expr_res', 'column_a').annotate(
+    sum=Sum('column_b')
+)
+
+# Print the SQL query
+print(qs.query)
\ No newline at end of file
diff --git a/testapp/__init__.py b/testapp/__init__.py
new file mode 100644
index 0000000000..a7506fdc94
--- /dev/null
+++ b/testapp/__init__.py
@@ -0,0 +1 @@
+# Empty init file
\ No newline at end of file
diff --git a/testapp/apps.py b/testapp/apps.py
new file mode 100644
index 0000000000..7100945a3b
--- /dev/null
+++ b/testapp/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'testapp'
\ No newline at end of file
