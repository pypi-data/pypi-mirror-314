diff --git a/sphinx/pycode/ast.py b/sphinx/pycode/ast.py
index f541ec0a9..cdd1ec810 100644
--- a/sphinx/pycode/ast.py
+++ b/sphinx/pycode/ast.py
@@ -213,10 +213,13 @@ class _UnparseVisitor(ast.NodeVisitor):
         return "%s %s" % (self.visit(node.op), self.visit(node.operand))
 
     def visit_Tuple(self, node: ast.Tuple) -> str:
-        if node.elts:
-            return "(" + ", ".join(self.visit(e) for e in node.elts) + ")"
-        else:
+        if not node.elts:
             return "()"
+        elif len(node.elts) == 1:
+            # Single-element tuple needs trailing comma
+            return "(" + self.visit(node.elts[0]) + ",)"
+        else:
+            return "(" + ", ".join(self.visit(e) for e in node.elts) + ")"
 
     if sys.version_info < (3, 8):
         # these ast nodes were deprecated in python 3.8
diff --git a/test_tuple.py b/test_tuple.py
new file mode 100644
index 000000000..4347be23e
--- /dev/null
+++ b/test_tuple.py
@@ -0,0 +1,18 @@
+from sphinx.pycode import ast
+
+def test_tuple(source):
+    module = ast.parse(source)
+    result = ast.unparse(module.body[0].value, source)
+    print(f"Source: {source}")
+    print(f"Result: {result}")
+    print()
+
+# Test cases
+test_tuple("()")           # Empty tuple
+test_tuple("(1,)")        # Single-element tuple
+test_tuple("(1, 2)")      # Two-element tuple
+test_tuple("(1, 2, 3)")   # Three-element tuple
+test_tuple("(1 + 2,)")    # Single-element tuple with expression
+test_tuple("('hello',)")  # Single-element tuple with string
+test_tuple("(None,)")     # Single-element tuple with None
+test_tuple("(...,)")      # Single-element tuple with Ellipsis
\ No newline at end of file
