diff --git a/django/conf/global_settings.py b/django/conf/global_settings.py
index acee9887d2..bdeec80610 100644
--- a/django/conf/global_settings.py
+++ b/django/conf/global_settings.py
@@ -304,7 +304,7 @@ FILE_UPLOAD_TEMP_DIR = None
 
 # The numeric mode to set newly-uploaded files to. The value should be a mode
 # you'd pass directly to os.chmod; see https://docs.python.org/library/os.html#files-and-directories.
-FILE_UPLOAD_PERMISSIONS = None
+FILE_UPLOAD_PERMISSIONS = 0o644
 
 # The numeric mode to assign to newly-created directories, when uploading files.
 # The value should be a mode as you'd pass to os.chmod;
diff --git a/test_upload_permissions.py b/test_upload_permissions.py
new file mode 100644
index 0000000000..7e4be8acfa
--- /dev/null
+++ b/test_upload_permissions.py
@@ -0,0 +1,41 @@
+import os
+import tempfile
+from django.conf import settings
+from django.core.files.storage import FileSystemStorage
+from django.core.files.uploadedfile import SimpleUploadedFile, TemporaryUploadedFile
+
+# Initialize Django settings
+settings.configure(
+    DEBUG=True,
+    MEDIA_ROOT=tempfile.mkdtemp(),
+    DEFAULT_FILE_STORAGE='django.core.files.storage.FileSystemStorage',
+)
+
+def test_small_file():
+    """Test upload of a small file (uses MemoryFileUploadHandler)"""
+    content = b'Small file content'
+    uploaded = SimpleUploadedFile('small.txt', content)
+    storage = FileSystemStorage()
+    name = storage.save('small.txt', uploaded)
+    path = storage.path(name)
+    perms = oct(os.stat(path).st_mode & 0o777)
+    print(f"Small file permissions: {perms}")
+    return path
+
+def test_large_file():
+    """Test upload of a large file (uses TemporaryFileUploadHandler)"""
+    content = b'Large file content' * 1000000  # Create ~15MB file
+    with TemporaryUploadedFile('large.txt', 'text/plain', len(content), 'utf-8') as uploaded:
+        uploaded.write(content)
+        uploaded.seek(0)
+        storage = FileSystemStorage()
+        name = storage.save('large.txt', uploaded)
+        path = storage.path(name)
+        perms = oct(os.stat(path).st_mode & 0o777)
+        print(f"Large file permissions: {perms}")
+        return path
+
+if __name__ == '__main__':
+    small_path = test_small_file()
+    large_path = test_large_file()
+    print("\nBoth files should have 0o644 permissions")
\ No newline at end of file
