diff --git a/pylint/lint/run.py b/pylint/lint/run.py
index a7e5d5574..c0408d2d2 100644
--- a/pylint/lint/run.py
+++ b/pylint/lint/run.py
@@ -57,7 +57,8 @@ def _query_cpu() -> int | None:
         with open("/sys/fs/cgroup/cpu/cpu.shares", encoding="utf-8") as file:
             cpu_shares = int(file.read().rstrip())
         # For AWS, gives correct value * 1024.
-        avail_cpu = int(cpu_shares / 1024)
+        # Ensure we return at least 1 CPU when shares are available
+        avail_cpu = max(1, int(cpu_shares / 1024))
     return avail_cpu
 
 
diff --git a/test_package/my_package/__init__.py b/test_package/my_package/__init__.py
new file mode 100644
index 000000000..1fb7499b2
--- /dev/null
+++ b/test_package/my_package/__init__.py
@@ -0,0 +1 @@
+"""Test package."""
\ No newline at end of file
diff --git a/test_package/my_package/example.py b/test_package/my_package/example.py
new file mode 100644
index 000000000..86ac31f28
--- /dev/null
+++ b/test_package/my_package/example.py
@@ -0,0 +1,5 @@
+"""Example module."""
+
+def hello():
+    """Print hello."""
+    print("Hello world!")
\ No newline at end of file
diff --git a/test_package/reproduce.py b/test_package/reproduce.py
new file mode 100644
index 000000000..2fe0865cc
--- /dev/null
+++ b/test_package/reproduce.py
@@ -0,0 +1,23 @@
+"""Script to reproduce the error with --jobs=0 in Kubernetes."""
+
+import os
+import sys
+
+# Create mock cgroup files to simulate Kubernetes environment
+os.makedirs("/sys/fs/cgroup/cpu", exist_ok=True)
+
+# Write the values from the bug report
+with open("/sys/fs/cgroup/cpu/cpu.cfs_quota_us", "w") as f:
+    f.write("-1\n")
+with open("/sys/fs/cgroup/cpu/cpu.cfs_period_us", "w") as f:
+    f.write("100000\n")
+with open("/sys/fs/cgroup/cpu/cpu.shares", "w") as f:
+    f.write("2\n")
+
+# Run pylint with --jobs=0
+from pylint.lint import Run
+try:
+    Run(["--jobs=0", "my_package"])
+except ValueError as e:
+    print(f"Error: {e}")
+    sys.exit(1)
\ No newline at end of file
