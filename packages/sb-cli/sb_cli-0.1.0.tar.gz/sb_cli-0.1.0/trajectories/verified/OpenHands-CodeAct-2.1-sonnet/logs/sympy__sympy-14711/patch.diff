diff --git a/sympy/physics/vector/vector.py b/sympy/physics/vector/vector.py
index a048ee57f1..776392ae58 100644
--- a/sympy/physics/vector/vector.py
+++ b/sympy/physics/vector/vector.py
@@ -57,6 +57,8 @@ def __hash__(self):
 
     def __add__(self, other):
         """The add operator for Vector. """
+        if other == 0:
+            return self
         other = _check_vector(other)
         return Vector(self.args + other.args)
 
@@ -121,12 +123,15 @@ def __eq__(self, other):
 
         """
 
-        if other == 0:
-            other = Vector(0)
-        try:
-            other = _check_vector(other)
-        except TypeError:
+        # Special case for zero
+        if not isinstance(other, Vector) and other == 0:
+            return len(self.args) == 0
+
+        # Only accept Vector instances
+        if not isinstance(other, Vector):
             return False
+
+        # Both empty vectors are equal
         if (self.args == []) and (other.args == []):
             return True
         elif (self.args == []) or (other.args == []):
@@ -721,6 +726,8 @@ def __init__(self, other, want):
 
 
 def _check_vector(other):
+    if other == 0:
+        return Vector(0)
     if not isinstance(other, Vector):
         raise TypeError('A Vector must be supplied')
     return other
