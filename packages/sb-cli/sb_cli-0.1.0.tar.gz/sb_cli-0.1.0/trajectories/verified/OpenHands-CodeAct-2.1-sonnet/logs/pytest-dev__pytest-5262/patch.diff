diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 25eab7fdf..6f5b54c05 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -433,9 +433,13 @@ class EncodedFile(object):
         if isinstance(obj, six.text_type):
             obj = obj.encode(self.encoding, "replace")
         elif _PY3:
-            raise TypeError(
-                "write() argument must be str, not {}".format(type(obj).__name__)
-            )
+            if isinstance(obj, bytes):
+                # Convert bytes to str for Python 3
+                obj = obj.decode(self.encoding, "replace")
+            else:
+                raise TypeError(
+                    "write() argument must be str or bytes, not {}".format(type(obj).__name__)
+                )
         self.buffer.write(obj)
 
     def writelines(self, linelist):
@@ -447,6 +451,12 @@ class EncodedFile(object):
         """Ensure that file.name is a string."""
         return repr(self.buffer)
 
+    @property
+    def mode(self):
+        """Return the file mode without 'b' to indicate text mode."""
+        mode = getattr(self.buffer, 'mode', 'w+')
+        return mode.replace('b', '')
+
     def __getattr__(self, name):
         return getattr(object.__getattribute__(self, "buffer"), name)
 
diff --git a/test_youtube_dl.py b/test_youtube_dl.py
new file mode 100644
index 000000000..d7b007042
--- /dev/null
+++ b/test_youtube_dl.py
@@ -0,0 +1,3 @@
+import youtube_dl
+def test_foo():
+    youtube_dl.YoutubeDL().extract_info('http://example.com/')
\ No newline at end of file
