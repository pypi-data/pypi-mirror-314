diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 000000000..8d8000b9b
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,6 @@
+from sklearn.model_selection import RepeatedKFold, RepeatedStratifiedKFold
+
+print("RepeatedKFold repr:")
+print(repr(RepeatedKFold()))
+print("\nRepeatedStratifiedKFold repr:")
+print(repr(RepeatedStratifiedKFold()))
\ No newline at end of file
diff --git a/sklearn/model_selection/_split.py b/sklearn/model_selection/_split.py
index c49a3ce6a..506bd357b 100644
--- a/sklearn/model_selection/_split.py
+++ b/sklearn/model_selection/_split.py
@@ -1063,7 +1063,7 @@ class LeavePGroupsOut(BaseCrossValidator):
         return super().split(X, y, groups)
 
 
-class _RepeatedSplits(metaclass=ABCMeta):
+class _RepeatedSplits(BaseCrossValidator):
     """Repeated splits for an arbitrary randomized CV splitter.
 
     Repeats splits for cross-validators n times with different randomization
@@ -1213,9 +1213,14 @@ class RepeatedKFold(_RepeatedSplits):
     RepeatedStratifiedKFold: Repeats Stratified K-Fold n times.
     """
     def __init__(self, n_splits=5, n_repeats=10, random_state=None):
+        self.n_splits = n_splits
         super().__init__(
             KFold, n_repeats, random_state, n_splits=n_splits)
 
+    def __repr__(self):
+        return "RepeatedKFold(n_splits=%r, n_repeats=%r, random_state=%r)" % (
+            self.n_splits, self.n_repeats, self.random_state)
+
 
 class RepeatedStratifiedKFold(_RepeatedSplits):
     """Repeated Stratified K-Fold cross validator.
@@ -1266,9 +1271,14 @@ class RepeatedStratifiedKFold(_RepeatedSplits):
     RepeatedKFold: Repeats K-Fold n times.
     """
     def __init__(self, n_splits=5, n_repeats=10, random_state=None):
+        self.n_splits = n_splits
         super().__init__(
             StratifiedKFold, n_repeats, random_state, n_splits=n_splits)
 
+    def __repr__(self):
+        return "RepeatedStratifiedKFold(n_splits=%r, n_repeats=%r, random_state=%r)" % (
+            self.n_splits, self.n_repeats, self.random_state)
+
 
 class BaseShuffleSplit(metaclass=ABCMeta):
     """Base class for ShuffleSplit and StratifiedShuffleSplit"""
