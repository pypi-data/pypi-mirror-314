diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 00000000..a54f29f5
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,11 @@
+import requests
+
+# This should work
+files = {u'file': open('/workspace/psf__requests__2.0/README.rst', u'rb')}
+response = requests.request(method='POST', url=u'http://httpbin.org/post', files=files)
+print("First request (str method) succeeded!")
+
+# This should fail with UnicodeDecodeError
+files = {u'file': open('/workspace/psf__requests__2.0/README.rst', u'rb')}
+response = requests.request(method=u'POST', url=u'http://httpbin.org/post', files=files)
+print("Second request (unicode method) succeeded!")
\ No newline at end of file
diff --git a/requests/models.py b/requests/models.py
index f82f56a3..7fd153d2 100644
--- a/requests/models.py
+++ b/requests/models.py
@@ -307,7 +307,16 @@ class PreparedRequest(RequestEncodingMixin, RequestHooksMixin):
         """Prepares the given HTTP method."""
         self.method = method
         if self.method is not None:
-            self.method = self.method.upper()
+            try:
+                # First convert to str if needed
+                if not isinstance(self.method, str):
+                    self.method = str(self.method)
+                # Then check for non-ASCII characters
+                self.method.encode('ascii')
+                # Finally convert to uppercase
+                self.method = self.method.upper()
+            except UnicodeEncodeError:
+                raise ValueError('HTTP method names must be ASCII strings')
 
     def prepare_url(self, url, params):
         """Prepares the given HTTP URL."""
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..a67e1f21
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,25 @@
+import requests
+import sys
+
+# Test various HTTP methods with unicode strings
+methods = ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'HEAD', 'OPTIONS']
+url = 'http://httpbin.org/anything'
+files = {'file': open('/workspace/psf__requests__2.0/README.rst', 'rb')}
+
+for method in methods:
+    print("Testing method: %s" % method)
+    response = requests.request(method=method, url=url, files=files)
+    print("Response status: %s" % response.status_code)
+    print("Success!")
+    print("")
+
+# Test with mixed unicode/str methods
+response = requests.request(method='POST', url='http://httpbin.org/post', files=files)
+print("Mixed unicode/str test succeeded!")
+
+# Test with non-ASCII method (should raise ValueError)
+try:
+    response = requests.request(method='PÃ–ST', url='http://httpbin.org/post', files=files)
+    print("WARNING: Non-ASCII method name was accepted!")
+except ValueError:
+    print("Non-ASCII method name correctly rejected!")
\ No newline at end of file
