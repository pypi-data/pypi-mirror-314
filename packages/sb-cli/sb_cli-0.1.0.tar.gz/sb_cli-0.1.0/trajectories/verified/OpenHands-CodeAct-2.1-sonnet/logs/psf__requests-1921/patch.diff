diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..21a53580
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,30 @@
+import requests
+
+def print_headers(session, msg=""):
+    print(f"\n=== {msg} ===")
+    print("Session headers:", dict(session.headers))
+    response = session.get('http://httpbin.org/headers')
+    print("Request headers:", response.json())
+
+# Test Case 1: Basic case - setting header to None
+session = requests.Session()
+print_headers(session, "Initial state")
+session.headers['Accept-Encoding'] = None
+print_headers(session, "After setting Accept-Encoding to None")
+
+# Test Case 2: Setting non-existent header to None
+session = requests.Session()
+session.headers['X-Custom-Header'] = None
+print_headers(session, "After setting non-existent header to None")
+
+# Test Case 3: Setting header to None multiple times
+session = requests.Session()
+session.headers['Accept-Encoding'] = None
+session.headers['Accept-Encoding'] = None
+print_headers(session, "After setting Accept-Encoding to None twice")
+
+# Test Case 4: Setting header to None after setting it to a value
+session = requests.Session()
+session.headers['X-Custom-Header'] = 'test'
+session.headers['X-Custom-Header'] = None
+print_headers(session, "After setting header to value then None")
\ No newline at end of file
diff --git a/requests/structures.py b/requests/structures.py
index a1759137..05793f40 100644
--- a/requests/structures.py
+++ b/requests/structures.py
@@ -71,7 +71,11 @@ class CaseInsensitiveDict(collections.MutableMapping):
     def __setitem__(self, key, value):
         # Use the lowercased key for lookups, but store the actual
         # key alongside the value.
-        self._store[key.lower()] = (key, value)
+        # If value is None, delete the key instead
+        if value is None:
+            self._store.pop(key.lower(), None)
+        else:
+            self._store[key.lower()] = (key, value)
 
     def __getitem__(self, key):
         return self._store[key.lower()][1]
