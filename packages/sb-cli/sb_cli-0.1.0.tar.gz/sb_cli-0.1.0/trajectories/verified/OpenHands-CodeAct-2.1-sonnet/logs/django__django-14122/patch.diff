diff --git a/django/db/models/sql/compiler.py b/django/db/models/sql/compiler.py
index 850734709d..f3d0d5426d 100644
--- a/django/db/models/sql/compiler.py
+++ b/django/db/models/sql/compiler.py
@@ -125,11 +125,22 @@ class SQLCompiler:
             cols = expr.get_group_by_cols()
             for col in cols:
                 expressions.append(col)
+        # Get explicitly requested fields from values() calls
+        explicit_group_by = set()
+        if self.query.group_by is not True and self.query.group_by is not None:
+            explicit_group_by = {str(expr) if hasattr(expr, 'as_sql') else str(self.query.resolve_ref(expr))
+                               for expr in self.query.group_by}
+
         for expr, (sql, params, is_ref) in order_by:
             # Skip References to the select clause, as all expressions in the
             # select clause are already part of the group by.
+            # Also skip Meta.ordering fields unless explicitly requested
             if not is_ref:
-                expressions.extend(expr.get_group_by_cols())
+                cols = expr.get_group_by_cols()
+                for col in cols:
+                    if (not hasattr(self, '_meta_ordering') or not self._meta_ordering or
+                            str(col) in explicit_group_by):
+                        expressions.append(col)
         having_group_by = self.having.get_group_by_cols() if self.having else ()
         for expr in having_group_by:
             expressions.append(expr)
