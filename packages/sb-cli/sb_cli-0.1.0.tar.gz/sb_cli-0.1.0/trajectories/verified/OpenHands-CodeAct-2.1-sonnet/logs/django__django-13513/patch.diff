diff --git a/test_exception.py b/test_exception.py
new file mode 100644
index 0000000000..33e16ba843
--- /dev/null
+++ b/test_exception.py
@@ -0,0 +1,52 @@
+from django.views import View
+from django.views.debug import ExceptionReporter
+from django.conf import settings
+from django.test.utils import setup_test_environment
+
+# Configure minimal settings
+settings.configure(
+    DEBUG=True,
+    DEFAULT_EXCEPTION_REPORTER_FILTER='django.views.debug.SafeExceptionReporterFilter',
+    DEFAULT_EXCEPTION_REPORTER='django.views.debug.ExceptionReporter',
+)
+setup_test_environment()
+
+class TestView(View):
+    def get(self, request, *args, **kwargs):
+        try:
+            raise RuntimeError('my error')
+        except Exception as exc:
+            raise ValueError('my new error') from None
+
+# Create a mock request since we don't have a real one
+class MockRequest:
+    def __init__(self):
+        self.META = {}
+        self.GET = {}
+        self.POST = {}
+        self.COOKIES = {}
+        self.FILES = {}
+        self.accepts = lambda x: True
+
+# Simulate the error
+try:
+    view = TestView()
+    view.get(MockRequest())
+except Exception as e:
+    reporter = ExceptionReporter(MockRequest(), type(e), e, e.__traceback__)
+    frames = reporter.get_traceback_frames()
+    print("\nException chain analysis:")
+    print("------------------------")
+    print(f"Main exception: {type(e).__name__}: {str(e)}")
+    print(f"Has __cause__: {e.__cause__}")
+    print(f"Has __context__: {e.__context__}")
+    print(f"Has __suppress_context__: {e.__suppress_context__}")
+    print("\nDebug view's exception chain:")
+    print("---------------------------")
+    exc_value = e
+    while exc_value:
+        print(f"- {type(exc_value).__name__}: {str(exc_value)}")
+        explicit = getattr(exc_value, '__cause__', None)
+        suppress_context = getattr(exc_value, '__suppress_context__', None)
+        implicit = getattr(exc_value, '__context__', None)
+        exc_value = explicit or (None if suppress_context else implicit)
\ No newline at end of file
