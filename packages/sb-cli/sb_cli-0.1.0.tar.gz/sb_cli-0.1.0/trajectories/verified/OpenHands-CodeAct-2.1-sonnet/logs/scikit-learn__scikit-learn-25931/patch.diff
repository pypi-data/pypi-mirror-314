diff --git a/sklearn/ensemble/_iforest.py b/sklearn/ensemble/_iforest.py
index 4d6c1c3f0..142bca7ef 100644
--- a/sklearn/ensemble/_iforest.py
+++ b/sklearn/ensemble/_iforest.py
@@ -4,7 +4,7 @@
 
 import numbers
 import numpy as np
-from scipy.sparse import issparse
+from scipy.sparse import issparse, csr_matrix
 from warnings import warn
 from numbers import Integral, Real
 
@@ -288,10 +288,11 @@ class IsolationForest(OutlierMixin, BaseBagging):
             Fitted estimator.
         """
         self._validate_params()
-        X = self._validate_data(X, accept_sparse=["csc"], dtype=tree_dtype)
+        X = self._validate_data(X, accept_sparse=["csr", "csc"], dtype=tree_dtype)
         if issparse(X):
-            # Pre-sort indices to avoid that each individual tree of the
-            # ensemble sorts the indices.
+            # Convert to CSR for prediction and sort indices
+            if not isinstance(X, csr_matrix):
+                X = X.tocsr()
             X.sort_indices()
 
         rnd = check_random_state(self.random_state)
@@ -345,7 +346,9 @@ class IsolationForest(OutlierMixin, BaseBagging):
             return self
 
         # else, define offset_ wrt contamination parameter
-        self.offset_ = np.percentile(self.score_samples(X), 100.0 * self.contamination)
+        # Compute scores directly without re-validating data
+        scores = -self._compute_chunked_score_samples(X)
+        self.offset_ = np.percentile(scores, 100.0 * self.contamination)
 
         return self
