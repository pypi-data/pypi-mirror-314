diff --git a/bug_reproduction.png b/bug_reproduction.png
new file mode 100644
index 0000000000..099adfd0df
Binary files /dev/null and b/bug_reproduction.png differ
diff --git a/lib/matplotlib/dates.py b/lib/matplotlib/dates.py
index 4d8ddf3ee5..500e43eb57 100644
--- a/lib/matplotlib/dates.py
+++ b/lib/matplotlib/dates.py
@@ -797,7 +797,8 @@ class ConciseDateFormatter(ticker.Formatter):
         # 3: hours, 4: minutes, 5: seconds, 6: microseconds
         for level in range(5, -1, -1):
             if len(np.unique(tickdate[:, level])) > 1:
-                if level < 2:
+                # Always show year in offset when showing months or days
+                if level < 1:  # Only hide offset for year level
                     show_offset = False
                 break
             elif level == 0:
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..00130acc8b
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,26 @@
+import matplotlib.pyplot as plt
+import matplotlib.dates as mdates
+from datetime import datetime, timedelta
+
+#create time array
+initial = datetime(2021,2,14,0,0,0)
+time_array = [initial + timedelta(days=x) for x in range(1,200)]
+
+#create data array
+data = [-x**2/20000 for x in range(1,200)]
+
+#plot data
+fig,ax = plt.subplots()
+ax.plot(time_array,data) 
+        
+locator = mdates.AutoDateLocator()
+formatter = mdates.ConciseDateFormatter(locator)
+
+ax.grid(True)
+ax.set_ylabel("Temperature ($\degree$C)")
+ax.xaxis.set_major_locator(locator)   
+ax.xaxis.set_major_formatter(formatter)
+fig.autofmt_xdate() #automatically makes the x-labels rotate
+
+plt.savefig('bug_reproduction.png')
+plt.close()
\ No newline at end of file
diff --git a/test_2weeks.png b/test_2weeks.png
new file mode 100644
index 0000000000..7a283da2e9
Binary files /dev/null and b/test_2weeks.png differ
diff --git a/test_2years.png b/test_2years.png
new file mode 100644
index 0000000000..46e8bd990a
Binary files /dev/null and b/test_2years.png differ
diff --git a/test_6months.png b/test_6months.png
new file mode 100644
index 0000000000..a49719f58e
Binary files /dev/null and b/test_6months.png differ
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..0a07838a3d
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,35 @@
+import matplotlib.pyplot as plt
+import matplotlib.dates as mdates
+from datetime import datetime, timedelta
+
+def test_date_range(initial_date, days, filename):
+    time_array = [initial_date + timedelta(days=x) for x in range(days)]
+    data = [-x**2/20000 for x in range(days)]
+    
+    fig,ax = plt.subplots()
+    ax.plot(time_array,data) 
+            
+    locator = mdates.AutoDateLocator()
+    formatter = mdates.ConciseDateFormatter(locator)
+
+    ax.grid(True)
+    ax.set_ylabel("Temperature ($\degree$C)")
+    ax.xaxis.set_major_locator(locator)   
+    ax.xaxis.set_major_formatter(formatter)
+    fig.autofmt_xdate()
+    
+    plt.savefig(filename)
+    plt.close()
+
+# Test cases:
+# 1. Original case: Feb-Aug 2021 (6 months)
+test_date_range(datetime(2021,2,14), 200, 'test_6months.png')
+
+# 2. Crossing year boundary: Dec 2021 - Feb 2022 (3 months)
+test_date_range(datetime(2021,12,1), 90, 'test_year_boundary.png')
+
+# 3. Very short range: Just 2 weeks in middle of year
+test_date_range(datetime(2021,6,1), 14, 'test_2weeks.png')
+
+# 4. Multiple years: 2 years
+test_date_range(datetime(2020,1,1), 730, 'test_2years.png')
\ No newline at end of file
diff --git a/test_year_boundary.png b/test_year_boundary.png
new file mode 100644
index 0000000000..17ae53a6c5
Binary files /dev/null and b/test_year_boundary.png differ
