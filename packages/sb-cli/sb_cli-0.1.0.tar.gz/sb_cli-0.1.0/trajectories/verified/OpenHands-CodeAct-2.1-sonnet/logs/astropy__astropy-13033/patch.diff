diff --git a/astropy/timeseries/core.py b/astropy/timeseries/core.py
index c279f35f87..3eb45b5eec 100644
--- a/astropy/timeseries/core.py
+++ b/astropy/timeseries/core.py
@@ -69,16 +69,19 @@ class BaseTimeSeries(QTable):
             plural = 's' if len(required_columns) > 1 else ''
 
             if not self._required_columns_relax and len(self.colnames) == 0:
-
-                raise ValueError("{} object is invalid - expected '{}' "
-                                 "as the first column{} but time series has no columns"
-                                 .format(self.__class__.__name__, required_columns[0], plural))
+                raise ValueError("{} object is invalid - missing required columns: {}"
+                                 .format(self.__class__.__name__, ", ".join(f"'{col}'" for col in required_columns)))
 
             elif self.colnames[:len(required_columns)] != required_columns:
-
-                raise ValueError("{} object is invalid - expected '{}' "
-                                 "as the first column{} but found '{}'"
-                                 .format(self.__class__.__name__, required_columns[0], plural, self.colnames[0]))
+                # Find which required columns are missing
+                missing = [col for col in required_columns if col not in self.colnames]
+                if missing:
+                    raise ValueError("{} object is invalid - missing required columns: {}"
+                                   .format(self.__class__.__name__, ", ".join(f"'{col}'" for col in missing)))
+                else:
+                    # If no columns are missing, it means they are in the wrong order
+                    raise ValueError("{} object is invalid - columns must be in order: {}"
+                                   .format(self.__class__.__name__, ", ".join(f"'{col}'" for col in required_columns)))
 
             if (self._required_columns_relax
                     and self._required_columns == self.colnames[:len(self._required_columns)]):
