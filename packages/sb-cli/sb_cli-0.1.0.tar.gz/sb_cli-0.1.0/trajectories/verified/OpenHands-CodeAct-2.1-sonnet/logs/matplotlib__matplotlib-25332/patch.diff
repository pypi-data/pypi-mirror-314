diff --git a/lib/matplotlib/cbook.py b/lib/matplotlib/cbook.py
index c9699b2e21..3f7425b512 100644
--- a/lib/matplotlib/cbook.py
+++ b/lib/matplotlib/cbook.py
@@ -788,6 +788,21 @@ class Grouper:
     def __init__(self, init=()):
         self._mapping = {weakref.ref(x): [weakref.ref(x)] for x in init}
 
+    def __getstate__(self):
+        # Convert weak references to strong references for pickling
+        mapping = {}
+        for key, val in self._mapping.items():
+            if key() is not None:
+                mapping[key()] = [x() for x in val if x() is not None]
+        return {'_mapping': mapping}
+
+    def __setstate__(self, state):
+        # Convert back to weak references after unpickling
+        mapping = {}
+        for key, val in state['_mapping'].items():
+            mapping[weakref.ref(key)] = [weakref.ref(x) for x in val]
+        self._mapping = mapping
+
     def __contains__(self, item):
         return weakref.ref(item) in self._mapping
 
diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 0000000000..dc2c0806f7
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,18 @@
+import matplotlib.pyplot as plt
+import pickle
+
+fig = plt.figure()
+ax1 = fig.add_subplot(211)
+ax2 = fig.add_subplot(212)
+time=[0,1,2,3,4]
+speed=[40000,4300,4500,4700,4800]
+acc=[10,11,12,13,14]
+ax1.plot(time,speed)
+ax1.set_ylabel('speed')
+ax2.plot(time,acc)
+ax2.set_ylabel('acc')
+
+fig.align_labels()  # This line causes the pickling issue
+
+pickle.dumps(fig)
+plt.show()
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..228aaac9bd
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,35 @@
+import matplotlib.pyplot as plt
+import pickle
+
+# Test case 1: Multiple subplots with different alignments
+fig1 = plt.figure(figsize=(10, 8))
+gs = fig1.add_gridspec(2, 2)
+ax1 = fig1.add_subplot(gs[0, 0])
+ax2 = fig1.add_subplot(gs[0, 1])
+ax3 = fig1.add_subplot(gs[1, :])
+
+ax1.plot([1, 2, 3], [1, 2, 3])
+ax2.plot([1, 2, 3], [3, 2, 1])
+ax3.plot([1, 2, 3], [2, 2, 2])
+
+ax1.set_ylabel('Y1')
+ax2.set_ylabel('Y2')
+ax3.set_ylabel('Y3')
+
+fig1.align_labels()
+pickle.dumps(fig1)
+
+# Test case 2: Empty figure with align_labels
+fig2 = plt.figure()
+fig2.align_labels()
+pickle.dumps(fig2)
+
+# Test case 3: Figure with removed axes
+fig3 = plt.figure()
+ax = fig3.add_subplot(111)
+ax.set_ylabel('Y')
+fig3.align_labels()
+fig3.delaxes(ax)
+pickle.dumps(fig3)
+
+print("All test cases passed!")
\ No newline at end of file
