diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..7649b24abc
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,5 @@
+import sympy
+
+s = sympy.Symbol('s')
+print("Symbol's __dict__:", s.__dict__)
+print("Symbol's __slots__:", s.__slots__)
\ No newline at end of file
diff --git a/sympy/core/symbol.py b/sympy/core/symbol.py
index 70e6953559..15c7704bcf 100644
--- a/sympy/core/symbol.py
+++ b/sympy/core/symbol.py
@@ -179,7 +179,7 @@ def numbered_string_incr(s, start=0):
     return _symbol(x, default, **assumptions)
 _uniquely_named_symbol = uniquely_named_symbol
 
-class Symbol(AtomicExpr, Boolean):
+class Symbol(AtomicExpr):
     """
     Assumptions:
        commutative = True
diff --git a/test_assumptions.py b/test_assumptions.py
new file mode 100644
index 0000000000..04340faf1c
--- /dev/null
+++ b/test_assumptions.py
@@ -0,0 +1,6 @@
+import sympy
+
+s = sympy.Symbol('s', real=True)
+print("Symbol's __dict__:", s.__dict__)
+print("Symbol's __slots__:", s.__slots__)
+print("Symbol's assumptions:", s.assumptions0)
\ No newline at end of file
diff --git a/test_dummy.py b/test_dummy.py
new file mode 100644
index 0000000000..c13d91d89a
--- /dev/null
+++ b/test_dummy.py
@@ -0,0 +1,6 @@
+import sympy
+
+d = sympy.Dummy('d')
+print("Dummy's __dict__:", d.__dict__)
+print("Dummy's __slots__:", d.__slots__)
+print("Dummy's assumptions:", d.assumptions0)
\ No newline at end of file
diff --git a/test_wild.py b/test_wild.py
new file mode 100644
index 0000000000..b53c3e9725
--- /dev/null
+++ b/test_wild.py
@@ -0,0 +1,6 @@
+import sympy
+
+w = sympy.Wild('w')
+print("Wild's __dict__:", w.__dict__)
+print("Wild's __slots__:", w.__slots__)
+print("Wild's assumptions:", w.assumptions0)
\ No newline at end of file
