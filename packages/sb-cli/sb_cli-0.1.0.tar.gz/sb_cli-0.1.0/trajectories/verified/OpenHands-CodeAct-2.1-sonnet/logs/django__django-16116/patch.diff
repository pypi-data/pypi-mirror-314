diff --git a/db.sqlite3 b/db.sqlite3
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/django/core/management/commands/makemigrations.py b/django/core/management/commands/makemigrations.py
index 2e97d9064b..f257e947ba 100644
--- a/django/core/management/commands/makemigrations.py
+++ b/django/core/management/commands/makemigrations.py
@@ -248,12 +248,12 @@ class Command(BaseCommand):
                 else:
                     self.log("No changes detected")
         else:
+            if check_changes:
+                sys.exit(1)
             if self.update:
                 self.write_to_last_migration_files(changes)
             else:
                 self.write_migration_files(changes)
-            if check_changes:
-                sys.exit(1)
 
     def write_to_last_migration_files(self, changes):
         loader = MigrationLoader(connections[DEFAULT_DB_ALIAS])
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..3fd776d978
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,48 @@
+import os
+import sys
+import django
+from django.conf import settings
+from django.core.management import execute_from_command_line
+
+# Configure Django settings
+if not settings.configured:
+    settings.configure(
+        DATABASES={
+            'default': {
+                'ENGINE': 'django.db.backends.sqlite3',
+                'NAME': 'db.sqlite3',
+            }
+        },
+        INSTALLED_APPS=[
+            'django.contrib.auth',
+            'django.contrib.contenttypes',
+            'django.contrib.sessions',
+            'django.contrib.messages',
+            'django.contrib.staticfiles',
+            'testapp',
+        ],
+        SECRET_KEY='dummy-key-for-test',
+    )
+    django.setup()
+
+# Create a temporary app with a model change
+app_dir = 'testapp'
+os.makedirs(app_dir, exist_ok=True)
+os.makedirs(os.path.join(app_dir, 'migrations'), exist_ok=True)
+with open(os.path.join(app_dir, '__init__.py'), 'w') as f:
+    pass
+with open(os.path.join(app_dir, 'migrations', '__init__.py'), 'w') as f:
+    pass
+
+with open(os.path.join(app_dir, 'models.py'), 'w') as f:
+    f.write('''
+from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    email = models.EmailField()  # Added field to trigger migration
+    ''')
+
+# Run makemigrations with --check
+sys.argv = ['manage.py', 'makemigrations', '--check']
+execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/testapp/__init__.py b/testapp/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp/migrations/__init__.py b/testapp/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/testapp/models.py b/testapp/models.py
new file mode 100644
index 0000000000..8ab70c9598
--- /dev/null
+++ b/testapp/models.py
@@ -0,0 +1,7 @@
+
+from django.db import models
+
+class TestModel(models.Model):
+    name = models.CharField(max_length=100)
+    email = models.EmailField()  # Added field to trigger migration
+    
\ No newline at end of file
