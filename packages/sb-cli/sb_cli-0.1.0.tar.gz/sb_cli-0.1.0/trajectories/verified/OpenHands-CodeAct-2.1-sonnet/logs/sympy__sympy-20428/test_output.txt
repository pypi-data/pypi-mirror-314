+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
+ git show
On branch master
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   sympy/polys/densebasic.py
	modified:   sympy/polys/densetools.py
	modified:   sympy/polys/polyclasses.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	reproduce.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git diff c0e85160406f9bf2bcaa2992138587668a1cd0bc
commit c0e85160406f9bf2bcaa2992138587668a1cd0bc
Merge: bd327ec88c edfb5361eb
Author: Oscar Benjamin <oscar.j.benjamin@gmail.com>
Date:   Mon Nov 16 14:27:23 2020 +0000

    Merge pull request #20384 from sayandip18/pprint
    
    Make pretty printing large inputs faster

+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
diff --git a/sympy/polys/densebasic.py b/sympy/polys/densebasic.py
index 1caeb8f629..cbe96f28d6 100644
--- a/sympy/polys/densebasic.py
+++ b/sympy/polys/densebasic.py
@@ -262,7 +262,13 @@ def dup_strip(f):
     [1, 2, 3, 0]
 
     """
-    if not f or f[0]:
+    if not f:
+        return []
+
+    if not any(f):  # All coefficients are zero
+        return []
+
+    if f[0]:
         return f
 
     i = 0
@@ -293,7 +299,9 @@ def dmp_strip(f, u):
         return dup_strip(f)
 
     if dmp_zero_p(f, u):
-        return f
+        if not u:
+            return []
+        return dmp_zero(u)
 
     i, v = 0, u - 1
 
@@ -355,6 +363,9 @@ def dmp_validate(f, K=None):
     ValueError: invalid data structure for a multivariate polynomial
 
     """
+    if not f:
+        return [], 0
+
     levels = _rec_validate(f, f, 0, K)
 
     u = levels.pop()
@@ -557,6 +568,11 @@ def dmp_convert(f, u, K0, K1):
     [[1], [2]]
 
     """
+    if dmp_zero_p(f, u):
+        if not u:
+            return []
+        return dmp_zero(u)
+
     if not u:
         return dup_convert(f, K0, K1)
     if K0 is not None and K0 == K1:
@@ -707,6 +723,12 @@ def dmp_zero_p(f, u):
     False
 
     """
+    if not f:
+        return True
+
+    if not u:
+        return not any(f)
+
     while u:
         if len(f) != 1:
             return False
@@ -817,7 +839,9 @@ def dmp_ground(c, u):
     1
 
     """
-    if not c:
+    if not c or c == 0:
+        if not u:
+            return []
         return dmp_zero(u)
 
     for i in range(u + 1):
@@ -988,22 +1012,43 @@ def dmp_from_dict(f, u, K):
     []
 
     """
-    if not u:
-        return dup_from_dict(f, K)
     if not f:
+        if not u:
+            return []
+        return dmp_zero(u)
+
+    # Check if all coefficients are zero
+    all_zero = True
+    for coeff in f.values():
+        if not K.is_zero(coeff):
+            all_zero = False
+            break
+
+    if all_zero:
+        if not u:
+            return []
         return dmp_zero(u)
 
+    if not u:
+        return dup_from_dict(f, K)
+
     coeffs = {}
 
     for monom, coeff in f.items():
-        head, tail = monom[0], monom[1:]
+        if not K.is_zero(coeff):  # Skip zero coefficients
+            head, tail = monom[0], monom[1:]
 
-        if head in coeffs:
-            coeffs[head][tail] = coeff
-        else:
-            coeffs[head] = { tail: coeff }
+            if head in coeffs:
+                coeffs[head][tail] = coeff
+            else:
+                coeffs[head] = { tail: coeff }
+
+    if not coeffs:  # All coefficients were zero
+        if not u:
+            return []
+        return dmp_zero(u)
 
-    n, v, h = max(coeffs.keys()), u - 1, []
+    n, v, h = max(coeffs.keys()) if coeffs else -1, u - 1, []
 
     for k in range(n, -1, -1):
         coeff = coeffs.get(k)
diff --git a/sympy/polys/densetools.py b/sympy/polys/densetools.py
index f057824642..33ddc1a1e5 100644
--- a/sympy/polys/densetools.py
+++ b/sympy/polys/densetools.py
@@ -1184,6 +1184,9 @@ def dup_clear_denoms(f, K0, K1=None, convert=False):
     (6, 3*x + 2)
 
     """
+    if not f:
+        return K0.one, []
+
     if K1 is None:
         if K0.has_assoc_Ring:
             K1 = K0.get_ring()
@@ -1238,6 +1241,12 @@ def dmp_clear_denoms(f, u, K0, K1=None, convert=False):
     (6, 3*x + 2*y + 6)
 
     """
+    if dmp_zero_p(f, u):
+        if not u:
+            return K0.one, []
+        else:
+            return K0.one, dmp_zero(u)
+
     if not u:
         return dup_clear_denoms(f, K0, K1, convert=convert)
 
diff --git a/sympy/polys/polyclasses.py b/sympy/polys/polyclasses.py
index 238a0f0b25..da7377d170 100644
--- a/sympy/polys/polyclasses.py
+++ b/sympy/polys/polyclasses.py
@@ -151,10 +151,23 @@ def __init__(self, rep, dom, lev=None, ring=None):
             if type(rep) is dict:
                 rep = dmp_from_dict(rep, lev, dom)
             elif type(rep) is not list:
-                rep = dmp_ground(dom.convert(rep), lev)
+                if dom.is_zero(rep):
+                    if not lev:
+                        rep = []
+                    else:
+                        rep = dmp_zero(lev)
+                else:
+                    rep = dmp_ground(dom.convert(rep), lev)
         else:
             rep, lev = dmp_validate(rep)
 
+        # Ensure zero polynomials have empty list representation
+        if dmp_zero_p(rep, lev):
+            if not lev:
+                rep = []
+            else:
+                rep = dmp_zero(lev)
+
         self.rep = rep
         self.lev = lev
         self.dom = dom
@@ -216,7 +229,9 @@ def per(f, rep, dom=None, kill=False, ring=None):
 
     @classmethod
     def zero(cls, lev, dom, ring=None):
-        return DMP(0, dom, lev, ring)
+        if not lev:
+            return DMP([], dom, lev, ring)
+        return DMP(dmp_zero(lev), dom, lev, ring)
 
     @classmethod
     def one(cls, lev, dom, ring=None):
@@ -841,6 +856,8 @@ def count_complex_roots(f, inf=None, sup=None):
     @property
     def is_zero(f):
         """Returns ``True`` if ``f`` is a zero polynomial. """
+        if not f.lev:
+            return not f.rep
         return dmp_zero_p(f.rep, f.lev)
 
     @property
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Preparing metadata (setup.py): started
  Preparing metadata (setup.py): finished with status 'done'
Requirement already satisfied: mpmath>=0.19 in /opt/miniconda3/envs/testbed/lib/python3.9/site-packages (from sympy==1.8.dev0) (1.3.0)
Installing collected packages: sympy
  Attempting uninstall: sympy
    Found existing installation: sympy 1.8.dev0
    Uninstalling sympy-1.8.dev0:
  DEPRECATION: Legacy editable install of sympy==1.8.dev0 from file:///testbed (setup.py develop) is deprecated. pip 25.0 will enforce this behaviour change. A possible replacement is to add a pyproject.toml or enable --use-pep517, and use setuptools >= 64. If the resulting installation is not behaving as expected, try using --config-settings editable_mode=compat. Please consult the setuptools documentation for more information. Discussion can be found at https://github.com/pypa/pip/issues/11457
      Successfully uninstalled sympy-1.8.dev0
  Running setup.py develop for sympy
Successfully installed sympy
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout c0e85160406f9bf2bcaa2992138587668a1cd0bc sympy/polys/tests/test_polytools.py
Updated 0 paths from 1fe8a6f595
+ git apply -v -
Checking patch sympy/polys/tests/test_polytools.py...
Applied patch sympy/polys/tests/test_polytools.py cleanly.
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose sympy/polys/tests/test_polytools.py
============================= test process starts ==============================
executable:         /opt/miniconda3/envs/testbed/bin/python  (3.9.20-final-0) [CPython]
architecture:       64-bit
cache:              no
ground types:       python 
numpy:              None
random seed:        56816937
hash randomization: on (PYTHONHASHSEED=1259810606)

sympy/polys/tests/test_polytools.py[156] 
test_Poly_mixed_operations ok
test_Poly_from_dict ok
test_Poly_from_list ok
test_Poly_from_poly ok
test_Poly_from_expr ok
test_poly_from_domain_element ok
test_Poly__new__ E
test_Poly__args ok
test_Poly__gens ok
test_Poly_zero ok
test_Poly_one ok
test_Poly__unify ok
test_Poly_free_symbols ok
test_PurePoly_free_symbols ok
test_Poly__eq__ ok
test_PurePoly__eq__ ok
test_PurePoly_Poly ok
test_Poly_get_domain ok
test_Poly_set_domain ok
test_Poly_get_modulus ok
test_Poly_set_modulus ok
test_Poly_add_ground ok
test_Poly_sub_ground ok
test_Poly_mul_ground ok
test_Poly_quo_ground ok
test_Poly_exquo_ground ok
test_Poly_abs ok
test_Poly_neg ok
test_Poly_add E
test_Poly_sub E
test_Poly_mul ok
test_issue_13079 ok
test_Poly_sqr ok
test_Poly_pow ok
test_Poly_divmod ok
test_Poly_eq_ne ok
test_Poly_nonzero ok
test_Poly_properties ok
test_Poly_is_irreducible ok
test_Poly_subs ok
test_Poly_replace ok
test_Poly_reorder ok
test_Poly_ltrim ok
test_Poly_has_only_gens ok
test_Poly_to_ring ok
test_Poly_to_field ok
test_Poly_to_exact ok
test_Poly_retract E
test_Poly_slice ok
test_Poly_coeffs ok
test_Poly_monoms ok
test_Poly_terms ok
test_Poly_all_coeffs ok
test_Poly_all_monoms ok
test_Poly_all_terms ok
test_Poly_termwise ok
test_Poly_length ok
test_Poly_as_dict E
test_Poly_as_expr E
test_Poly_lift ok
test_Poly_deflate ok
test_Poly_inject ok
test_Poly_eject ok
test_Poly_exclude ok
test_Poly__gen_to_level ok
test_Poly_degree ok
test_Poly_degree_list E
test_Poly_total_degree ok
test_Poly_homogenize ok
test_Poly_homogeneous_order E
test_Poly_LC ok
test_Poly_TC ok
test_Poly_EC ok
test_Poly_coeff ok
test_Poly_nth ok
test_Poly_LM ok
test_Poly_LM_custom_order ok
test_Poly_EM ok
test_Poly_LT ok
test_Poly_ET ok
test_Poly_max_norm ok
test_Poly_l1_norm ok
test_Poly_clear_denoms ok
test_Poly_rat_clear_denoms ok
test_issue_20427 F
test_Poly_integrate ok
test_Poly_diff ok
test_issue_9585 ok
test_Poly_eval ok
test_Poly___call__ ok
test_parallel_poly_from_expr ok
test_pdiv E
test_div E
test_issue_7864 ok
test_gcdex ok
test_revert ok
test_subresultants ok
test_resultant ok
test_discriminant ok
test_dispersion ok
test_gcd_list ok
test_lcm_list ok
test_gcd ok
test_gcd_numbers_vs_polys ok
test_terms_gcd ok
test_trunc ok
test_monic ok
test_content ok
test_primitive ok
test_compose ok
test_shift ok
test_transform ok
test_sturm ok
test_gff ok
test_norm ok
test_sqf_norm ok
test_sqf ok
test_factor ok
test_factor_large ok
test_factor_noeval ok
test_intervals ok
test_refine_root ok
test_count_roots ok
test_Poly_root ok
test_real_roots ok
test_all_roots ok
test_nroots ok
test_ground_roots ok
test_nth_power_roots_poly ok
test_torational_factor_list ok
test_cancel ok
test_reduced E
test_groebner ok
test_fglm ok
test_is_zero_dimensional ok
test_GroebnerBasis E
test_poly ok
test_keep_coeff ok
test_poly_matching_consistency ok
test_issue_5786 ok
test_noncommutative ok
test_to_rational_coeffs ok
test_factor_terms ok
test_as_list ok
test_issue_11198 ok
test_Poly_precision ok
test_issue_12400 ok
test_issue_14364 ok
test_issue_15669 ok
test_issue_17988 ok
test_issue_18205 ok
test_issue_8695 ok
test_issue_19113 ok
test_issue_19360 ok
test_poly_copy_equals_original ok
test_deserialized_poly_equals_original ok                                 [FAIL]


________________________________________________________________________________
_____________ sympy/polys/tests/test_polytools.py:test_Poly__new__ _____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 350, in test_Poly__new__
    f = Poly({}, x, y, z)
  File "/testbed/sympy/polys/polytools.py", line 153, in __new__
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
______________ sympy/polys/tests/test_polytools.py:test_Poly_add _______________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 678, in test_Poly_add
    assert Poly(1, x, y) + Poly(0, x) == Poly(1, x, y)
  File "/testbed/sympy/polys/polytools.py", line 65, in wrapper
    return func(f, g)
  File "/testbed/sympy/polys/polytools.py", line 4076, in __add__
    return f.add(g)
  File "/testbed/sympy/polys/polytools.py", line 1413, in add
    _, per, F, G = f._unify(g)
  File "/testbed/sympy/polys/polytools.py", line 465, in _unify
    G = DMP(dict(list(zip(g_monoms, g_coeffs))), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
______________ sympy/polys/tests/test_polytools.py:test_Poly_sub _______________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 695, in test_Poly_sub
    assert Poly(1, x, y) - Poly(0, x) == Poly(1, x, y)
  File "/testbed/sympy/polys/polytools.py", line 65, in wrapper
    return func(f, g)
  File "/testbed/sympy/polys/polytools.py", line 4084, in __sub__
    return f.sub(g)
  File "/testbed/sympy/polys/polytools.py", line 1444, in sub
    _, per, F, G = f._unify(g)
  File "/testbed/sympy/polys/polytools.py", line 465, in _unify
    G = DMP(dict(list(zip(g_monoms, g_coeffs))), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
____________ sympy/polys/tests/test_polytools.py:test_Poly_retract _____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 949, in test_Poly_retract
    assert Poly(0, x, y).retract() == Poly(0, x, y)
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
____________ sympy/polys/tests/test_polytools.py:test_Poly_as_dict _____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1070, in test_Poly_as_dict
    assert Poly(0, x, y, z).as_dict() == {}
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
____________ sympy/polys/tests/test_polytools.py:test_Poly_as_expr _____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1084, in test_Poly_as_expr
    assert Poly(0, x, y, z).as_expr() == 0
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
__________ sympy/polys/tests/test_polytools.py:test_Poly_degree_list ___________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1235, in test_Poly_degree_list
    assert Poly(0, x, y).degree_list() == (-oo, -oo)
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
_______ sympy/polys/tests/test_polytools.py:test_Poly_homogeneous_order ________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1273, in test_Poly_homogeneous_order
    assert Poly(0, x, y).homogeneous_order() is -oo
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
________________ sympy/polys/tests/test_polytools.py:test_pdiv _________________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1640, in test_pdiv
    F, G, Q, R = [ Poly(h, x, y) for h in (f, g, q, r) ]
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1640, in <listcomp>
    F, G, Q, R = [ Poly(h, x, y) for h in (f, g, q, r) ]
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
_________________ sympy/polys/tests/test_polytools.py:test_div _________________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1687, in test_div
    F, G, Q, R = [ Poly(h, x, y) for h in (f, g, q, r) ]
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1687, in <listcomp>
    F, G, Q, R = [ Poly(h, x, y) for h in (f, g, q, r) ]
  File "/testbed/sympy/polys/polytools.py", line 162, in __new__
    return cls._from_expr(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 292, in _from_expr
    return cls._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
_______________ sympy/polys/tests/test_polytools.py:test_reduced _______________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 3107, in test_reduced
    assert reduced(f, G) == (Q, r)
  File "/testbed/sympy/polys/polytools.py", line 6775, in reduced
    r = Poly._from_dict(dict(r), opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined
________________________________________________________________________________
____________ sympy/polys/tests/test_polytools.py:test_GroebnerBasis ____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 3231, in test_GroebnerBasis
    assert groebner(F + [0], x, y, order='grevlex') == G
  File "/testbed/sympy/polys/polytools.py", line 6842, in groebner
    return GroebnerBasis(F, *gens, **args)
  File "/testbed/sympy/polys/polytools.py", line 6872, in __new__
    polys, opt = parallel_poly_from_expr(F, *gens, **args)
  File "/testbed/sympy/polys/polytools.py", line 4320, in parallel_poly_from_expr
    return _parallel_poly_from_expr(exprs, opt)
  File "/testbed/sympy/polys/polytools.py", line 4409, in _parallel_poly_from_expr
    poly = Poly._from_dict(rep, opt)
  File "/testbed/sympy/polys/polytools.py", line 241, in _from_dict
    return cls.new(DMP.from_dict(rep, level, domain), *gens)
  File "/testbed/sympy/polys/polyclasses.py", line 291, in from_dict
    return cls(dmp_from_dict(rep, lev, dom), dom, lev)
  File "/testbed/sympy/polys/polyclasses.py", line 169, in __init__
    rep = dmp_zero(lev)
NameError: name 'dmp_zero' is not defined

________________________________________________________________________________
_____________ sympy/polys/tests/test_polytools.py:test_issue_20427 _____________
Traceback (most recent call last):
  File "/testbed/sympy/polys/tests/test_polytools.py", line 1472, in test_issue_20427
    assert f == Poly(0, x, domain='EX')
AssertionError

==== tests finished: 143 passed, 1 failed, 12 exceptions, in 13.45 seconds =====
DO *NOT* COMMIT!
+ git checkout c0e85160406f9bf2bcaa2992138587668a1cd0bc sympy/polys/tests/test_polytools.py
Updated 1 path from 1fe8a6f595
