diff --git a/django/db/models/fields/__init__.py b/django/db/models/fields/__init__.py
index caa03665ea..3b7fb1fadf 100644
--- a/django/db/models/fields/__init__.py
+++ b/django/db/models/fields/__init__.py
@@ -21,7 +21,7 @@ from django.utils.dateparse import (
     parse_date, parse_datetime, parse_duration, parse_time,
 )
 from django.utils.duration import duration_microseconds, duration_string
-from django.utils.functional import Promise, cached_property
+from django.utils.functional import Promise, cached_property, empty
 from django.utils.ipv6 import clean_ipv6_address
 from django.utils.itercompat import is_iterable
 from django.utils.text import capfirst
@@ -802,8 +802,19 @@ class Field(RegisterLookupMixin):
 
     def get_prep_value(self, value):
         """Perform preliminary non-db specific value checks and conversions."""
+        # Handle SimpleLazyObject by resolving it
+        if hasattr(value, '_wrapped'):
+            # Force evaluation of the wrapped value
+            if hasattr(value, '__str__'):
+                str(value)  # This will force evaluation
+            if hasattr(value, '_wrapped') and value._wrapped is not empty:
+                value = value._wrapped
+        # Handle Promise objects
         if isinstance(value, Promise):
             value = value._proxy____cast()
+        # For model instances, get their primary key
+        if hasattr(value, '_meta'):  # This is a model instance
+            value = value.pk
         return value
 
     def get_db_prep_value(self, value, connection, prepared=False):
