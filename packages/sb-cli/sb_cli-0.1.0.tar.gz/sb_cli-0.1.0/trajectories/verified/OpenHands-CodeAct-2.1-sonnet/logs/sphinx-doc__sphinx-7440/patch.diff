diff --git a/sphinx/domains/std.py b/sphinx/domains/std.py
index d820cfe5c..6434a6fed 100644
--- a/sphinx/domains/std.py
+++ b/sphinx/domains/std.py
@@ -652,10 +652,20 @@ class StandardDomain(Domain):
 
         .. versionadded:: 3.0
         """
-        if (objtype, name) in self.objects:
-            docname = self.objects[objtype, name][0]
-            logger.warning(__('duplicate %s description of %s, other instance in %s'),
-                           objtype, name, docname, location=location)
+        # For terms, do case-insensitive duplicate check
+        if objtype == 'term':
+            name_lower = name.lower()
+            for key in self.objects:
+                if key[0] == 'term' and key[1].lower() == name_lower:
+                    docname = self.objects[key][0]
+                    logger.warning(__('duplicate %s description of %s, other instance in %s'),
+                                 objtype, name, docname, location=location)
+                    break
+        else:
+            if (objtype, name) in self.objects:
+                docname = self.objects[objtype, name][0]
+                logger.warning(__('duplicate %s description of %s, other instance in %s'),
+                             objtype, name, docname, location=location)
         self.objects[objtype, name] = (self.env.docname, labelid)
 
     def add_object(self, objtype: str, name: str, docname: str, labelid: str) -> None:
diff --git a/test_glossary.py b/test_glossary.py
new file mode 100644
index 000000000..9f07c980f
--- /dev/null
+++ b/test_glossary.py
@@ -0,0 +1,33 @@
+from sphinx.domains.std import StandardDomain
+from sphinx.environment import BuildEnvironment
+from sphinx.util import logging
+from unittest.mock import MagicMock
+import sys
+
+# Capture warnings
+import warnings
+import io
+
+# Create a mock environment
+env = MagicMock()
+env.docname = "test"
+
+# Create a standard domain
+domain = StandardDomain(env)
+
+# Capture stderr to check for warnings
+stderr = sys.stderr
+stderr_capture = io.StringIO()
+sys.stderr = stderr_capture
+
+# Try to add two terms that differ only in case
+domain.note_object('term', 'mysql', 'id1')
+domain.note_object('term', 'MySQL', 'id2')
+
+# Restore stderr
+sys.stderr = stderr
+
+# Print results
+print("Objects in domain:", domain.objects)
+print("\nWarnings captured:")
+print(stderr_capture.getvalue())
\ No newline at end of file
