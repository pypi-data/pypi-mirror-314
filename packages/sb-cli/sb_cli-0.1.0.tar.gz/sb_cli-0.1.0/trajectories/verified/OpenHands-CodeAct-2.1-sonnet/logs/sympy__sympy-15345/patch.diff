diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..1a8118ade4
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,23 @@
+from sympy import symbols, mathematica_code, Max, Min
+
+x, y, z = symbols('x y z')
+
+# Test basic Max with 2 args
+result1 = mathematica_code(Max(x, 2))
+print(f"Test 1 - Basic Max: {result1}")
+
+# Test Max with multiple args
+result2 = mathematica_code(Max(x, y, z, 3))
+print(f"Test 2 - Multiple args: {result2}")
+
+# Test nested Max
+result3 = mathematica_code(Max(x, Max(y, 2)))
+print(f"Test 3 - Nested Max: {result3}")
+
+# Test Min
+result4 = mathematica_code(Min(x, 2))
+print(f"Test 4 - Basic Min: {result4}")
+
+# Test mixed Max/Min
+result5 = mathematica_code(Max(Min(x, y), z))
+print(f"Test 5 - Mixed Max/Min: {result5}")
\ No newline at end of file
diff --git a/sympy/printing/mathematica.py b/sympy/printing/mathematica.py
index ea7e3a2d94..3b9bfa6d42 100644
--- a/sympy/printing/mathematica.py
+++ b/sympy/printing/mathematica.py
@@ -31,6 +31,8 @@
     "asech": [(lambda x: True, "ArcSech")],
     "acsch": [(lambda x: True, "ArcCsch")],
     "conjugate": [(lambda x: True, "Conjugate")],
+    "Max": [(lambda *x: True, "Max")],
+    "Min": [(lambda *x: True, "Min")],
 
 }
 
@@ -101,6 +103,12 @@ def _print_Function(self, expr):
                     return "%s[%s]" % (mfunc, self.stringify(expr.args, ", "))
         return expr.func.__name__ + "[%s]" % self.stringify(expr.args, ", ")
 
+    def _print_Max(self, expr):
+        return "Max[%s]" % self.stringify(expr.args, ", ")
+
+    def _print_Min(self, expr):
+        return "Min[%s]" % self.stringify(expr.args, ", ")
+
     def _print_Integral(self, expr):
         if len(expr.variables) == 1 and not expr.limits[0][1:]:
             args = [expr.args[0], expr.variables[0]]
