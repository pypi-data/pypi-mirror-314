diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..5a9d700ee6
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,7 @@
+from sympy import ring, ZZ, symbols
+
+R, x, y, z = ring("x,y,z", ZZ)
+f = 3*x**2*y - x*y*z + 7*z**3 + 1
+U, V, W = symbols("u,v,w")
+print("Original expression:", f)
+print("Expression with new symbols:", f.as_expr(U, V, W))
\ No newline at end of file
diff --git a/sympy/polys/rings.py b/sympy/polys/rings.py
index 12bd2fc920..3e33a2780b 100644
--- a/sympy/polys/rings.py
+++ b/sympy/polys/rings.py
@@ -618,8 +618,11 @@ def set_ring(self, new_ring):
     def as_expr(self, *symbols):
         if symbols and len(symbols) != self.ring.ngens:
             raise ValueError("not enough symbols, expected %s got %s" % (self.ring.ngens, len(symbols)))
-        else:
+        elif not symbols:
             symbols = self.ring.symbols
+        else:
+            # Convert any polynomial elements to their corresponding symbols
+            symbols = tuple(s.as_expr() if isinstance(s, PolyElement) else s for s in symbols)
 
         return expr_from_dict(self.as_expr_dict(), *symbols)
 
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 0000000000..2a84f64550
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,31 @@
+from sympy import ring, ZZ, symbols
+
+# Test case 1: No symbols provided (should use original symbols)
+R, x, y, z = ring("x,y,z", ZZ)
+f = 3*x**2*y - x*y*z + 7*z**3 + 1
+print("Test 1 - No symbols provided:")
+print("Original:", f)
+print("as_expr():", f.as_expr())
+print()
+
+# Test case 2: Wrong number of symbols (should raise error)
+U, V = symbols("u,v")
+print("Test 2 - Wrong number of symbols:")
+print("Original:", f)
+try:
+    print("as_expr(U,V):", f.as_expr(U, V))
+except ValueError as e:
+    print("ValueError:", str(e))
+print()
+
+# Test case 3: Symbols with different names but same number
+U, V, W = symbols("u,v,w")
+print("Test 3 - Different symbols:")
+print("Original:", f)
+print("as_expr(U,V,W):", f.as_expr(U, V, W))
+print()
+
+# Test case 4: Using the same symbols in different order
+print("Test 4 - Same symbols different order:")
+print("Original:", f)
+print("as_expr(z,y,x):", f.as_expr(z, y, x))
\ No newline at end of file
