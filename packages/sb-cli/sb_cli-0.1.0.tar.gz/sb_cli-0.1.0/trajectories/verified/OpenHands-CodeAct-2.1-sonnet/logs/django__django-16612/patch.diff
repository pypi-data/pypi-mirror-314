diff --git a/django/contrib/admin/sites.py b/django/contrib/admin/sites.py
index 61be31d890..7efb7d5bf2 100644
--- a/django/contrib/admin/sites.py
+++ b/django/contrib/admin/sites.py
@@ -453,7 +453,10 @@ class AdminSite:
                 pass
             else:
                 if getattr(match.func, "should_append_slash", True):
-                    return HttpResponsePermanentRedirect("%s/" % request.path)
+                    redirect_url = "%s/" % request.path
+                    if request.META.get('QUERY_STRING'):
+                        redirect_url = "%s?%s" % (redirect_url, request.META['QUERY_STRING'])
+                    return HttpResponsePermanentRedirect(redirect_url)
         raise Http404
 
     def _build_app_dict(self, request, label=None):
diff --git a/reproduce_issue.py b/reproduce_issue.py
new file mode 100644
index 0000000000..5dba7fdcaf
--- /dev/null
+++ b/reproduce_issue.py
@@ -0,0 +1,52 @@
+from django.conf import settings
+from django.contrib.admin import AdminSite
+from django.test import RequestFactory
+from django.http import HttpResponsePermanentRedirect
+from django.urls import Resolver404
+
+# Configure Django settings
+settings.configure(
+    DEBUG=True,
+    APPEND_SLASH=True,
+    SECRET_KEY='dummy-key',
+    DEFAULT_CHARSET='utf-8',
+    ROOT_URLCONF='test_project.urls'
+)
+
+# Create an admin site instance
+admin_site = AdminSite()
+
+# Create a request with a query string
+factory = RequestFactory()
+request = factory.get('/admin/auth/foo?id=123')
+request.path = '/admin/auth/foo'
+request.path_info = '/admin/auth/foo'
+request.META['QUERY_STRING'] = 'id=123'
+
+# Mock the resolve function to simulate URL resolution
+def mock_resolve(path, urlconf=None):
+    if path == '/admin/auth/foo/':
+        class MockMatch:
+            def __init__(self):
+                self.func = type('MockView', (), {'should_append_slash': True})()
+        return MockMatch()
+    raise Resolver404()
+
+# Patch the resolve function
+import django.urls
+original_resolve = django.urls.resolve
+django.urls.resolve = mock_resolve
+
+try:
+    # Call the catch_all_view directly without the decorator
+    response = admin_site.catch_all_view.__wrapped__(admin_site, request, 'admin/auth/foo')
+
+    # Print the redirect URL
+    if isinstance(response, HttpResponsePermanentRedirect):
+        print(f"Actual redirect URL: {response['Location']}")
+        print(f"Expected redirect URL: /admin/auth/foo/?id=123")
+        if response['Location'] == '/admin/auth/foo/':
+            print("Issue confirmed: Query string is dropped in redirect")
+finally:
+    # Restore original resolve function
+    django.urls.resolve = original_resolve
\ No newline at end of file
diff --git a/test_project/urls.py b/test_project/urls.py
new file mode 100644
index 0000000000..5413f12189
--- /dev/null
+++ b/test_project/urls.py
@@ -0,0 +1,5 @@
+from django.urls import path
+
+urlpatterns = [
+    path('admin/auth/foo/', lambda request: None, name='test_view'),
+]
\ No newline at end of file
