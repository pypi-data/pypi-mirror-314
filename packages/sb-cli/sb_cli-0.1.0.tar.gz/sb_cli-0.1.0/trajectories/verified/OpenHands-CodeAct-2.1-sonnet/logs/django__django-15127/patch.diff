diff --git a/django/contrib/messages/storage/base.py b/django/contrib/messages/storage/base.py
index 01422066a6..8cdbbd92c7 100644
--- a/django/contrib/messages/storage/base.py
+++ b/django/contrib/messages/storage/base.py
@@ -1,8 +1,6 @@
 from django.conf import settings
 from django.contrib.messages import constants, utils
 
-LEVEL_TAGS = utils.get_level_tags()
-
 
 class Message:
     """
@@ -38,7 +36,7 @@ class Message:
 
     @property
     def level_tag(self):
-        return LEVEL_TAGS.get(self.level, '')
+        return utils.get_level_tags().get(self.level, '')
 
 
 class BaseStorage:
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..2d3e2dfe21
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,47 @@
+import django
+from django.conf import settings
+from django.test import override_settings
+from django.contrib.messages import constants
+
+# Configure Django settings
+settings.configure(DEBUG=True)
+django.setup()
+
+# Import Message after Django is configured
+from django.contrib.messages.storage.base import Message
+
+def test_basic_override():
+    print("\nTesting basic override:")
+    msg = Message(level=constants.INFO, message="Test message")
+    print("Original level_tag:", msg.level_tag)
+    with override_settings(MESSAGE_TAGS={constants.INFO: 'custom_info'}):
+        print("Overridden level_tag:", msg.level_tag)
+
+def test_empty_tags():
+    print("\nTesting empty MESSAGE_TAGS:")
+    msg = Message(level=constants.INFO, message="Test message")
+    print("Original level_tag:", msg.level_tag)
+    with override_settings(MESSAGE_TAGS={}):
+        print("Empty MESSAGE_TAGS level_tag:", msg.level_tag)
+
+def test_invalid_level():
+    print("\nTesting invalid level:")
+    msg = Message(level=9999, message="Test message")
+    print("Invalid level_tag:", msg.level_tag)
+
+def test_nested_overrides():
+    print("\nTesting nested overrides:")
+    msg = Message(level=constants.INFO, message="Test message")
+    print("Original level_tag:", msg.level_tag)
+    with override_settings(MESSAGE_TAGS={constants.INFO: 'first_override'}):
+        print("First override level_tag:", msg.level_tag)
+        with override_settings(MESSAGE_TAGS={constants.INFO: 'second_override'}):
+            print("Second override level_tag:", msg.level_tag)
+        print("Back to first override level_tag:", msg.level_tag)
+    print("Back to original level_tag:", msg.level_tag)
+
+# Run all tests
+test_basic_override()
+test_empty_tags()
+test_invalid_level()
+test_nested_overrides()
\ No newline at end of file
