diff --git a/django/core/paginator.py b/django/core/paginator.py
index 1f92da5d4f..28372a6dec 100644
--- a/django/core/paginator.py
+++ b/django/core/paginator.py
@@ -106,6 +106,11 @@ class Paginator:
         """
         return range(1, self.num_pages + 1)
 
+    def __iter__(self):
+        """Return an iterator over all pages in the paginator."""
+        for page_num in self.page_range:
+            yield self.page(page_num)
+
     def _check_object_list_is_ordered(self):
         """
         Warn if self.object_list is unordered (typically a QuerySet).
diff --git a/test_paginator.py b/test_paginator.py
new file mode 100644
index 0000000000..1f0d36d490
--- /dev/null
+++ b/test_paginator.py
@@ -0,0 +1,20 @@
+from django.core.paginator import Paginator
+
+# Create a list of numbers from 1 to 25
+items = list(range(1, 26))
+
+# Create a paginator with 10 items per page
+paginator = Paginator(items, per_page=10)
+
+print("Current behavior:")
+print("Using page_range:")
+for page_num in paginator.page_range:
+    page = paginator.page(page_num)
+    print(f"Page {page_num}: {list(page.object_list)}")
+
+print("\nTrying to iterate directly over paginator:")
+try:
+    for page in paginator:
+        print(f"Page {page.number}: {list(page.object_list)}")
+except TypeError as e:
+    print(f"Error: {e}")
\ No newline at end of file
diff --git a/test_paginator_edge_cases.py b/test_paginator_edge_cases.py
new file mode 100644
index 0000000000..6b3cfee2fa
--- /dev/null
+++ b/test_paginator_edge_cases.py
@@ -0,0 +1,35 @@
+from django.core.paginator import Paginator
+
+def test_edge_case(title, items, per_page, orphans=0, allow_empty_first_page=True):
+    print(f"\n{title}:")
+    paginator = Paginator(items, per_page=per_page, orphans=orphans, 
+                         allow_empty_first_page=allow_empty_first_page)
+    try:
+        for page in paginator:
+            print(f"Page {page.number}: {list(page.object_list)}")
+    except Exception as e:
+        print(f"Error: {e}")
+
+# Test case 1: Empty list
+test_edge_case("Empty list with allow_empty_first_page=True", 
+               [], per_page=10)
+
+# Test case 2: Empty list with allow_empty_first_page=False
+test_edge_case("Empty list with allow_empty_first_page=False",
+               [], per_page=10, allow_empty_first_page=False)
+
+# Test case 3: Single item
+test_edge_case("Single item",
+               [1], per_page=10)
+
+# Test case 4: Items exactly filling pages
+test_edge_case("Items exactly filling pages",
+               [1, 2, 3, 4], per_page=2)
+
+# Test case 5: With orphans that should combine into last page
+test_edge_case("With orphans combining into last page",
+               [1, 2, 3, 4, 5], per_page=2, orphans=1)
+
+# Test case 6: With orphans that should not combine into last page
+test_edge_case("With orphans not combining into last page",
+               [1, 2, 3, 4, 5], per_page=2, orphans=0)
\ No newline at end of file
