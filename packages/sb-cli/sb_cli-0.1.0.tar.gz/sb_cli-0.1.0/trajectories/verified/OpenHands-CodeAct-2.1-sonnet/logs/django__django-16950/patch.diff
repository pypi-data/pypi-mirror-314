diff --git a/django/contrib/admin/options.py b/django/contrib/admin/options.py
index f9760664dd..2137458ff0 100644
--- a/django/contrib/admin/options.py
+++ b/django/contrib/admin/options.py
@@ -1256,6 +1256,12 @@ class ModelAdmin(BaseModelAdmin):
         """
         Given a model instance save it to the database.
         """
+        # Set default values for fields before saving
+        if not change:  # Only for new objects
+            opts = obj._meta
+            for f in opts.concrete_fields:
+                if not f.editable and f.has_default():
+                    setattr(obj, f.attname, f.get_default())
         obj.save()
 
     def delete_model(self, request, obj):
diff --git a/reproduce_bug.py b/reproduce_bug.py
new file mode 100644
index 0000000000..97c82a65de
--- /dev/null
+++ b/reproduce_bug.py
@@ -0,0 +1,123 @@
+import os
+import uuid
+from django.conf import settings
+from django.contrib import admin
+from django.db import models
+from django.test import TestCase, Client
+
+# Configure Django settings
+BASE_DIR = os.path.dirname(os.path.abspath(__file__))
+settings.configure(
+    DEBUG=True,
+    DATABASES={
+        'default': {
+            'ENGINE': 'django.db.backends.sqlite3',
+            'NAME': ':memory:',
+        }
+    },
+    INSTALLED_APPS=[
+        'django.contrib.admin',
+        'django.contrib.auth',
+        'django.contrib.contenttypes',
+        'django.contrib.sessions',
+        'django.contrib.messages',
+        'django.contrib.staticfiles',
+        'reproduce_bug',
+    ],
+    MIDDLEWARE=[
+        'django.contrib.sessions.middleware.SessionMiddleware',
+        'django.contrib.auth.middleware.AuthenticationMiddleware',
+        'django.contrib.messages.middleware.MessageMiddleware',
+    ],
+    ROOT_URLCONF='reproduce_bug',
+    SECRET_KEY='dummy-key-for-tests',
+    TEMPLATES=[{
+        'BACKEND': 'django.template.backends.django.DjangoTemplates',
+        'APP_DIRS': True,
+        'OPTIONS': {
+            'context_processors': [
+                'django.template.context_processors.debug',
+                'django.template.context_processors.request',
+                'django.contrib.auth.context_processors.auth',
+                'django.contrib.messages.context_processors.messages',
+            ],
+        },
+    }],
+)
+
+# Define the models
+class UUIDModel(models.Model):
+    pkid = models.BigAutoField(primary_key=True, editable=False)
+    id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)
+    
+    class Meta:
+        abstract = True
+
+class Thing(UUIDModel):
+    name = models.CharField(max_length=191)
+    
+    class Meta:
+        app_label = 'reproduce_bug'
+
+class SubThing(models.Model):
+    name = models.CharField(max_length=191)
+    thing = models.ForeignKey(
+        Thing,
+        to_field='id',
+        on_delete=models.CASCADE,
+        related_name='subthings',
+    )
+    
+    class Meta:
+        app_label = 'reproduce_bug'
+
+# Define the admin
+class SubThingInline(admin.StackedInline):
+    model = SubThing
+
+@admin.register(Thing)
+class ThingAdmin(admin.ModelAdmin):
+    list_display = ('name',)
+    ordering = ('pkid',)
+    inlines = (SubThingInline,)
+
+# Configure URLs
+from django.urls import path
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
+
+# Initialize Django
+import django
+django.setup()
+
+# Run the test
+from django.contrib.auth.models import User
+from django.test import Client
+
+# Create superuser
+User.objects.create_superuser('admin', 'admin@test.com', 'admin')
+
+# Create database tables
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+# Run test
+client = Client()
+client.login(username='admin', password='admin')
+
+# Try to create a Thing with a SubThing
+response = client.post('/admin/admin/thing/add/', {
+    'name': 'Test Thing',
+    'subthings-TOTAL_FORMS': '1',
+    'subthings-INITIAL_FORMS': '0',
+    'subthings-MIN_NUM_FORMS': '0',
+    'subthings-MAX_NUM_FORMS': '1000',
+    'subthings-0-name': 'Test SubThing',
+    'subthings-0-id': '',
+})
+
+print("Response status code:", response.status_code)
+if response.status_code != 302:  # 302 is redirect after successful creation
+    print("Error occurred!")
+    print(response.content.decode())
\ No newline at end of file
diff --git a/reproduce_bug/manage.py b/reproduce_bug/manage.py
new file mode 100644
index 0000000000..7d2e379f72
--- /dev/null
+++ b/reproduce_bug/manage.py
@@ -0,0 +1,8 @@
+#!/usr/bin/env python
+import os
+import sys
+
+if __name__ == "__main__":
+    os.environ.setdefault("DJANGO_SETTINGS_MODULE", "reproduce_bug.settings")
+    from django.core.management import execute_from_command_line
+    execute_from_command_line(sys.argv)
\ No newline at end of file
diff --git a/reproduce_bug/reproduce_bug/__init__.py b/reproduce_bug/reproduce_bug/__init__.py
new file mode 100644
index 0000000000..22ae0c5f40
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/__init__.py
@@ -0,0 +1 @@
+# Empty file
\ No newline at end of file
diff --git a/reproduce_bug/reproduce_bug/admin.py b/reproduce_bug/reproduce_bug/admin.py
new file mode 100644
index 0000000000..e0dff950d5
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/admin.py
@@ -0,0 +1,11 @@
+from django.contrib import admin
+from .models import Thing, SubThing
+
+class SubThingInline(admin.StackedInline):
+    model = SubThing
+
+@admin.register(Thing)
+class ThingAdmin(admin.ModelAdmin):
+    list_display = ('name',)
+    ordering = ('pkid',)
+    inlines = (SubThingInline,)
\ No newline at end of file
diff --git a/reproduce_bug/reproduce_bug/migrations/0001_initial.py b/reproduce_bug/reproduce_bug/migrations/0001_initial.py
new file mode 100644
index 0000000000..3a978a66c7
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/migrations/0001_initial.py
@@ -0,0 +1,58 @@
+# Generated by Django 5.0.dev20230707060601 on 2024-10-28 22:45
+
+import django.db.models.deletion
+import uuid
+from django.db import migrations, models
+
+
+class Migration(migrations.Migration):
+
+    initial = True
+
+    dependencies = []
+
+    operations = [
+        migrations.CreateModel(
+            name="Thing",
+            fields=[
+                (
+                    "pkid",
+                    models.BigAutoField(
+                        editable=False, primary_key=True, serialize=False
+                    ),
+                ),
+                (
+                    "id",
+                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
+                ),
+                ("name", models.CharField(max_length=191)),
+            ],
+            options={
+                "abstract": False,
+            },
+        ),
+        migrations.CreateModel(
+            name="SubThing",
+            fields=[
+                (
+                    "id",
+                    models.AutoField(
+                        auto_created=True,
+                        primary_key=True,
+                        serialize=False,
+                        verbose_name="ID",
+                    ),
+                ),
+                ("name", models.CharField(max_length=191)),
+                (
+                    "thing",
+                    models.ForeignKey(
+                        on_delete=django.db.models.deletion.CASCADE,
+                        related_name="subthings",
+                        to="reproduce_bug.thing",
+                        to_field="id",
+                    ),
+                ),
+            ],
+        ),
+    ]
diff --git a/reproduce_bug/reproduce_bug/migrations/__init__.py b/reproduce_bug/reproduce_bug/migrations/__init__.py
new file mode 100644
index 0000000000..e69de29bb2
diff --git a/reproduce_bug/reproduce_bug/models.py b/reproduce_bug/reproduce_bug/models.py
new file mode 100644
index 0000000000..b18fd705fe
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/models.py
@@ -0,0 +1,21 @@
+import uuid
+from django.db import models
+
+class UUIDModel(models.Model):
+    pkid = models.BigAutoField(primary_key=True, editable=False)
+    id = models.UUIDField(default=uuid.uuid4, editable=False, unique=True)
+    
+    class Meta:
+        abstract = True
+
+class Thing(UUIDModel):
+    name = models.CharField(max_length=191)
+
+class SubThing(models.Model):
+    name = models.CharField(max_length=191)
+    thing = models.ForeignKey(
+        Thing,
+        to_field='id',
+        on_delete=models.CASCADE,
+        related_name='subthings',
+    )
\ No newline at end of file
diff --git a/reproduce_bug/reproduce_bug/settings.py b/reproduce_bug/reproduce_bug/settings.py
new file mode 100644
index 0000000000..2e2fe822a6
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/settings.py
@@ -0,0 +1,50 @@
+import os
+
+BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
+
+DEBUG = True
+ALLOWED_HOSTS = ['testserver']
+
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.admin',
+    'django.contrib.auth',
+    'django.contrib.contenttypes',
+    'django.contrib.sessions',
+    'django.contrib.messages',
+    'django.contrib.staticfiles',
+    'reproduce_bug',
+]
+
+MIDDLEWARE = [
+    'django.contrib.sessions.middleware.SessionMiddleware',
+    'django.middleware.common.CommonMiddleware',
+    'django.middleware.csrf.CsrfViewMiddleware',
+    'django.contrib.auth.middleware.AuthenticationMiddleware',
+    'django.contrib.messages.middleware.MessageMiddleware',
+]
+
+ROOT_URLCONF = 'reproduce_bug.urls'
+
+SECRET_KEY = 'dummy-key-for-tests'
+
+TEMPLATES = [{
+    'BACKEND': 'django.template.backends.django.DjangoTemplates',
+    'APP_DIRS': True,
+    'OPTIONS': {
+        'context_processors': [
+            'django.template.context_processors.debug',
+            'django.template.context_processors.request',
+            'django.contrib.auth.context_processors.auth',
+            'django.contrib.messages.context_processors.messages',
+        ],
+    },
+}]
+
+STATIC_URL = '/static/'
\ No newline at end of file
diff --git a/reproduce_bug/reproduce_bug/urls.py b/reproduce_bug/reproduce_bug/urls.py
new file mode 100644
index 0000000000..6b669efaa2
--- /dev/null
+++ b/reproduce_bug/reproduce_bug/urls.py
@@ -0,0 +1,6 @@
+from django.contrib import admin
+from django.urls import path
+
+urlpatterns = [
+    path('admin/', admin.site.urls),
+]
\ No newline at end of file
diff --git a/reproduce_bug/test_bug.py b/reproduce_bug/test_bug.py
new file mode 100644
index 0000000000..67fad11e19
--- /dev/null
+++ b/reproduce_bug/test_bug.py
@@ -0,0 +1,40 @@
+import os
+os.environ.setdefault("DJANGO_SETTINGS_MODULE", "reproduce_bug.settings")
+
+import django
+django.setup()
+
+from django.contrib.auth.models import User
+from django.test import Client
+
+# Create database tables
+from django.core.management import call_command
+call_command('migrate', verbosity=0)
+
+# Create superuser
+User.objects.create_superuser('admin', 'admin@test.com', 'admin')
+
+# Run test
+client = Client()
+client.login(username='admin', password='admin')
+
+# Try to create a Thing with no SubThings
+response = client.post('/admin/reproduce_bug/thing/add/', {
+    'name': 'Test Thing',
+    'subthings-TOTAL_FORMS': '0',
+    'subthings-INITIAL_FORMS': '0',
+    'subthings-MIN_NUM_FORMS': '0',
+    'subthings-MAX_NUM_FORMS': '1000',
+})
+
+print("Response status code:", response.status_code)
+if response.status_code != 302:  # 302 is redirect after successful creation
+    print("Error occurred!")
+    print(response.content.decode())
+else:
+    from reproduce_bug.models import Thing, SubThing
+    thing = Thing.objects.first()
+    print("\nCreated objects:")
+    print(f"Thing: id={thing.id}, name={thing.name}")
+    for subthing in SubThing.objects.all():
+        print(f"SubThing: name={subthing.name}, thing_id={subthing.thing_id}")
\ No newline at end of file
