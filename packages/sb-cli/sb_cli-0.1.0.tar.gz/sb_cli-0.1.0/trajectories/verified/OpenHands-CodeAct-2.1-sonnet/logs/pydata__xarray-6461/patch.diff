diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..e9ec1d6f
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,25 @@
+import xarray as xr
+import numpy as np
+
+# Test case 1: Original case with scalar values
+print("Test 1: Original case with scalar values")
+result1 = xr.where(xr.DataArray([1, 2, 3]) > 0, 1, 0, keep_attrs=True)
+print("Result 1:", result1)
+
+# Test case 2: With attributes on the condition
+print("\nTest 2: With attributes on condition")
+cond = xr.DataArray([1, 2, 3], attrs={"units": "m"}) > 0
+result2 = xr.where(cond, 1, 0, keep_attrs=True)
+print("Result 2:", result2)
+
+# Test case 3: With array-like second argument with attributes
+print("\nTest 3: With array-like second argument with attributes")
+x = xr.DataArray([10, 20, 30], attrs={"units": "m"})
+result3 = xr.where(x > 15, x, 0, keep_attrs=True)
+print("Result 3:", result3)
+
+# Test case 4: With array-like arguments for both x and y
+print("\nTest 4: With array-like arguments for both")
+y = xr.DataArray([1, 2, 3], attrs={"units": "cm"})
+result4 = xr.where(x > 15, x, y, keep_attrs=True)
+print("Result 4:", result4)
\ No newline at end of file
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 7676d8e5..bbc581d8 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -1829,7 +1829,8 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is True:
         # keep the attributes of x, the second parameter, by default to
         # be consistent with the `where` method of `DataArray` and `Dataset`
-        keep_attrs = lambda attrs, context: attrs[1]
+        # if x is a scalar, it has no attributes, so return an empty dict
+        keep_attrs = lambda attrs, context: attrs[1] if len(attrs) > 1 else {}
 
     # alignment for three arguments is complicated, so don't support it yet
     return apply_ufunc(
