diff --git a/src/_pytest/capture.py b/src/_pytest/capture.py
index 3f9c60fb9..fe1e879e4 100644
--- a/src/_pytest/capture.py
+++ b/src/_pytest/capture.py
@@ -389,6 +389,7 @@ class FDCaptureBinary:
                 encoding="utf-8",
                 errors="replace",
                 write_through=True,
+                newline="",  # Preserve \r and \n as is
             )
             if targetfd in patchsysdict:
                 self.syscapture = SysCapture(targetfd, self.tmpfile)
diff --git a/test_capfd.py b/test_capfd.py
new file mode 100644
index 000000000..d85dd0fa8
--- /dev/null
+++ b/test_capfd.py
@@ -0,0 +1,4 @@
+def test_cafd_includes_carriage_return(capfd):
+    print('Greetings from DOS', end='\r')
+    out, err = capfd.readouterr()
+    assert out.endswith('\r')
\ No newline at end of file
diff --git a/test_capfd_edgecases.py b/test_capfd_edgecases.py
new file mode 100644
index 000000000..3e8a0dd35
--- /dev/null
+++ b/test_capfd_edgecases.py
@@ -0,0 +1,17 @@
+def test_capfd_mixed_newlines(capfd):
+    # Test mixed newlines
+    print('Line1\rLine2\nLine3\r\nLine4', end='')
+    out, err = capfd.readouterr()
+    assert out == 'Line1\rLine2\nLine3\r\nLine4'
+
+def test_capfd_normal_newlines(capfd):
+    # Test that normal newlines still work
+    print('Hello\nWorld')
+    out, err = capfd.readouterr()
+    assert out == 'Hello\nWorld\n'
+
+def test_capfd_empty_output(capfd):
+    # Test empty output
+    print('', end='')
+    out, err = capfd.readouterr()
+    assert out == ''
\ No newline at end of file
