diff --git a/lib/matplotlib/axes/_base.py b/lib/matplotlib/axes/_base.py
index 90b0bf117e..140ba7cb84 100644
--- a/lib/matplotlib/axes/_base.py
+++ b/lib/matplotlib/axes/_base.py
@@ -1308,6 +1308,18 @@ class _AxesBase(martist.Artist):
         self._get_patches_for_fill = _process_plot_var_args(self, 'fill')
 
         self._gridOn = mpl.rcParams['axes.grid']
+        # Unset the .axes attribute of all artists before clearing the children list
+        for artist in self._children:
+            artist.axes = None
+            if hasattr(artist, 'figure'):
+                artist.figure = None
+
+        # Handle legend separately since it's not in _children
+        if hasattr(self, 'legend_') and self.legend_ is not None:
+            self.legend_.axes = None
+            if hasattr(self.legend_, 'figure'):
+                self.legend_.figure = None
+
         self._children = []
         self._mouseover_set = _OrderedSet()
         self.child_axes = []
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..b9d909f2e8
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,61 @@
+import matplotlib.pyplot as plt
+
+# Test case 1: Removing an artist from its axes
+f1, a1 = plt.subplots()
+l1, = a1.plot([1, 2])
+print("Test case 1 - Before remove():", l1.axes)
+l1.remove()
+print("Test case 1 - After remove():", l1.axes)
+
+# Test case 2: Clearing the axes with cla()
+f2, a2 = plt.subplots()
+l2, = a2.plot([1, 2])
+print("\nTest case 2 - Before cla():", l2.axes)
+a2.cla()
+print("Test case 2 - After cla():", l2.axes)
+
+# Test case 3: Clearing the figure with clf()
+f3, a3 = plt.subplots()
+l3, = a3.plot([1, 2])
+print("\nTest case 3 - Before clf():", l3.axes)
+f3.clf()
+print("Test case 3 - After clf():", l3.axes)
+
+# Test case 4: Nested artists (legend)
+f4, a4 = plt.subplots()
+l4, = a4.plot([1, 2], label='test')
+leg = a4.legend()
+print("\nTest case 4 - Before cla():")
+print("Line axes:", l4.axes)
+print("Legend axes:", leg.axes)
+a4.cla()
+print("After cla():")
+print("Line axes:", l4.axes)
+print("Legend axes:", leg.axes)
+
+# Test case 5: Shared axes
+f5, (a5_1, a5_2) = plt.subplots(1, 2, sharex=True)
+l5_1, = a5_1.plot([1, 2])
+l5_2, = a5_2.plot([3, 4])
+print("\nTest case 5 - Before clearing first axes:")
+print("Line 1 axes:", l5_1.axes)
+print("Line 2 axes:", l5_2.axes)
+a5_1.cla()
+print("After clearing first axes:")
+print("Line 1 axes:", l5_1.axes)
+print("Line 2 axes:", l5_2.axes)
+
+# Test case 6: Custom artist
+class CustomArtist(plt.matplotlib.artist.Artist):
+    def __init__(self, axes=None):
+        super().__init__()
+        self.axes = axes
+
+f6, a6 = plt.subplots()
+custom = CustomArtist(a6)
+a6.add_artist(custom)
+print("\nTest case 6 - Before cla():")
+print("Custom artist axes:", custom.axes)
+a6.cla()
+print("After cla():")
+print("Custom artist axes:", custom.axes)
\ No newline at end of file
