+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z '' ']'
+++ export CONDA_SHLVL=0
+++ CONDA_SHLVL=0
+++ '[' -n '' ']'
+++++ dirname /opt/miniconda3/bin/conda
++++ dirname /opt/miniconda3/bin
+++ PATH=/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export PATH
+++ '[' -z '' ']'
+++ PS1=
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1=
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval 'PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''1'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=1
+++ CONDA_SHLVL=1
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''2'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_1='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=2
++ CONDA_SHLVL=2
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_1=/opt/miniconda3
++ CONDA_PREFIX_1=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ cd /testbed
+ git config --global --add safe.directory /testbed
+ cd /testbed
+ git status
On branch main
Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   xarray/core/indexes.py
	modified:   xarray/core/indexing.py
	modified:   xarray/core/variable.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	reproduce_stack_dtype.py

no changes added to commit (use "git add" and/or "git commit -a")
+ git show
commit 41fef6f1352be994cd90056d47440fe9aa4c068f
Author: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>
Date:   Mon Dec 19 18:58:21 2022 +0000

    [pre-commit.ci] pre-commit autoupdate (#7389)
    
    updates:
    - [github.com/PyCQA/isort: 5.10.1 â†’ v5.11.3](https://github.com/PyCQA/isort/compare/5.10.1...v5.11.3)
    
    Co-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>

diff --git a/.pre-commit-config.yaml b/.pre-commit-config.yaml
index ee8c783d..cb589df5 100644
--- a/.pre-commit-config.yaml
+++ b/.pre-commit-config.yaml
@@ -21,7 +21,7 @@ repos:
       - id: autoflake # isort should run before black as black sometimes tweaks the isort output
         args: ["--in-place", "--ignore-init-module-imports"]
   - repo: https://github.com/PyCQA/isort
-    rev: 5.10.1
+    rev: v5.11.3
     hooks:
       - id: isort
   - repo: https://github.com/asottile/pyupgrade
+ git diff 41fef6f1352be994cd90056d47440fe9aa4c068f
diff --git a/xarray/core/indexes.py b/xarray/core/indexes.py
index f3f03c94..12cd3c52 100644
--- a/xarray/core/indexes.py
+++ b/xarray/core/indexes.py
@@ -168,18 +168,35 @@ def safe_cast_to_index(array: Any) -> pd.Index:
     from xarray.core.variable import Variable
 
     if isinstance(array, pd.Index):
-        index = array
+        # For integer types, ensure the dtype is preserved
+        if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            index = pd.Index(array.values, dtype=array.dtype)
+        else:
+            index = array
     elif isinstance(array, (DataArray, Variable)):
         # returns the original multi-index for pandas.MultiIndex level coordinates
         index = array._to_index()
+        # For integer types, ensure the dtype is preserved
+        if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            index = pd.Index(index.values, dtype=array.dtype)
     elif isinstance(array, Index):
         index = array.to_pandas_index()
+        # For integer types, ensure the dtype is preserved
+        if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            index = pd.Index(index.values, dtype=array.dtype)
     elif isinstance(array, PandasIndexingAdapter):
         index = array.array
+        # For integer types, ensure the dtype is preserved
+        if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            index = pd.Index(index.values, dtype=array.dtype)
     else:
         kwargs = {}
-        if hasattr(array, "dtype") and array.dtype.kind == "O":
-            kwargs["dtype"] = object
+        if hasattr(array, "dtype"):
+            if array.dtype.kind == "O":
+                kwargs["dtype"] = object
+            elif array.dtype.kind in "iu":
+                # Preserve integer dtypes
+                kwargs["dtype"] = array.dtype
         index = pd.Index(np.asarray(array), **kwargs)
 
     return _maybe_cast_to_cftimeindex(index)
@@ -291,7 +308,11 @@ class PandasIndex(Index):
         # make a shallow copy: cheap and because the index name may be updated
         # here or in other constructors (cannot use pd.Index.rename as this
         # constructor is also called from PandasMultiIndex)
-        index = safe_cast_to_index(array).copy()
+        if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            # Preserve integer dtypes
+            index = pd.Index(array, dtype=array.dtype)
+        else:
+            index = safe_cast_to_index(array).copy()
 
         if index.name is None:
             index.name = dim
@@ -300,7 +321,11 @@ class PandasIndex(Index):
         self.dim = dim
 
         if coord_dtype is None:
-            coord_dtype = get_valid_numpy_dtype(index)
+            if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+                # Preserve integer dtypes
+                coord_dtype = array.dtype
+            else:
+                coord_dtype = get_valid_numpy_dtype(index)
         self.coord_dtype = coord_dtype
 
     def _replace(self, index, dim=None, coord_dtype=None):
@@ -344,7 +369,13 @@ class PandasIndex(Index):
             if level is not None:
                 data = var._data.array.get_level_values(level)
 
-        obj = cls(data, dim, coord_dtype=var.dtype)
+        # Preserve original dtype for integer types
+        if hasattr(data, 'dtype') and data.dtype.kind in 'iu':
+            data = pd.Index(data, dtype=data.dtype)
+            obj = cls(data, dim, coord_dtype=data.dtype)
+        else:
+            obj = cls(data, dim, coord_dtype=var.dtype)
+
         assert not isinstance(obj.index, pd.MultiIndex)
         obj.index.name = name
 
@@ -401,11 +432,21 @@ class PandasIndex(Index):
             var = variables[name]
             attrs = var.attrs
             encoding = var.encoding
+            # Use the original variable's dtype for integer types
+            if var.dtype.kind in 'iu':
+                dtype = var.dtype
+            else:
+                dtype = self.coord_dtype
         else:
             attrs = None
             encoding = None
+            dtype = self.coord_dtype
+
+        # Preserve original dtype for integer types
+        if hasattr(self.index, 'dtype') and self.index.dtype.kind in 'iu':
+            dtype = self.index.dtype
 
-        data = PandasIndexingAdapter(self.index, dtype=self.coord_dtype)
+        data = PandasIndexingAdapter(self.index, dtype=dtype)
         var = IndexVariable(self.dim, data, attrs=attrs, encoding=encoding)
         return {name: var}
 
@@ -706,9 +747,20 @@ class PandasMultiIndex(PandasIndex):
                     f"from variable {name!r} that wraps a multi-index"
                 )
 
-        split_labels, levels = zip(*[lev.factorize() for lev in level_indexes])
+        # Factorize each level and preserve dtypes
+        split_labels_levels = []
+        for lev, var in zip(level_indexes, variables.values()):
+            labels, levs = lev.factorize()
+            if var.dtype.kind in 'iu':
+                labels = labels.astype(var.dtype)
+                levs = pd.Index(levs, dtype=var.dtype)
+            split_labels_levels.append((labels, levs))
+        split_labels, levels = zip(*split_labels_levels)
+
+        # Create meshgrid and preserve dtypes
         labels_mesh = np.meshgrid(*split_labels, indexing="ij")
-        labels = [x.ravel() for x in labels_mesh]
+        labels = [x.ravel().astype(var.dtype) if var.dtype.kind in 'iu' else x.ravel() 
+                 for x, var in zip(labels_mesh, variables.values())]
 
         index = pd.MultiIndex(levels, labels, sortorder=0, names=variables.keys())
         level_coords_dtype = {k: var.dtype for k, var in variables.items()}
diff --git a/xarray/core/indexing.py b/xarray/core/indexing.py
index ba937183..bf91388a 100644
--- a/xarray/core/indexing.py
+++ b/xarray/core/indexing.py
@@ -1425,7 +1425,11 @@ class PandasIndexingAdapter(ExplicitlyIndexedNDArrayMixin):
         self.array = safe_cast_to_index(array)
 
         if dtype is None:
-            self._dtype = get_valid_numpy_dtype(array)
+            # For integer types, preserve the original dtype
+            if hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+                self._dtype = array.dtype
+            else:
+                self._dtype = get_valid_numpy_dtype(array)
         else:
             self._dtype = np.dtype(dtype)
 
@@ -1441,6 +1445,9 @@ class PandasIndexingAdapter(ExplicitlyIndexedNDArrayMixin):
             with suppress(AttributeError):
                 # this might not be public API
                 array = array.astype("object")
+        # Preserve original dtype for integer types if no explicit dtype is requested
+        if dtype is None and hasattr(array, 'dtype') and array.dtype.kind in 'iu':
+            return np.asarray(array.values, dtype=array.dtype)
         return np.asarray(array.values, dtype=dtype)
 
     @property
diff --git a/xarray/core/variable.py b/xarray/core/variable.py
index 118e7c48..01878ae8 100644
--- a/xarray/core/variable.py
+++ b/xarray/core/variable.py
@@ -178,6 +178,9 @@ def _maybe_wrap_data(data):
     all pass through unmodified.
     """
     if isinstance(data, pd.Index):
+        # Preserve original dtype for integer types
+        if hasattr(data, 'dtype') and data.dtype.kind in 'iu':
+            data = pd.Index(data.values, dtype=data.dtype)
         return PandasIndexingAdapter(data)
     return data
 
@@ -289,7 +292,11 @@ def as_compatible_data(data, fastpath=False):
         return data
 
     # validate whether the data is valid data types.
-    data = np.asarray(data)
+    if hasattr(data, 'dtype') and data.dtype.kind in 'iu':
+        # Preserve integer dtypes
+        data = np.asarray(data, dtype=data.dtype)
+    else:
+        data = np.asarray(data)
 
     if isinstance(data, np.ndarray) and data.dtype.kind in "OMm":
         data = _possibly_convert_objects(data)
@@ -1694,6 +1701,9 @@ class Variable(AbstractArray, NdimSizeLenMixin, VariableArithmetic):
 
         new_shape = reordered.shape[: len(other_dims)] + (-1,)
         new_data = duck_array_ops.reshape(reordered.data, new_shape)
+        # Always preserve original dtype
+        if hasattr(reordered.data, 'dtype'):
+            new_data = new_data.astype(reordered.dtype)
         new_dims = reordered.dims[: len(other_dims)] + (new_dim,)
 
         return Variable(new_dims, new_data, self._attrs, self._encoding, fastpath=True)
+ source /opt/miniconda3/bin/activate
++ _CONDA_ROOT=/opt/miniconda3
++ . /opt/miniconda3/etc/profile.d/conda.sh
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ '[' -z x ']'
++ conda activate
++ local cmd=activate
++ case "$cmd" in
++ __conda_activate activate
++ '[' -n '' ']'
++ local ask_conda
+++ PS1='(testbed) '
+++ __conda_exe shell.posix activate
+++ /opt/miniconda3/bin/conda shell.posix activate
++ ask_conda='. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
++ eval '. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh"
PS1='\''(base) '\''
export PATH='\''/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3'\''
export CONDA_SHLVL='\''3'\''
export CONDA_DEFAULT_ENV='\''base'\''
export CONDA_PROMPT_MODIFIER='\''(base) '\''
export CONDA_PREFIX_2='\''/opt/miniconda3/envs/testbed'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\'''
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/udunits2-deactivate.sh
++++ unset UDUNITS2_XML_PATH
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/proj4-deactivate.sh
++++ unset PROJ_DATA
++++ unset PROJ_NETWORK
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/libxml2_deactivate.sh
++++ test -n ''
++++ unset XML_CATALOG_FILES
++++ unset xml_catalog_files_libxml2
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/geotiff-deactivate.sh
++++ unset GEOTIFF_CSV
++++ '[' -n '' ']'
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/gdal-deactivate.sh
++++ unset GDAL_DATA
++++ '[' -n '' ']'
++++ unset GDAL_DRIVER_PATH
++++ '[' -n '' ']'
++++ unset CPL_ZIP_ENCODING
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmpy-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
++++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++++ unset _CONDA_SET_ESMFMKFILE
+++ . /opt/miniconda3/envs/testbed/etc/conda/deactivate.d/esmf-deactivate.sh
++++ unset ESMFMKFILE
++++ '[' -n '' ']'
+++ PS1='(base) '
+++ export PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ PATH=/opt/miniconda3/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
+++ export CONDA_PREFIX=/opt/miniconda3
+++ CONDA_PREFIX=/opt/miniconda3
+++ export CONDA_SHLVL=3
+++ CONDA_SHLVL=3
+++ export CONDA_DEFAULT_ENV=base
+++ CONDA_DEFAULT_ENV=base
+++ export 'CONDA_PROMPT_MODIFIER=(base) '
+++ CONDA_PROMPT_MODIFIER='(base) '
+++ export CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ CONDA_PREFIX_2=/opt/miniconda3/envs/testbed
+++ export CONDA_EXE=/opt/miniconda3/bin/conda
+++ CONDA_EXE=/opt/miniconda3/bin/conda
+++ export _CE_M=
+++ _CE_M=
+++ export _CE_CONDA=
+++ _CE_CONDA=
+++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
+++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ __conda_hashr
++ '[' -n '' ']'
++ '[' -n '' ']'
++ hash -r
+ conda activate testbed
+ local cmd=activate
+ case "$cmd" in
+ __conda_activate activate testbed
+ '[' -n '' ']'
+ local ask_conda
++ PS1='(base) '
++ __conda_exe shell.posix activate testbed
++ /opt/miniconda3/bin/conda shell.posix activate testbed
+ ask_conda='PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
+ eval 'PS1='\''(testbed) '\''
export PATH='\''/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'\''
export CONDA_PREFIX='\''/opt/miniconda3/envs/testbed'\''
export CONDA_SHLVL='\''4'\''
export CONDA_DEFAULT_ENV='\''testbed'\''
export CONDA_PROMPT_MODIFIER='\''(testbed) '\''
export CONDA_PREFIX_3='\''/opt/miniconda3'\''
export CONDA_EXE='\''/opt/miniconda3/bin/conda'\''
export _CE_M='\'''\''
export _CE_CONDA='\'''\''
export CONDA_PYTHON_EXE='\''/opt/miniconda3/bin/python'\''
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh"
. "/opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh"'
++ PS1='(testbed) '
++ export PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ PATH=/opt/miniconda3/envs/testbed/bin:/opt/miniconda3/condabin:/opt/miniconda3/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
++ export CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ CONDA_PREFIX=/opt/miniconda3/envs/testbed
++ export CONDA_SHLVL=4
++ CONDA_SHLVL=4
++ export CONDA_DEFAULT_ENV=testbed
++ CONDA_DEFAULT_ENV=testbed
++ export 'CONDA_PROMPT_MODIFIER=(testbed) '
++ CONDA_PROMPT_MODIFIER='(testbed) '
++ export CONDA_PREFIX_3=/opt/miniconda3
++ CONDA_PREFIX_3=/opt/miniconda3
++ export CONDA_EXE=/opt/miniconda3/bin/conda
++ CONDA_EXE=/opt/miniconda3/bin/conda
++ export _CE_M=
++ _CE_M=
++ export _CE_CONDA=
++ _CE_CONDA=
++ export CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ CONDA_PYTHON_EXE=/opt/miniconda3/bin/python
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmf-activate.sh
+++ '[' -n '' ']'
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/esmpy-activate.sh
+++ '[' -n /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ _CONDA_SET_ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ '[' -f /opt/miniconda3/envs/testbed/lib/esmf.mk ']'
+++ export ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
+++ ESMFMKFILE=/opt/miniconda3/envs/testbed/lib/esmf.mk
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/gdal-activate.sh
+++ '[' -n '' ']'
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/gdal ']'
+++ export GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ GDAL_DATA=/opt/miniconda3/envs/testbed/share/gdal
+++ export GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ GDAL_DRIVER_PATH=/opt/miniconda3/envs/testbed/lib/gdalplugins
+++ '[' '!' -d /opt/miniconda3/envs/testbed/lib/gdalplugins ']'
+++ export CPL_ZIP_ENCODING=UTF-8
+++ CPL_ZIP_ENCODING=UTF-8
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/geotiff-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/epsg_csv ']'
+++ '[' -d /opt/miniconda3/envs/testbed/Library/share/epsg_csv ']'
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/libxml2_activate.sh
+++ test -n ''
+++ xml_catalog_files_libxml2=
+++ XML_CATALOG_FILES=
+++ conda_catalog_files=
+++ ifs_libxml2=' 	
'
+++ IFS=' '
+++ rem=/opt/miniconda3/envs/testbed
+++ for pre in ${rem}
+++ test '' = /opt/miniconda3/envs/testbed
+++ conda_catalog_files=/opt/miniconda3/envs/testbed
+++ rem=
+++ IFS=' 	
'
+++ conda_catalog_files='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ export 'XML_CATALOG_FILES=file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ XML_CATALOG_FILES='file:///opt/miniconda3/envs/testbed/etc/xml/catalog file:///etc/xml/catalog'
+++ unset conda_catalog_files ifs_libxml2 rem
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/proj4-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/proj ']'
+++ export PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ PROJ_DATA=/opt/miniconda3/envs/testbed/share/proj
+++ '[' -f /opt/miniconda3/envs/testbed/share/proj/copyright_and_licenses.csv ']'
+++ export PROJ_NETWORK=ON
+++ PROJ_NETWORK=ON
++ . /opt/miniconda3/envs/testbed/etc/conda/activate.d/udunits2-activate.sh
+++ '[' -n '' ']'
+++ '[' -d /opt/miniconda3/envs/testbed/share/udunits ']'
+++ export UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+++ UDUNITS2_XML_PATH=/opt/miniconda3/envs/testbed/share/udunits/udunits2.xml
+ __conda_hashr
+ '[' -n '' ']'
+ '[' -n '' ']'
+ hash -r
+ python -m pip install -e .
Obtaining file:///testbed
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Checking if build backend supports build_editable: started
  Checking if build backend supports build_editable: finished with status 'done'
  Getting requirements to build editable: started
  Getting requirements to build editable: finished with status 'done'
  Preparing editable metadata (pyproject.toml): started
  Preparing editable metadata (pyproject.toml): finished with status 'done'
Requirement already satisfied: numpy>=1.20 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f1.d20241029) (1.23.0)
Requirement already satisfied: pandas>=1.3 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f1.d20241029) (1.5.3)
Requirement already satisfied: packaging>=21.3 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from xarray==2022.12.1.dev10+g41fef6f1.d20241029) (23.1)
Requirement already satisfied: python-dateutil>=2.8.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f1.d20241029) (2.8.2)
Requirement already satisfied: pytz>=2020.1 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f1.d20241029) (2023.3)
Requirement already satisfied: six>=1.5 in /opt/miniconda3/envs/testbed/lib/python3.10/site-packages (from python-dateutil>=2.8.1->pandas>=1.3->xarray==2022.12.1.dev10+g41fef6f1.d20241029) (1.16.0)
Building wheels for collected packages: xarray
  Building editable for xarray (pyproject.toml): started
  Building editable for xarray (pyproject.toml): finished with status 'done'
  Created wheel for xarray: filename=xarray-2022.12.1.dev10+g41fef6f1.d20241029-0.editable-py3-none-any.whl size=9159 sha256=0d8f975560bcc80f4daaa44ef25dd01404bca761783c986f47288abf2a71d3e8
  Stored in directory: /tmp/pip-ephem-wheel-cache-bx0_ku01/wheels/0d/a6/cb/465a7b303d624cc531250fa27c75d038ddc29430bdb6ba7c9f
Successfully built xarray
Installing collected packages: xarray
  Attempting uninstall: xarray
    Found existing installation: xarray 2022.12.1.dev10+g41fef6f1
    Uninstalling xarray-2022.12.1.dev10+g41fef6f1:
      Successfully uninstalled xarray-2022.12.1.dev10+g41fef6f1
Successfully installed xarray-2022.12.1.dev10+g41fef6f1.d20241029
WARNING: Running pip as the 'root' user can result in broken permissions and conflicting behaviour with the system package manager, possibly rendering your system unusable.It is recommended to use a virtual environment instead: https://pip.pypa.io/warnings/venv. Use the --root-user-action option if you know what you are doing and want to suppress this warning.
+ git checkout 41fef6f1352be994cd90056d47440fe9aa4c068f xarray/tests/test_indexes.py
Updated 0 paths from e30a1f33
+ git apply -v -
Checking patch xarray/tests/test_indexes.py...
Applied patch xarray/tests/test_indexes.py cleanly.
+ pytest -rA xarray/tests/test_indexes.py
============================= test session starts ==============================
platform linux -- Python 3.10.15, pytest-7.4.0, pluggy-1.5.0
rootdir: /testbed
configfile: setup.cfg
plugins: hypothesis-6.115.5, cov-5.0.0, timeout-2.3.1, xdist-3.6.1, env-1.1.5
collected 73 items

xarray/tests/test_indexes.py ........................................... [ 58%]
............................FF                                           [100%]

=================================== FAILURES ===================================
__________________ test_restore_dtype_on_multiindexes[int32] ___________________

dtype = 'int32'

    @pytest.mark.parametrize("dtype", ["int32", "float32"])
    def test_restore_dtype_on_multiindexes(dtype: str) -> None:
        foo = xr.Dataset(coords={"bar": ("bar", np.array([0, 1], dtype=dtype))})
        foo = foo.stack(baz=("bar",))
>       assert str(foo["bar"].values.dtype) == dtype
E       AssertionError: assert 'int64' == 'int32'
E         - int32
E         + int64

/testbed/xarray/tests/test_indexes.py:706: AssertionError
_________________ test_restore_dtype_on_multiindexes[float32] __________________

dtype = 'float32'

    @pytest.mark.parametrize("dtype", ["int32", "float32"])
    def test_restore_dtype_on_multiindexes(dtype: str) -> None:
        foo = xr.Dataset(coords={"bar": ("bar", np.array([0, 1], dtype=dtype))})
        foo = foo.stack(baz=("bar",))
>       assert str(foo["bar"].values.dtype) == dtype
E       AssertionError: assert 'float64' == 'float32'
E         - float32
E         + float64

/testbed/xarray/tests/test_indexes.py:706: AssertionError
==================================== PASSES ====================================
__________________________ TestPandasIndex.test_join ___________________________
----------------------------- Captured stdout call -----------------------------
Index(['aa', 'aaa'], dtype='object', name='x')
Index(['a', 'aa', 'aaa', 'aaaa'], dtype='object', name='x')
=========================== short test summary info ============================
PASSED xarray/tests/test_indexes.py::test_asarray_tuplesafe
PASSED xarray/tests/test_indexes.py::TestIndex::test_from_variables
PASSED xarray/tests/test_indexes.py::TestIndex::test_concat
PASSED xarray/tests/test_indexes.py::TestIndex::test_stack
PASSED xarray/tests/test_indexes.py::TestIndex::test_unstack
PASSED xarray/tests/test_indexes.py::TestIndex::test_create_variables
PASSED xarray/tests/test_indexes.py::TestIndex::test_to_pandas_index
PASSED xarray/tests/test_indexes.py::TestIndex::test_isel
PASSED xarray/tests/test_indexes.py::TestIndex::test_sel
PASSED xarray/tests/test_indexes.py::TestIndex::test_join
PASSED xarray/tests/test_indexes.py::TestIndex::test_reindex_like
PASSED xarray/tests/test_indexes.py::TestIndex::test_equals
PASSED xarray/tests/test_indexes.py::TestIndex::test_roll
PASSED xarray/tests/test_indexes.py::TestIndex::test_rename
PASSED xarray/tests/test_indexes.py::TestIndex::test_copy[True]
PASSED xarray/tests/test_indexes.py::TestIndex::test_copy[False]
PASSED xarray/tests/test_indexes.py::TestIndex::test_getitem
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_constructor
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_from_variables
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_from_variables_index_adapter
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_concat_periods
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_concat_str_dtype[str]
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_concat_str_dtype[bytes]
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_concat_empty
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_concat_dim_error
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_create_variables
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_to_pandas_index
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_sel
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_sel_boolean
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_sel_datetime
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_sel_unsorted_datetime_index_raises
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_equals
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_join
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_reindex_like
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_rename
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_copy
PASSED xarray/tests/test_indexes.py::TestPandasIndex::test_getitem
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_constructor
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_from_variables
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_concat
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_stack
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_stack_non_unique
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_unstack
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_create_variables
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_sel
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_join
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_rename
PASSED xarray/tests/test_indexes.py::TestPandasMultiIndex::test_copy
PASSED xarray/tests/test_indexes.py::TestIndexes::test_interface[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_interface[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_variables[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_variables[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_dims[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_dims[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_unique[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_unique[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_is_multi[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_is_multi[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_all_coords[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_all_coords[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_all_dims[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_get_all_dims[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_group_by_index[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_group_by_index[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_to_pandas_indexes[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_to_pandas_indexes[xr_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_copy_indexes[pd_index]
PASSED xarray/tests/test_indexes.py::TestIndexes::test_copy_indexes[xr_index]
PASSED xarray/tests/test_indexes.py::test_safe_cast_to_index
PASSED xarray/tests/test_indexes.py::test_safe_cast_to_index_cftimeindex
PASSED xarray/tests/test_indexes.py::test_safe_cast_to_index_datetime_datetime
FAILED xarray/tests/test_indexes.py::test_restore_dtype_on_multiindexes[int32]
FAILED xarray/tests/test_indexes.py::test_restore_dtype_on_multiindexes[float32]
========================= 2 failed, 71 passed in 1.51s =========================
+ git checkout 41fef6f1352be994cd90056d47440fe9aa4c068f xarray/tests/test_indexes.py
Updated 1 path from e30a1f33
