diff --git a/django/urls/base.py b/django/urls/base.py
index 0e1c3d909c..1b63eebf0a 100644
--- a/django/urls/base.py
+++ b/django/urls/base.py
@@ -7,7 +7,7 @@ from django.utils.functional import lazy
 from django.utils.translation import override
 
 from .exceptions import NoReverseMatch, Resolver404
-from .resolvers import get_ns_resolver, get_resolver
+from .resolvers import get_ns_resolver, get_resolver, _get_resolver
 from .utils import get_callable
 
 # SCRIPT_NAME prefixes for each thread are stored here. If there's no entry for
@@ -92,7 +92,7 @@ reverse_lazy = lazy(reverse, str)
 
 def clear_url_caches():
     get_callable.cache_clear()
-    get_resolver.cache_clear()
+    _get_resolver.cache_clear()
     get_ns_resolver.cache_clear()
 
 
diff --git a/django/urls/resolvers.py b/django/urls/resolvers.py
index 247e3680c0..06690b5310 100644
--- a/django/urls/resolvers.py
+++ b/django/urls/resolvers.py
@@ -63,10 +63,15 @@ class ResolverMatch:
         )
 
 
-@functools.lru_cache(maxsize=None)
 def get_resolver(urlconf=None):
+    # Look up settings.ROOT_URLCONF before the memoized function call to avoid
+    # creating multiple URLResolver instances when called with None vs. the actual value
     if urlconf is None:
         urlconf = settings.ROOT_URLCONF
+    return _get_resolver(urlconf)
+
+@functools.lru_cache(maxsize=None)
+def _get_resolver(urlconf):
     return URLResolver(RegexPattern(r'^/'), urlconf)
 
 
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..d0bf0441d8
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,24 @@
+from django.conf import settings
+from django.urls.base import set_urlconf, reverse
+from django.urls.resolvers import get_resolver
+
+# Configure Django settings
+settings.configure(
+    ROOT_URLCONF='django.conf.urls',
+    DEBUG=True,
+    INSTALLED_APPS=[],
+)
+
+# First call to get_resolver() with None - will use settings.ROOT_URLCONF internally
+resolver1 = get_resolver(None)
+print("First resolver:", resolver1)
+
+# Call set_urlconf which is what happens during request handling
+set_urlconf(settings.ROOT_URLCONF)
+
+# Second call to get_resolver() with settings.ROOT_URLCONF directly
+resolver2 = get_resolver(settings.ROOT_URLCONF)
+print("Second resolver:", resolver2)
+
+# Show that they are different objects
+print("Are resolvers the same object?", resolver1 is resolver2)
\ No newline at end of file
diff --git a/test_cache_clear.py b/test_cache_clear.py
new file mode 100644
index 0000000000..f2cbf40a66
--- /dev/null
+++ b/test_cache_clear.py
@@ -0,0 +1,23 @@
+from django.conf import settings
+from django.urls.base import clear_url_caches, get_resolver
+
+# Configure Django settings
+settings.configure(
+    ROOT_URLCONF='django.conf.urls',
+    DEBUG=True,
+    INSTALLED_APPS=[],
+)
+
+# Get a resolver
+resolver1 = get_resolver(None)
+print("First resolver:", resolver1)
+
+# Clear caches
+clear_url_caches()
+
+# Get another resolver
+resolver2 = get_resolver(None)
+print("Second resolver:", resolver2)
+
+# Show that they are different objects after cache clear
+print("Are resolvers the same object?", resolver1 is resolver2)
\ No newline at end of file
