diff --git a/django/db/models/base.py b/django/db/models/base.py
index 3ce711f3f1..114d6413a9 100644
--- a/django/db/models/base.py
+++ b/django/db/models/base.py
@@ -1708,6 +1708,9 @@ class Model(metaclass=ModelBase):
             fld = None
             for part in field.split(LOOKUP_SEP):
                 try:
+                    if part == 'pk':
+                        # Skip validation for 'pk' since it's always valid
+                        continue
                     fld = _cls._meta.get_field(part)
                     if fld.is_relation:
                         _cls = fld.get_path_info()[-1].to_opts.model
@@ -1724,7 +1727,8 @@ class Model(metaclass=ModelBase):
 
         # Skip ordering on pk. This is always a valid order_by field
         # but is an alias and therefore won't be found by opts.get_field.
-        fields = {f for f in fields if f != 'pk'}
+        # Also skip ordering on related__pk since it's a valid lookup
+        fields = {f for f in fields if f != 'pk' and not f.endswith('__pk')}
 
         # Check for invalid or nonexistent fields in ordering.
         invalid_fields = []
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 0000000000..cfcf9bfef7
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,14 @@
+import os
+os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'test_settings')
+
+import django
+django.setup()
+
+from django.core import management
+
+if __name__ == '__main__':
+    # Run model validation
+    try:
+        management.call_command('check')
+    except Exception as e:
+        print(f"Error: {e}")
\ No newline at end of file
diff --git a/test_app/__init__.py b/test_app/__init__.py
new file mode 100644
index 0000000000..a7506fdc94
--- /dev/null
+++ b/test_app/__init__.py
@@ -0,0 +1 @@
+# Empty init file
\ No newline at end of file
diff --git a/test_app/apps.py b/test_app/apps.py
new file mode 100644
index 0000000000..ae6f331d8b
--- /dev/null
+++ b/test_app/apps.py
@@ -0,0 +1,4 @@
+from django.apps import AppConfig
+
+class TestAppConfig(AppConfig):
+    name = 'test_app'
\ No newline at end of file
diff --git a/test_app/models.py b/test_app/models.py
new file mode 100644
index 0000000000..a37f425240
--- /dev/null
+++ b/test_app/models.py
@@ -0,0 +1,15 @@
+from django.db import models
+
+class Option(models.Model):
+    name = models.CharField(max_length=100)
+
+class AnotherOption(models.Model):
+    name = models.CharField(max_length=100)
+    parent = models.OneToOneField(Option, on_delete=models.CASCADE)
+
+class SomeModel(models.Model):
+    option = models.OneToOneField(Option, on_delete=models.CASCADE)
+    another = models.OneToOneField(AnotherOption, on_delete=models.CASCADE)
+
+    class Meta:
+        ordering = ['option__pk', 'another__parent__pk', 'another__pk']
\ No newline at end of file
diff --git a/test_settings.py b/test_settings.py
new file mode 100644
index 0000000000..6e46e7fd1b
--- /dev/null
+++ b/test_settings.py
@@ -0,0 +1,14 @@
+DATABASES = {
+    'default': {
+        'ENGINE': 'django.db.backends.sqlite3',
+        'NAME': ':memory:',
+    }
+}
+
+INSTALLED_APPS = [
+    'django.contrib.contenttypes',
+    'django.contrib.auth',
+    'test_app',
+]
+
+SECRET_KEY = 'dummy'
\ No newline at end of file
