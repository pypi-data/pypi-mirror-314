diff --git a/doc/faq.rst b/doc/faq.rst
index c817855f8..f90a9e38e 100644
--- a/doc/faq.rst
+++ b/doc/faq.rst
@@ -73,16 +73,16 @@ or if "directory" is in the python path.
 
 "pylint /whatever/directory/mymodule.py" will work if either:
 
-	- "/whatever/directory" is in the python path
+        - "/whatever/directory" is in the python path
 
-	- your cwd is "/whatever/directory"
+        - your cwd is "/whatever/directory"
 
-	- "directory" is a python package and "/whatever" is in the python
+        - "directory" is a python package and "/whatever" is in the python
           path
 
         - "directory" is an implicit namespace package and is in the python path.
 
-	- "directory" is a python package and your cwd is "/whatever" and so
+        - "directory" is a python package and your cwd is "/whatever" and so
           on...
 
 3.2 Where is the persistent data stored to compare between successive runs?
@@ -91,12 +91,11 @@ or if "directory" is in the python path.
 Analysis data are stored as a pickle file in a directory which is
 localized using the following rules:
 
-* value of the PYLINTHOME environment variable if set
+* value of the PYLINTHOME environment variable if set (for backward compatibility)
 
-* ".pylint.d" subdirectory of the user's home directory if it is found
-	(not always findable on Windows platforms)
+* "$XDG_DATA_HOME/pylint" if XDG_DATA_HOME is set
 
-* ".pylint.d" directory in the current directory
+* "$HOME/.local/share/pylint" if XDG_DATA_HOME is not set (default XDG data directory)
 
 3.3 How do I find the option name (for pylintrc) corresponding to a specific command line option?
 --------------------------------------------------------------------------------------------------------
@@ -107,7 +106,7 @@ the rc file
 
 For example::
 
-	pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile
+        pylint --disable=bare-except,invalid-name --class-rgx='[A-Z][a-z]+' --generate-rcfile
 
 3.4 I'd rather not run Pylint from the command line. Can I integrate it with my editor?
 ---------------------------------------------------------------------------------------
@@ -132,8 +131,8 @@ Yes, you can disable or enable (globally disabled) messages at the
 module level by adding the corresponding option in a comment at the
 top of the file: ::
 
-	# pylint: disable=wildcard-import, method-hidden
-	# pylint: enable=too-many-lines
+        # pylint: disable=wildcard-import, method-hidden
+        # pylint: enable=too-many-lines
 
 4.3 How can I tell Pylint to never check a given module?
 --------------------------------------------------------
diff --git a/pylint/config/__init__.py b/pylint/config/__init__.py
index 84774d0e3..08854126d 100644
--- a/pylint/config/__init__.py
+++ b/pylint/config/__init__.py
@@ -55,15 +55,19 @@ __all__ = [
     "UnsupportedAction",
 ]
 
+# Get user's home directory
 USER_HOME = os.path.expanduser("~")
+
+# Determine PYLINT_HOME location following XDG Base Directory Specification
 if "PYLINTHOME" in os.environ:
+    # Support legacy PYLINTHOME environment variable for backward compatibility
     PYLINT_HOME = os.environ["PYLINTHOME"]
     if USER_HOME == "~":
         USER_HOME = os.path.dirname(PYLINT_HOME)
-elif USER_HOME == "~":
-    PYLINT_HOME = ".pylint.d"
 else:
-    PYLINT_HOME = os.path.join(USER_HOME, ".pylint.d")
+    # Use XDG_DATA_HOME if set, otherwise default to ~/.local/share
+    xdg_data_home = os.environ.get("XDG_DATA_HOME", os.path.join(USER_HOME, ".local", "share"))
+    PYLINT_HOME = os.path.join(xdg_data_home, "pylint")
 
 
 def _get_pdata_path(base_name, recurs):
@@ -83,7 +87,7 @@ def load_results(base):
 def save_results(results, base):
     if not os.path.exists(PYLINT_HOME):
         try:
-            os.mkdir(PYLINT_HOME)
+            os.makedirs(PYLINT_HOME, exist_ok=True)
         except OSError:
             print("Unable to create directory %s" % PYLINT_HOME, file=sys.stderr)
     data_file = _get_pdata_path(base, 1)
@@ -110,8 +114,8 @@ ENV_HELP = (
 The following environment variables are used:
     * PYLINTHOME
     Path to the directory where persistent data for the run will be stored. If
-not found, it defaults to ~/.pylint.d/ or .pylint.d (in the current working
-directory).
+not found, it defaults to $XDG_DATA_HOME/pylint or $HOME/.local/share/pylint
+following the XDG Base Directory Specification.
     * PYLINTRC
     Path to the configuration file. See the documentation for the method used
 to search for configuration file.
diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..d6b1252a4
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,15 @@
+import os
+import pylint.config
+
+print(f"PYLINT_HOME is set to: {pylint.config.PYLINT_HOME}")
+
+# Try to save some results
+pylint.config.save_results({"test": "data"}, "test_base")
+
+# Check if file was created
+stats_file = os.path.join(pylint.config.PYLINT_HOME, "test_base1.stats")
+print(f"Stats file exists at {stats_file}: {os.path.exists(stats_file)}")
+
+# Try to load results
+results = pylint.config.load_results("test_base")
+print(f"Loaded results: {results}")
\ No newline at end of file
