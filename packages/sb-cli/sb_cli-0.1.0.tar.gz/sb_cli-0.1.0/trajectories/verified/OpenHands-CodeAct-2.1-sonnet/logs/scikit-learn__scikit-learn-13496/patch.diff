diff --git a/reproduce.py b/reproduce.py
new file mode 100644
index 000000000..c35618897
--- /dev/null
+++ b/reproduce.py
@@ -0,0 +1,38 @@
+import numpy as np
+from sklearn.ensemble import IsolationForest
+
+# Generate sample data
+rng = np.random.RandomState(42)
+X = rng.randn(100, 2)
+
+# Test 1: Using warm_start=False (default)
+print("Test 1: Using warm_start=False (default)")
+clf = IsolationForest(n_estimators=10, random_state=42)
+clf.fit(X)
+print(f"Initial number of trees: {len(clf.estimators_)}")
+clf.n_estimators = 20
+clf.fit(X)
+print(f"Number of trees after second fit: {len(clf.estimators_)}")
+
+# Test 2: Using warm_start=True from constructor
+print("\nTest 2: Using warm_start=True from constructor")
+clf = IsolationForest(n_estimators=10, random_state=42, warm_start=True)
+clf.fit(X)
+print(f"Initial number of trees: {len(clf.estimators_)}")
+clf.n_estimators = 20
+clf.fit(X)
+print(f"Number of trees after warm_start: {len(clf.estimators_)}")
+
+# Test 3: Edge case - setting n_estimators lower than current
+print("\nTest 3: Edge case - setting n_estimators lower than current")
+try:
+    clf.n_estimators = 5
+    clf.fit(X)
+except ValueError as e:
+    print(f"Got expected ValueError: {str(e)}")
+
+# Test 4: Edge case - setting same n_estimators
+print("\nTest 4: Edge case - setting same n_estimators")
+clf.n_estimators = 20
+clf.fit(X)
+print("Fit completed with warning about no new trees")
\ No newline at end of file
diff --git a/sklearn/ensemble/iforest.py b/sklearn/ensemble/iforest.py
index 8a1bd3625..589171f73 100644
--- a/sklearn/ensemble/iforest.py
+++ b/sklearn/ensemble/iforest.py
@@ -120,6 +120,10 @@ class IsolationForest(BaseBagging, OutlierMixin):
     verbose : int, optional (default=0)
         Controls the verbosity of the tree building process.
 
+    warm_start : bool, optional (default=False)
+        When set to ``True``, reuse the solution of the previous call to fit
+        and add more estimators to the ensemble, otherwise, just fit a whole
+        new forest. See :term:`the Glossary <warm_start>`.
 
     Attributes
     ----------
@@ -173,7 +177,8 @@ class IsolationForest(BaseBagging, OutlierMixin):
                  n_jobs=None,
                  behaviour='old',
                  random_state=None,
-                 verbose=0):
+                 verbose=0,
+                 warm_start=False):
         super().__init__(
             base_estimator=ExtraTreeRegressor(
                 max_features=1,
@@ -185,6 +190,7 @@ class IsolationForest(BaseBagging, OutlierMixin):
             n_estimators=n_estimators,
             max_samples=max_samples,
             max_features=max_features,
+            warm_start=warm_start,
             n_jobs=n_jobs,
             random_state=random_state,
             verbose=verbose)
