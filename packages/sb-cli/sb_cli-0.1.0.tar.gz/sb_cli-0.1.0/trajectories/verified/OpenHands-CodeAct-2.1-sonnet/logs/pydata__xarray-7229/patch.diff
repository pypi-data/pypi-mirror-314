diff --git a/reproduce_error.py b/reproduce_error.py
new file mode 100644
index 00000000..d3f513d9
--- /dev/null
+++ b/reproduce_error.py
@@ -0,0 +1,15 @@
+import xarray as xr
+
+# Load the dataset
+ds = xr.tutorial.load_dataset("air_temperature")
+
+# Print original time attributes
+print("Original time attributes:")
+print(ds.time.attrs)
+
+# Apply xr.where with keep_attrs=True
+result = xr.where(True, ds.air, ds.air, keep_attrs=True)
+
+# Print new time attributes
+print("\nNew time attributes (after xr.where):")
+print(result.time.attrs)
\ No newline at end of file
diff --git a/test_edge_cases.py b/test_edge_cases.py
new file mode 100644
index 00000000..e34aa74d
--- /dev/null
+++ b/test_edge_cases.py
@@ -0,0 +1,36 @@
+import xarray as xr
+import numpy as np
+
+# Load the dataset
+ds = xr.tutorial.load_dataset("air_temperature")
+
+# Test case 1: Different coordinate attributes between x and y
+ds2 = ds.copy()
+ds2.time.attrs = {'standard_name': 'time_modified', 'long_name': 'Modified Time'}
+print("Test case 1: Different coordinate attributes between x and y")
+print("Original time attributes:")
+print(ds.time.attrs)
+result = xr.where(True, ds.air, ds2.air, keep_attrs=True)
+print("\nNew time attributes (after xr.where):")
+print(result.time.attrs)
+
+# Test case 2: No attributes in coordinates
+ds3 = ds.copy()
+ds3.time.attrs = {}
+print("\nTest case 2: No attributes in coordinates")
+print("Original time attributes:")
+print(ds3.time.attrs)
+result = xr.where(True, ds3.air, ds3.air, keep_attrs=True)
+print("\nNew time attributes (after xr.where):")
+print(result.time.attrs)
+
+# Test case 3: Multiple coordinates with different attributes
+ds4 = ds.copy()
+ds4['lat'] = ds4.lat.copy()
+ds4.lat.attrs = {'standard_name': 'latitude', 'units': 'degrees_north'}
+print("\nTest case 3: Multiple coordinates with different attributes")
+print("Original lat attributes:")
+print(ds4.lat.attrs)
+result = xr.where(True, ds4.air, ds4.air, keep_attrs=True)
+print("\nNew lat attributes (after xr.where):")
+print(result.lat.attrs)
\ No newline at end of file
diff --git a/xarray/core/computation.py b/xarray/core/computation.py
index 3f7e8f74..d06bd21f 100644
--- a/xarray/core/computation.py
+++ b/xarray/core/computation.py
@@ -307,8 +307,10 @@ def apply_dataarray_vfunc(
     else:
         first_obj = _first_of_type(args, DataArray)
         name = first_obj.name
+    # For coordinates, we want to preserve their original attributes
+    # from the first object
     result_coords, result_indexes = build_output_coords_and_indexes(
-        args, signature, exclude_dims, combine_attrs=keep_attrs
+        args, signature, exclude_dims, combine_attrs="override"
     )
 
     data_vars = [getattr(a, "variable", a) for a in args]
@@ -1858,8 +1860,7 @@ def where(cond, x, y, keep_attrs=None):
     if keep_attrs is None:
         keep_attrs = _get_keep_attrs(default=False)
     if keep_attrs is True:
-        # keep the attributes of x, the second parameter, by default to
-        # be consistent with the `where` method of `DataArray` and `Dataset`
+        # For variables, use x's attributes
         keep_attrs = lambda attrs, context: getattr(x, "attrs", {})
 
     # alignment for three arguments is complicated, so don't support it yet
diff --git a/xarray/core/merge.py b/xarray/core/merge.py
index 859b3aef..8281b868 100644
--- a/xarray/core/merge.py
+++ b/xarray/core/merge.py
@@ -417,6 +417,17 @@ def merge_coordinates_without_align(
 
     # TODO: indexes should probably be filtered in collected elements
     # before merging them
+    
+    # For coordinates, we want to preserve their original attributes
+    if combine_attrs == "override":
+        # Create a new combine_attrs function that preserves coordinate attributes
+        def preserve_coord_attrs(variable_attrs, context):
+            if len(variable_attrs) > 0:
+                return dict(variable_attrs[0])
+            return {}
+        
+        combine_attrs = preserve_coord_attrs
+    
     merged_coords, merged_indexes = merge_collected(
         filtered, prioritized, combine_attrs=combine_attrs
     )
