[tool.poetry]
name = "bas-air-unit-network-dataset"
version = "0.5.1"
description = "Utility to process routes and waypoints used by the British Antarctic Survey (BAS) Air Unit"
authors = ["Felix Fennell <felnne@bas.ac.uk>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/antarctica/bas-air-unit-network-dataset"
repository = "https://github.com/antarctica/bas-air-unit-network-dataset"
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
]
include = ["src/bas_air_unit_network_dataset/exporters/fpl/schemas/garmin/FlightPlanv1.xsd"]

[tool.poetry.dependencies]
python = "^3.9"
ulid-py = "^1.1.0"
Shapely = "^2.0.6"
Fiona = "^1.10.1"
gpxpy = "^1.6.2"
lxml = "^5.3"
jinja2 = "^3.1.4"
weasyprint = "^63.0"
python-slugify = "^8.0.4"
importlib-resources = "^6.4.5"

[tool.poetry.group.linting.dependencies]
ruff = "^0.7.4"
safety = "^3.2.11"

[tool.ruff]
src = ["src"]
line-length = 120
target-version = "py39"
exclude = ["*/old/*"]

[tool.ruff.lint]
select = ['A', 'ANN', 'B', 'B9', 'C90', 'C4', 'D', 'DTZ', 'E', 'EM', 'ERA', 'F', 'FA', 'I', 'N', 'PT', 'PTH', 'RET', 'RUF', 'S', 'SIM', 'TD', 'TRY', 'UP', 'W']
#   A | builtins (variables named after builtin names)
# ANN | annotations (type hints)
#   B | bug-bear (bad code)
#  B9 | bug-bear opinionated (additional bad code)
# C90 | mccabe (code complexity)
#  C4 | comprehensions (list/dict/set comprehensions)
#   D | pydocstyle (docstring)
# DTZ | datetimez (date/time)
#   E | pycodestyle errors (PEP8)
#  EM | errmsg (exceptions)
# ERA | eraticate (comments)
#   F | pyflakes (invalid/bad code)
#  FA | uture-annotations (type hints)
#   I | isort (import ordering)
#   N | pep8-naming (PEP8)
#  PT | pytest-style (tests)
# PTH | use-pathlib (old syntax)
# RET | return (return statements)
# RUF | ruff (other)
#   S | bandit (static security)
# SIM | simplicity (code complexity)
#  TD | todos (comments)
# TRY | tryceratops (exceptions)
#  UP | pyupgrade (old syntax)
#   W | pycodestyle warnings (PEP8)

ignore = ['ANN101', 'D100', 'D104', 'D105', 'D107', 'D203', 'D212', 'D402', 'E501', 'TD002', 'UP007']
# ANN101 | for avoding missing 'Self' type hint (not available in Python 3.9)
#   D100 | for avoding module level docstrings
#   D104 | for avoding package level docstrings
#   D105 | for avoding missing docstrings in magic methods (which are often self-explanatory)
#   D107 | for avoding missing docstrings in __init__ methods (which are often self-explanatory)
#   D203 | for requring blank line before classes (which looks silly)
#   D212 | for docstring requring multi-line comments to start on first line (which looks silly)
#   D402 | for docstring that can't resemble their signatures (despite them being completely different)
#   E501 | for bug-bear compatibility (as B905 overrides line length checks)
#  TD002 | for allowing TODOs without an author (as an issue should assign ownership)
#  UP007 | for requring `Optional[T]` to be written as `T | None` which isn't supported by Python 3.9

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
