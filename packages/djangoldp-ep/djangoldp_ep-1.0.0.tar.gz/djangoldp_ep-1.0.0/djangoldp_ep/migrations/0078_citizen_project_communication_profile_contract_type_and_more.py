# Generated by Django 4.2.11 on 2024-03-14 12:15

import django.db.models.deletion
import djangoldp.fields
import djangoldp.permissions
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("djangoldp_ep", "0077_alter_discount_options"),
    ]

    operations = [
        migrations.CreateModel(
            name="Citizen_Project",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "short_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Courte description"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Ville"
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Adresse"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Département"
                    ),
                ),
                (
                    "action_territory",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Territoire d'action du projet",
                    ),
                ),
                (
                    "picture",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Photo"
                    ),
                ),
                (
                    "video",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Vidéo"
                    ),
                ),
                (
                    "website",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Site"
                    ),
                ),
                (
                    "facebook_link",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Facebook"
                    ),
                ),
                (
                    "linkedin_link",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="LinkedIn"
                    ),
                ),
                (
                    "twitter_link",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Twitter"
                    ),
                ),
                (
                    "instagram_link",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Instragram"
                    ),
                ),
                (
                    "contact_picture",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Contact: Photo",
                    ),
                ),
                (
                    "contact_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Contact: Nom",
                    ),
                ),
                (
                    "contact_first_name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Contact: Prénom",
                    ),
                ),
                (
                    "contact_email",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Contact: Email",
                    ),
                ),
                (
                    "contact_phone",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Contact: Téléphone",
                    ),
                ),
                (
                    "contact_visibility",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Visibilité du contact",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("draft", "Brouillon"),
                            ("validated", "Validé"),
                            ("published", "Publié"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Etat d'avancement du projet",
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=25,
                        max_digits=30,
                        null=True,
                        verbose_name="Lattitude",
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=25,
                        max_digits=30,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "production_tracking_url",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="URL monitoring du site de production",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:citizen_project",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "nested_fields": ["partnered_by", "earned_distinctions"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Communication_Profile",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "is_public",
                    models.BooleanField(
                        blank=True, default=False, null=True, verbose_name="Publique?"
                    ),
                ),
                (
                    "is_featured",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Mis en avant?",
                    ),
                ),
                (
                    "crowdfunding_url",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="URL Crowdfunding",
                    ),
                ),
                (
                    "long_description",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Description générale du projet",
                    ),
                ),
                (
                    "star_initiative_briefing",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Briefing projet star",
                    ),
                ),
                (
                    "stakes_description",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Enjeux"
                    ),
                ),
                (
                    "replicability",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("easy", "Facilement"),
                            ("hard", "Difficilement"),
                            ("no", "Non"),
                            ("unknown", "Je ne sais pas"),
                        ],
                        max_length=50,
                        null=True,
                        verbose_name="Réplicabilité",
                    ),
                ),
                (
                    "additional_informations",
                    models.CharField(
                        blank=True,
                        max_length=250,
                        null=True,
                        verbose_name="Infos diverses",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:communication_profile",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "nested_fields": ["testimonies"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Contract_Type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Type"
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:contract_type",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Energy_Buyer",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Nom"
                    ),
                ),
                (
                    "contract_type",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contract",
                        to="djangoldp_ep.contract_type",
                        verbose_name="Type de contrat",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:energy_buyer",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Energy_Type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Nom"
                    ),
                ),
                (
                    "installed_capacity_reference_unit",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "yearly_proudction_ref_unit",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "capacity_factor_ref_unit",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:energy_type",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Partner",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partner_of",
                        to="djangoldp_ep.actor",
                        verbose_name="Acteur",
                    ),
                ),
                (
                    "citizen_project",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="partnered_by",
                        to="djangoldp_ep.citizen_project",
                        verbose_name="Projet Citoyen",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:partner",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "nested_fields": ["types"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Shareholder",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "structure_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="Nom de la Structure"
                    ),
                ),
                (
                    "capital_amount",
                    models.TextField(
                        blank=True, null=True, verbose_name="Montant capital"
                    ),
                ),
                (
                    "capital_percentage",
                    models.TextField(
                        blank=True, null=True, verbose_name="Pourcentage capital"
                    ),
                ),
                (
                    "other_funds_amount",
                    models.TextField(
                        blank=True, null=True, verbose_name="Montant autres fonds"
                    ),
                ),
                (
                    "other_funds_percentage",
                    models.TextField(
                        blank=True, null=True, verbose_name="Pourcentage autres fonds"
                    ),
                ),
                (
                    "is_relay_investment",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Est un investissement relais?",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:shareholder",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "serializer_fields": [
                    "structure_name",
                    "capital_amount",
                    "capital_percentage",
                    "other_funds_amount",
                    "other_funds_percentage",
                    "is_relay_investment",
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Testimony",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "author_name",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Auteur"
                    ),
                ),
                (
                    "content",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Contenu"
                    ),
                ),
                (
                    "communication_profile",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="testimonies",
                        to="djangoldp_ep.communication_profile",
                        verbose_name="Témoignage",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:testimony",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Production_Site",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Name"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "reference_unit",
                    models.TextField(
                        blank=True, null=True, verbose_name="Unité de référence"
                    ),
                ),
                (
                    "progress_status",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "total_development_budget",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "total_investment_budget",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "yearly_turnover",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Adresse"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Ville"
                    ),
                ),
                (
                    "department",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Département"
                    ),
                ),
                (
                    "lat",
                    models.DecimalField(
                        blank=True,
                        decimal_places=25,
                        max_digits=30,
                        null=True,
                        verbose_name="Lattitude",
                    ),
                ),
                (
                    "lng",
                    models.DecimalField(
                        blank=True,
                        decimal_places=25,
                        max_digits=30,
                        null=True,
                        verbose_name="Longitude",
                    ),
                ),
                (
                    "expected_commissionning_yearl",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Année de mise en service prévue",
                    ),
                ),
                (
                    "effective_commissionning_yearl",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Année de mise en service effective",
                    ),
                ),
                (
                    "picture",
                    models.CharField(
                        blank=True, max_length=250, null=True, verbose_name="Photo"
                    ),
                ),
                (
                    "investment_capacity_ratio",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Ratio investissement par puissance €/kW",
                    ),
                ),
                (
                    "grants_earned_amount",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Montant des subventions reçues pour le Site de production (en €)",
                    ),
                ),
                (
                    "production_tracking_url",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="URL monitoring du site de production",
                    ),
                ),
                (
                    "citizen_project",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="production_sites",
                        to="djangoldp_ep.citizen_project",
                        verbose_name="Projet citoyen",
                    ),
                ),
                (
                    "region",
                    models.ForeignKey(
                        blank=True,
                        max_length=50,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="production_sites",
                        to="djangoldp_ep.region",
                        verbose_name="Région",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:production_site",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "nested_fields": ["partner_links"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Partner_Type",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Type"
                    ),
                ),
                (
                    "partners",
                    models.ManyToManyField(
                        blank=True,
                        related_name="types",
                        to="djangoldp_ep.partner",
                        verbose_name="Types de Partenariat",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:partner_type",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "serializer_fields": ["@id", "name"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Partner_Link",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Nom du lien de partenariat",
                    ),
                ),
                (
                    "production_sites",
                    models.ManyToManyField(
                        blank=True,
                        related_name="partner_links",
                        to="djangoldp_ep.production_site",
                        verbose_name="Lien Partnenaire",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:partner_link",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "serializer_fields": ["@id", "name"],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Energy_Production",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "energy_contract",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Contrat Energie",
                    ),
                ),
                (
                    "reference_unit",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Unité de référence",
                    ),
                ),
                (
                    "estimated_capacity",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Capacité estimée",
                    ),
                ),
                (
                    "installed_capacity",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Capacité installée",
                    ),
                ),
                (
                    "consumption_equivalence",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Equivalence en consommation",
                    ),
                ),
                (
                    "yearly_production",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Production annuelle",
                    ),
                ),
                (
                    "estimated_yearly_production",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Production annuelle estimée",
                    ),
                ),
                (
                    "technology_used",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Technologie utilisée",
                    ),
                ),
                (
                    "estimated_injection_capacity",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="Capacité d'injection estimée",
                    ),
                ),
                (
                    "energy_buyer",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="energy_bought",
                        to="djangoldp_ep.energy_buyer",
                        verbose_name="Acheteur d'énergie",
                    ),
                ),
                (
                    "energy_type",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="energy_production",
                        to="djangoldp_ep.energy_type",
                        verbose_name="Type d'énergie",
                    ),
                ),
                (
                    "production_site",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="energy_productions",
                        to="djangoldp_ep.production_site",
                        verbose_name="Site de production",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:energy_production",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "depth": 0,
            },
        ),
        migrations.CreateModel(
            name="Earned_Distinction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="Distinction"
                    ),
                ),
                (
                    "citizen_projects",
                    models.ManyToManyField(
                        blank=True,
                        related_name="earned_distinctions",
                        to="djangoldp_ep.citizen_project",
                        verbose_name="Projets Distingués",
                    ),
                ),
                (
                    "production_sites",
                    models.ManyToManyField(
                        blank=True,
                        related_name="earned_distinctions",
                        to="djangoldp_ep.production_site",
                        verbose_name="Sites de Production Distingués",
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:distinction",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "serializer_fields": ["@id", "name"],
                "depth": 0,
            },
        ),
        migrations.AddField(
            model_name="citizen_project",
            name="communication_profile",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="citizen_project",
                to="djangoldp_ep.communication_profile",
                verbose_name="Profil de communication",
            ),
        ),
        migrations.AddField(
            model_name="citizen_project",
            name="founder",
            field=models.ForeignKey(
                blank=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="founded_projects",
                to="djangoldp_ep.actor",
                verbose_name="Fondateur",
            ),
        ),
        migrations.AddField(
            model_name="citizen_project",
            name="region",
            field=models.ForeignKey(
                blank=True,
                max_length=50,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="projects",
                to="djangoldp_ep.region",
                verbose_name="Région",
            ),
        ),
        migrations.CreateModel(
            name="Capital_Distribution",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "urlid",
                    djangoldp.fields.LDPUrlField(
                        blank=True, db_index=True, null=True, unique=True
                    ),
                ),
                (
                    "is_backlink",
                    models.BooleanField(
                        default=False,
                        help_text="set automatically to indicate the Model is a backlink",
                    ),
                ),
                (
                    "allow_create_backlink",
                    models.BooleanField(
                        default=True,
                        help_text="set to False to disable backlink creation after Model save",
                    ),
                ),
                (
                    "individuals_count",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "individuals_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_funds_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_funds_residents",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_funds_excluding_residents",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_ess_orgs_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_ess_orgs_other_funds",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "communities_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "neighboring_communities_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_private_orgs_capital",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "other_private_orgs_other_funds",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=30, null=True
                    ),
                ),
                (
                    "actor",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="capital_distributions",
                        to="djangoldp_ep.actor",
                        verbose_name="Acteur",
                    ),
                ),
                (
                    "shareholder",
                    models.ForeignKey(
                        blank=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="capital_distribution",
                        to="djangoldp_ep.shareholder",
                        verbose_name="Shareholder",
                    ),
                ),
            ],
            options={
                "ordering": ["pk"],
                "abstract": False,
                "default_permissions": {"change", "delete", "control", "view", "add"},
                "rdf_type": "energiepartagee:capital_distribution",
                "permission_classes": [
                    djangoldp.permissions.AuthenticatedOnly,
                    djangoldp.permissions.ReadOnly,
                ],
                "serializer_fields": [
                    "shareholder",
                    "individuals_count",
                    "individuals_capital",
                    "other_funds_capital",
                    "other_funds_residents",
                    "other_funds_excluding_residents",
                    "other_ess_orgs_capital",
                    "other_ess_orgs_other_funds",
                    "communities_capital",
                    "neighboring_communities_capital",
                    "other_private_orgs_capital",
                    "other_private_orgs_other_funds",
                ],
                "nested_fields": ["shareholder"],
                "depth": 0,
            },
        ),
    ]
