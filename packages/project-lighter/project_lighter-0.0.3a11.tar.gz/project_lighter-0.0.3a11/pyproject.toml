# Poetry pyproject.toml: https://python-poetry.org/docs/pyproject/
[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
lighter = "lighter.engine.runner:cli"

[tool.poetry]
name = "project-lighter"
version = "0.0.3a11"
description = "YAML-based automated rapid prototyping framework for deep learning experiments"
readme = "README.md"
authors = ["Ibrahim Hadzic <ibrahimhadzic45@gmail.com>" ,
            "Suraj Pai <b.pai@maastrichtuniversity.nl>", 
            "Keno Bressem <kbressem@bwh.harvard.edu>"]
license = "MIT"
repository = "https://github.com/lighter/lighter"
homepage = "https://github.com/lighter/lighter"

# Keywords description https://python-poetry.org/docs/pyproject/#keywords
keywords = []  #! Update me
packages = [
    { include = "lighter" },
]

# Pypi classifiers: https://pypi.org/classifiers/
classifiers = [  #! Update me
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]



[tool.poetry.dependencies]
python = "^3.10"
torch = "^2.1.2"
pandas = "^1.5.3"
numpy = "< 2.0.0"
pytorch-lightning = "^2.1.3"
pydantic = "^2.8.2"
fire = "^0.5.0"
loguru = "^0.6.0"
torchmetrics = "^1.2.0"
tensorboard = "^2.11.2"
requests = "^2.31.0"
monai = "^1.3.0"
rich = "^13.7.0"
torchvision = "^0.17.0"

[tool.poetry.group.safety]
optional = true

[tool.poetry.group.style]
optional = true

[tool.poetry.group.tests]
optional = true

[tool.poetry.group.safety.dependencies]
bandit = "^1.7.5"
safety = "^2.3.5"

[tool.poetry.group.style.dependencies]
black = {version = ">=23.1,<25.0", allow-prereleases = true}
isort = {extras = ["colors"], version = "^5.11.4"}
mypy = "^0.991"
mypy-extensions = "^0.4.3"
pre-commit = "^2.21.0"
pydocstyle = "^6.3.0"
pylint = "^2.15.10"
pyupgrade = "^3.3.1"

[tool.poetry.group.tests.dependencies]
pytest = "^7.4.0"
pytest-html = "^3.2.0"
pytest-cov = "^4.0.0"
coverage = "^7.0.5"
coverage-badge = "^1.1.0"
av = "12.0.0"  # required to test video writing with torchvision
itk = "^5.3.0"

[tool.poetry.group.dev.dependencies]
typing-extensions = "^4.4.0"
aiohttp = "^3.8.3"


[tool.black]
# https://github.com/psf/black
target-version = ["py310"]
line-length = 127
color = true

exclude = '''
/(
    \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | env
    | venv
)/
'''

[tool.isort]
# https://github.com/timothycrosley/isort/
py_version = 39
line_length = 127

known_typing = ["typing", "types", "typing_extensions", "mypy", "mypy_extensions"]
sections = ["FUTURE", "TYPING", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
include_trailing_comma = true
profile = "black"
multi_line_output = 3
indent = 4
color_output = true

[tool.mypy]
# https://mypy.readthedocs.io/en/latest/config_file.html#using-a-pyproject-toml-file
python_version = 3.10
pretty = true
show_traceback = true
color_output = true

allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
# https://docs.pytest.org/en/6.2.x/customize.html#pyproject-toml
# Directories that are not visited by pytest collector:
norecursedirs =["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]

# Extra options:
addopts = [
  "--strict-markers",
  "--tb=short",
  "--doctest-modules",
  "--doctest-continue-on-failure",
]
# Markers to categorize tests
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "serial",
]


[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "lighter"

[coverage.run]
branch = true
cov-report = "term-missing"

[coverage.report]
fail_under = 50
show_missing = true


[tool.pylint.'MESSAGES CONTROL']
max-line-length = 127
disable = """
    too-many-arguments,
    no-else-return,
"""
generated-members = "torch.*"

[tool.pylint.master]
fail-under=8

[tool.poetry_bumpversion.file."lighter/__init__.py"]
