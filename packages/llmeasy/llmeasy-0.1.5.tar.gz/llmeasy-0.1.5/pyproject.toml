[tool.poetry]
name = "llmeasy"
version = "0.1.5"
description = "Easy to use LLM interface"
authors = ["Kevin Wong <kevinchwong@gmail.com>"]
license = "Apache License 2.0"
readme = "README.md"
packages = [{include = "llmeasy"}]

[tool.poetry.dependencies]
python = "^3.9"
openai = "^1.12.0"
anthropic = "^0.18.1"
google-generativeai = "^0.3.2"
mistralai = "^0.0.12"
python-dotenv = "^1.0.1"
aiohttp = "^3.9.3"
typing-extensions = "^4.9.0"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-asyncio = "^0.23.5"
pytest-cov = "^4.1.0"
pytest-timeout = "^2.2.0"
pytest-xdist = "^3.5.0"
black = "^24.1.1"
isort = "^5.13.2"
mypy = "^1.8.0"
ruff = "^0.2.1"
coverage = "^7.4.1"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running"
]
filterwarnings = [
    "ignore::DeprecationWarning:google._upb._message",
    "ignore::DeprecationWarning:pkg_resources",
]

[tool.coverage.run]
source = ["llmeasy"]
omit = [
    "tests/*",
    "**/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.black]
line-length = 100
target-version = ['py39']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.ruff]
line-length = 100
target-version = "py39"
select = ["E", "F", "B", "I"]
ignore = ["E501"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

