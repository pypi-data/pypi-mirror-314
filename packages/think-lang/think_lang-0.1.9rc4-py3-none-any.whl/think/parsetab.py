
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSleftTIMESDIVIDEleftPLUSMINUSleftGREATERLESSGREATER_EQUALSLESS_EQUALSEQUALS_EQUALSNOT_EQUALSBOOL COLON COMMA DECIDE DIVIDE ELIF ELSE END ENUMERATE EQUALS EQUALS_EQUALS FLOAT FOR GREATER GREATER_EQUALS IDENTIFIER IF IN LBRACE LBRACKET LESS LESS_EQUALS LPAREN MINUS NOT_EQUALS NUMBER OBJECTIVE PLUS RANGE RBRACE RBRACKET RETURN RPAREN RUN STEP STRING SUBTASK TASK THEN TIMES UNDERSCOREprogram : objective task_list run_list\nobjective : OBJECTIVE STRING\n\ntask_list : task\n        | task task_list\n\ntask : TASK STRING COLON step_or_subtask_list\n\nstep_or_subtask_list : step\n                    | subtask\n                    | step step_or_subtask_list\n                    | subtask step_or_subtask_list\n\nstep : STEP STRING COLON statement_list\n\nsubtask : SUBTASK STRING COLON statement_list\n\nstatement : simple_statement\n        | compound_statement\n\nsimple_statement : assignment\n                | function_call\n                | return_statement\n\ncompound_statement : decide_statement\n                | for_statement\n\nstatement_list : statement\n            | statement statement_list\n            | empty\n\nreturn_statement : RETURN expression\n\nempty :\n\ndecide_statement : DECIDE COLON condition_list \n\ncondition_list : if_condition\n            | if_condition else_if_list\n            | if_condition else_if_list else_condition\n            | if_condition else_condition\n\nelse_if_list : else_if_condition\n            | else_if_condition else_if_list\n\nif_condition : IF expression THEN COLON statement_list \n\nelse_if_condition : ELIF expression THEN COLON statement_list\n\nelse_condition : ELSE COLON statement_list\n\nfor_statement : FOR IDENTIFIER IN iterable COLON loop_body END\n            | FOR IDENTIFIER COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END\n            | FOR UNDERSCORE COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END\n            | FOR IDENTIFIER IN RANGE LPAREN expression RPAREN COLON loop_body END\n\nloop_body : statement\n        | statement loop_body\n\niterable : IDENTIFIER\n        | RANGE LPAREN expression RPAREN\n        | ENUMERATE LPAREN IDENTIFIER RPAREN\nexpression : expression LBRACKET expression RBRACKET\nassignment : IDENTIFIER EQUALS expression\n\nexpression : arithmetic_expr\n            | comparison_expr\n            | LPAREN expression RPAREN\n\nprimary_expr : IDENTIFIER\n             | NUMBER\n            | STRING\n            | BOOL\n            | FLOAT\n            | list\n            | function_call\n            | LPAREN expression RPAREN\n            | dict_literal\n\nliteral : number\n        | STRING\n        | BOOL\n        | list\n        | dict_literal\n\nnumber : NUMBER\n        | FLOAT\n\narray_access : primary_expr LBRACKET expression RBRACKET\n\narithmetic_expr : term\n            | arithmetic_expr PLUS term\n            | arithmetic_expr MINUS term\n\n\ncomparison_expr : arithmetic_expr GREATER arithmetic_expr\n            | arithmetic_expr LESS arithmetic_expr\n            | arithmetic_expr EQUALS_EQUALS arithmetic_expr\n            | arithmetic_expr GREATER_EQUALS arithmetic_expr\n            | arithmetic_expr LESS_EQUALS arithmetic_expr\n            | arithmetic_expr NOT_EQUALS arithmetic_expr\n\nterm : factor\n     | term TIMES factor\n     | term DIVIDE factor\n\nfactor : primary_expr\n       | MINUS factor %prec UMINUS\n\nnumeric_literal : NUMBER\n            | FLOAT\n            | MINUS NUMBER\n            | MINUS FLOAT\n\ndict_literal : LBRACE dict_entries RBRACE\n    | LBRACE RBRACE\n\ndict_entries : dict_entry\n    | dict_entry COMMA dict_entries\n\ndict_entry : expression COLON expression\n\nindex_expression : expression LBRACKET expression RBRACKET\n\nlist : LBRACKET list_items RBRACKET\n    | LBRACKET RBRACKET\n\nlist_items : expression\n        | expression COMMA list_items\n\nfunction_call : IDENTIFIER LPAREN argument_list RPAREN\n            | IDENTIFIER LPAREN RPAREN\n\nargument_list : expression\n            | expression COMMA argument_list\n\nrun_list : run_statement\n        | run_statement run_list\n\nrun_statement : RUN STRING\n'
    
_lr_action_items = {'OBJECTIVE':([0,],[3,]),'$end':([1,8,9,13,14,],[0,-1,-97,-98,-99,]),'TASK':([2,5,7,16,17,18,21,22,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[6,6,-2,-5,-6,-7,-8,-9,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'STRING':([3,6,10,19,20,38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[7,12,14,23,24,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'RUN':([4,5,9,11,14,16,17,18,21,22,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[10,-3,10,-4,-99,-5,-6,-7,-8,-9,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'COLON':([12,23,24,39,47,48,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,90,97,100,102,103,104,105,106,107,108,109,110,111,112,114,120,123,124,130,132,139,146,158,159,167,168,],[15,25,26,63,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,116,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,137,-40,140,-43,-55,147,154,163,-42,170,171,]),'STEP':([15,17,18,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[19,19,19,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'SUBTASK':([15,17,18,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[20,20,20,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'IDENTIFIER':([25,26,28,29,30,31,32,33,34,35,36,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,68,70,72,74,75,76,77,78,79,80,81,83,84,85,86,88,91,92,93,94,95,96,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,121,130,132,135,136,137,140,141,142,145,147,149,154,155,156,160,161,162,163,169,170,171,174,175,],[37,37,37,-21,-12,-13,-14,-15,-16,-17,-18,54,64,-20,54,54,-22,54,-45,-46,54,-65,54,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,54,-44,-94,54,-90,54,54,54,54,54,54,54,54,54,54,-78,54,-84,-24,-25,54,123,127,128,-93,54,-89,54,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,54,54,-26,-28,-29,54,-43,-55,-27,-30,37,37,54,151,-33,37,37,37,-31,-34,164,165,-32,37,-37,37,37,-35,-36,]),'RETURN':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,140,145,147,149,154,155,156,162,163,169,170,171,174,175,],[38,38,38,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,38,38,-33,38,38,38,-31,-34,-32,38,-37,38,38,-35,-36,]),'DECIDE':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,140,145,147,149,154,155,156,162,163,169,170,171,174,175,],[39,39,39,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,39,39,-33,39,39,39,-31,-34,-32,39,-37,39,39,-35,-36,]),'FOR':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,140,145,147,149,154,155,156,162,163,169,170,171,174,175,],[40,40,40,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,40,40,-33,40,40,40,-31,-34,-32,40,-37,40,40,-35,-36,]),'END':([28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,148,149,154,155,156,157,162,166,169,172,173,174,175,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,-25,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,-29,-43,-55,-27,-30,-23,-33,-23,156,-38,-23,-31,-34,-39,-32,169,-37,174,175,-35,-36,]),'ELSE':([28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,120,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,120,-28,-29,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'ELIF':([28,29,30,31,32,33,34,35,36,42,45,47,48,50,52,53,54,55,56,57,58,59,60,61,66,68,72,85,88,91,92,97,100,102,103,104,105,106,107,108,109,110,111,112,114,117,118,119,130,132,135,136,137,145,147,154,155,156,162,169,174,175,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-44,-94,-90,-78,-84,-24,121,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-26,-28,121,-43,-55,-27,-30,-23,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'EQUALS':([37,],[43,]),'LPAREN':([37,38,43,44,46,49,51,54,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,125,126,141,152,153,],[44,49,49,49,49,49,86,44,49,49,86,86,86,86,86,86,86,86,86,86,49,49,49,49,49,49,49,141,142,49,160,161,]),'MINUS':([38,43,44,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,68,70,72,74,75,76,77,78,79,80,81,83,84,85,86,88,93,97,98,100,101,102,103,104,105,106,107,108,109,110,111,112,114,115,116,121,132,141,],[51,51,51,51,75,51,-65,51,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,51,-94,51,-90,51,51,51,51,51,51,51,51,51,51,-78,51,-84,51,-93,51,-89,51,-66,-67,75,75,75,75,75,75,-55,-75,-76,-83,51,51,51,-55,51,]),'NUMBER':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'BOOL':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FLOAT':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LBRACKET':([38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,66,68,69,70,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,121,122,130,132,134,138,141,150,],[46,46,46,70,46,-45,-46,46,-65,46,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,46,70,-94,70,46,-90,70,46,46,46,46,46,46,46,46,70,46,46,-78,46,-84,70,46,-93,46,70,-89,46,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,70,-83,46,46,46,70,-43,-55,70,70,46,70,]),'LBRACE':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'UNDERSCORE':([40,],[65,]),'RPAREN':([44,47,48,50,52,53,54,55,56,57,58,59,60,61,67,68,69,72,82,85,88,97,100,102,103,104,105,106,107,108,109,110,111,112,113,114,129,130,132,150,151,164,165,],[68,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,97,-94,-95,-90,110,-78,-84,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,132,-83,-96,-43,-55,158,159,167,168,]),'RBRACKET':([46,47,48,50,52,53,54,55,56,57,58,59,60,61,68,71,72,73,85,88,97,99,100,102,103,104,105,106,107,108,109,110,111,112,114,130,131,132,],[72,-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,100,-90,-91,-78,-84,-93,130,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-43,-92,-55,]),'COMMA':([47,48,50,52,53,54,55,56,57,58,59,60,61,64,65,68,69,72,73,85,88,89,97,100,102,103,104,105,106,107,108,109,110,111,112,114,130,132,134,],[-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,95,96,-94,98,-90,101,-78,-84,115,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-43,-55,-87,]),'THEN':([47,48,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,104,105,106,107,108,109,110,111,112,114,122,130,132,138,],[-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,139,-43,-55,146,]),'RBRACE':([47,48,50,52,53,54,55,56,57,58,59,60,61,62,68,72,85,87,88,89,97,100,102,103,104,105,106,107,108,109,110,111,112,114,130,132,133,134,],[-45,-46,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,88,-94,-90,-78,114,-84,-85,-93,-89,-66,-67,-68,-69,-70,-71,-72,-73,-47,-75,-76,-83,-43,-55,-86,-87,]),'PLUS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,104,105,106,107,108,109,110,111,112,114,132,],[74,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,74,74,74,74,74,74,-55,-75,-76,-83,-55,]),'GREATER':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[76,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'LESS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[77,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'EQUALS_EQUALS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[78,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'GREATER_EQUALS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[79,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'LESS_EQUALS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[80,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'NOT_EQUALS':([47,50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[81,-65,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,-66,-67,-55,-75,-76,-83,-55,]),'TIMES':([50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[83,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,83,83,-55,-75,-76,-83,-55,]),'DIVIDE':([50,52,53,54,55,56,57,58,59,60,61,68,72,85,88,97,100,102,103,110,111,112,114,132,],[84,-74,-77,-48,-49,-50,-51,-52,-53,-54,-56,-94,-90,-78,-84,-93,-89,84,84,-55,-75,-76,-83,-55,]),'IF':([63,],[93,]),'IN':([64,127,128,],[94,143,144,]),'RANGE':([94,],[125,]),'ENUMERATE':([94,143,144,],[126,152,153,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'objective':([0,],[2,]),'task_list':([2,5,],[4,11,]),'task':([2,5,],[5,5,]),'run_list':([4,9,],[8,13,]),'run_statement':([4,9,],[9,9,]),'step_or_subtask_list':([15,17,18,],[16,21,22,]),'step':([15,17,18,],[17,17,17,]),'subtask':([15,17,18,],[18,18,18,]),'statement_list':([25,26,28,137,147,154,],[27,41,42,145,155,162,]),'statement':([25,26,28,137,140,147,149,154,163,170,171,],[28,28,28,28,149,28,149,28,149,149,149,]),'empty':([25,26,28,137,147,154,],[29,29,29,29,29,29,]),'simple_statement':([25,26,28,137,140,147,149,154,163,170,171,],[30,30,30,30,30,30,30,30,30,30,30,]),'compound_statement':([25,26,28,137,140,147,149,154,163,170,171,],[31,31,31,31,31,31,31,31,31,31,31,]),'assignment':([25,26,28,137,140,147,149,154,163,170,171,],[32,32,32,32,32,32,32,32,32,32,32,]),'function_call':([25,26,28,38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,137,140,141,147,149,154,163,170,171,],[33,33,33,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,33,33,60,33,33,33,33,33,33,]),'return_statement':([25,26,28,137,140,147,149,154,163,170,171,],[34,34,34,34,34,34,34,34,34,34,34,]),'decide_statement':([25,26,28,137,140,147,149,154,163,170,171,],[35,35,35,35,35,35,35,35,35,35,35,]),'for_statement':([25,26,28,137,140,147,149,154,163,170,171,],[36,36,36,36,36,36,36,36,36,36,36,]),'expression':([38,43,44,46,49,62,70,86,93,98,101,115,116,121,141,],[45,66,69,73,82,90,99,113,122,69,73,90,134,138,150,]),'arithmetic_expr':([38,43,44,46,49,62,70,76,77,78,79,80,81,86,93,98,101,115,116,121,141,],[47,47,47,47,47,47,47,104,105,106,107,108,109,47,47,47,47,47,47,47,47,]),'comparison_expr':([38,43,44,46,49,62,70,86,93,98,101,115,116,121,141,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'term':([38,43,44,46,49,62,70,74,75,76,77,78,79,80,81,86,93,98,101,115,116,121,141,],[50,50,50,50,50,50,50,102,103,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'factor':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[52,52,52,52,52,85,52,52,52,52,52,52,52,52,52,52,111,112,52,52,52,52,52,52,52,52,]),'primary_expr':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'list':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'dict_literal':([38,43,44,46,49,51,62,70,74,75,76,77,78,79,80,81,83,84,86,93,98,101,115,116,121,141,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'argument_list':([44,98,],[67,129,]),'list_items':([46,101,],[71,131,]),'dict_entries':([62,115,],[87,133,]),'dict_entry':([62,115,],[89,89,]),'condition_list':([63,],[91,]),'if_condition':([63,],[92,]),'else_if_list':([92,119,],[117,136,]),'else_condition':([92,117,],[118,135,]),'else_if_condition':([92,119,],[119,119,]),'iterable':([94,],[124,]),'loop_body':([140,149,163,170,171,],[148,157,166,172,173,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> objective task_list run_list','program',3,'p_program','parser.py',160),
  ('objective -> OBJECTIVE STRING','objective',2,'p_objective','parser.py',165),
  ('task_list -> task','task_list',1,'p_task_list','parser.py',172),
  ('task_list -> task task_list','task_list',2,'p_task_list','parser.py',173),
  ('task -> TASK STRING COLON step_or_subtask_list','task',4,'p_task','parser.py',182),
  ('step_or_subtask_list -> step','step_or_subtask_list',1,'p_step_or_subtask_list','parser.py',189),
  ('step_or_subtask_list -> subtask','step_or_subtask_list',1,'p_step_or_subtask_list','parser.py',190),
  ('step_or_subtask_list -> step step_or_subtask_list','step_or_subtask_list',2,'p_step_or_subtask_list','parser.py',191),
  ('step_or_subtask_list -> subtask step_or_subtask_list','step_or_subtask_list',2,'p_step_or_subtask_list','parser.py',192),
  ('step -> STEP STRING COLON statement_list','step',4,'p_step','parser.py',201),
  ('subtask -> SUBTASK STRING COLON statement_list','subtask',4,'p_subtask','parser.py',208),
  ('statement -> simple_statement','statement',1,'p_statement','parser.py',215),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',216),
  ('simple_statement -> assignment','simple_statement',1,'p_simple_statement','parser.py',222),
  ('simple_statement -> function_call','simple_statement',1,'p_simple_statement','parser.py',223),
  ('simple_statement -> return_statement','simple_statement',1,'p_simple_statement','parser.py',224),
  ('compound_statement -> decide_statement','compound_statement',1,'p_compound_statement','parser.py',230),
  ('compound_statement -> for_statement','compound_statement',1,'p_compound_statement','parser.py',231),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',237),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',238),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',239),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',254),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',260),
  ('decide_statement -> DECIDE COLON condition_list','decide_statement',3,'p_decide_statement','parser.py',266),
  ('condition_list -> if_condition','condition_list',1,'p_condition_list','parser.py',272),
  ('condition_list -> if_condition else_if_list','condition_list',2,'p_condition_list','parser.py',273),
  ('condition_list -> if_condition else_if_list else_condition','condition_list',3,'p_condition_list','parser.py',274),
  ('condition_list -> if_condition else_condition','condition_list',2,'p_condition_list','parser.py',275),
  ('else_if_list -> else_if_condition','else_if_list',1,'p_else_if_list','parser.py',292),
  ('else_if_list -> else_if_condition else_if_list','else_if_list',2,'p_else_if_list','parser.py',293),
  ('if_condition -> IF expression THEN COLON statement_list','if_condition',5,'p_if_condition','parser.py',302),
  ('else_if_condition -> ELIF expression THEN COLON statement_list','else_if_condition',5,'p_else_if_condition','parser.py',312),
  ('else_condition -> ELSE COLON statement_list','else_condition',3,'p_else_condition','parser.py',322),
  ('for_statement -> FOR IDENTIFIER IN iterable COLON loop_body END','for_statement',7,'p_for_statement','parser.py',337),
  ('for_statement -> FOR IDENTIFIER COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END','for_statement',12,'p_for_statement','parser.py',338),
  ('for_statement -> FOR UNDERSCORE COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END','for_statement',12,'p_for_statement','parser.py',339),
  ('for_statement -> FOR IDENTIFIER IN RANGE LPAREN expression RPAREN COLON loop_body END','for_statement',10,'p_for_statement','parser.py',340),
  ('loop_body -> statement','loop_body',1,'p_loop_body','parser.py',370),
  ('loop_body -> statement loop_body','loop_body',2,'p_loop_body','parser.py',371),
  ('iterable -> IDENTIFIER','iterable',1,'p_iterable','parser.py',380),
  ('iterable -> RANGE LPAREN expression RPAREN','iterable',4,'p_iterable','parser.py',381),
  ('iterable -> ENUMERATE LPAREN IDENTIFIER RPAREN','iterable',4,'p_iterable','parser.py',382),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_indexing','parser.py',394),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','parser.py',403),
  ('expression -> arithmetic_expr','expression',1,'p_expression','parser.py',418),
  ('expression -> comparison_expr','expression',1,'p_expression','parser.py',419),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression','parser.py',420),
  ('primary_expr -> IDENTIFIER','primary_expr',1,'p_primary_expr','parser.py',429),
  ('primary_expr -> NUMBER','primary_expr',1,'p_primary_expr','parser.py',430),
  ('primary_expr -> STRING','primary_expr',1,'p_primary_expr','parser.py',431),
  ('primary_expr -> BOOL','primary_expr',1,'p_primary_expr','parser.py',432),
  ('primary_expr -> FLOAT','primary_expr',1,'p_primary_expr','parser.py',433),
  ('primary_expr -> list','primary_expr',1,'p_primary_expr','parser.py',434),
  ('primary_expr -> function_call','primary_expr',1,'p_primary_expr','parser.py',435),
  ('primary_expr -> LPAREN expression RPAREN','primary_expr',3,'p_primary_expr','parser.py',436),
  ('primary_expr -> dict_literal','primary_expr',1,'p_primary_expr','parser.py',437),
  ('literal -> number','literal',1,'p_literal','parser.py',454),
  ('literal -> STRING','literal',1,'p_literal','parser.py',455),
  ('literal -> BOOL','literal',1,'p_literal','parser.py',456),
  ('literal -> list','literal',1,'p_literal','parser.py',457),
  ('literal -> dict_literal','literal',1,'p_literal','parser.py',458),
  ('number -> NUMBER','number',1,'p_number','parser.py',464),
  ('number -> FLOAT','number',1,'p_number','parser.py',465),
  ('array_access -> primary_expr LBRACKET expression RBRACKET','array_access',4,'p_array_access','parser.py',471),
  ('arithmetic_expr -> term','arithmetic_expr',1,'p_arithmetic_expr','parser.py',478),
  ('arithmetic_expr -> arithmetic_expr PLUS term','arithmetic_expr',3,'p_arithmetic_expr','parser.py',479),
  ('arithmetic_expr -> arithmetic_expr MINUS term','arithmetic_expr',3,'p_arithmetic_expr','parser.py',480),
  ('comparison_expr -> arithmetic_expr GREATER arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',493),
  ('comparison_expr -> arithmetic_expr LESS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',494),
  ('comparison_expr -> arithmetic_expr EQUALS_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',495),
  ('comparison_expr -> arithmetic_expr GREATER_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',496),
  ('comparison_expr -> arithmetic_expr LESS_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',497),
  ('comparison_expr -> arithmetic_expr NOT_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',498),
  ('term -> factor','term',1,'p_term','parser.py',504),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',505),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',506),
  ('factor -> primary_expr','factor',1,'p_factor','parser.py',516),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',517),
  ('numeric_literal -> NUMBER','numeric_literal',1,'p_numeric_literal','parser.py',526),
  ('numeric_literal -> FLOAT','numeric_literal',1,'p_numeric_literal','parser.py',527),
  ('numeric_literal -> MINUS NUMBER','numeric_literal',2,'p_numeric_literal','parser.py',528),
  ('numeric_literal -> MINUS FLOAT','numeric_literal',2,'p_numeric_literal','parser.py',529),
  ('dict_literal -> LBRACE dict_entries RBRACE','dict_literal',3,'p_dict_literal','parser.py',538),
  ('dict_literal -> LBRACE RBRACE','dict_literal',2,'p_dict_literal','parser.py',539),
  ('dict_entries -> dict_entry','dict_entries',1,'p_dict_entries','parser.py',548),
  ('dict_entries -> dict_entry COMMA dict_entries','dict_entries',3,'p_dict_entries','parser.py',549),
  ('dict_entry -> expression COLON expression','dict_entry',3,'p_dict_entry','parser.py',558),
  ('index_expression -> expression LBRACKET expression RBRACKET','index_expression',4,'p_index_expression','parser.py',564),
  ('list -> LBRACKET list_items RBRACKET','list',3,'p_list','parser.py',574),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parser.py',575),
  ('list_items -> expression','list_items',1,'p_list_items','parser.py',584),
  ('list_items -> expression COMMA list_items','list_items',3,'p_list_items','parser.py',585),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',594),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',595),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',604),
  ('argument_list -> expression COMMA argument_list','argument_list',3,'p_argument_list','parser.py',605),
  ('run_list -> run_statement','run_list',1,'p_run_list','parser.py',614),
  ('run_list -> run_statement run_list','run_list',2,'p_run_list','parser.py',615),
  ('run_statement -> RUN STRING','run_statement',2,'p_run_statement','parser.py',624),
]
