
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightUMINUSleftTIMESDIVIDEleftPLUSMINUSleftGREATERLESSGREATER_EQUALSLESS_EQUALSEQUALS_EQUALSNOT_EQUALSBOOL COLON COMMA DECIDE DIVIDE ELIF ELSE END ENUMERATE EQUALS EQUALS_EQUALS FLOAT FOR GREATER GREATER_EQUALS IDENTIFIER IF IN LBRACE LBRACKET LESS LESS_EQUALS LPAREN MINUS NOT_EQUALS NUMBER OBJECTIVE PLUS RANGE RBRACE RBRACKET RETURN RPAREN RUN STEP STRING SUBTASK TASK THEN TIMES UNDERSCOREprogram : objective task_list run_list\nobjective : OBJECTIVE STRING\n\ntask_list : task\n        | task task_list\n\ntask : TASK STRING COLON step_or_subtask_list\n\nstep_or_subtask_list : step\n                    | subtask\n                    | step step_or_subtask_list\n                    | subtask step_or_subtask_list\n\nstep : STEP STRING COLON statement_list\n\nsubtask : SUBTASK STRING COLON statement_list\n\nstatement : simple_statement\n        | compound_statement\n\nsimple_statement : assignment\n                | function_call\n                | return_statement\n\ncompound_statement : decide_statement\n                | for_statement\n\nstatement_list : statement\n            | statement statement_list\n            | empty\n\nreturn_statement : RETURN expression\n\nempty :\n\ndecide_statement : DECIDE COLON condition_list \n\ncondition_list : if_condition\n            | if_condition else_if_list\n            | if_condition else_if_list else_condition\n            | if_condition else_condition\n\nelse_if_list : else_if_condition\n            | else_if_condition else_if_list\n\nif_condition : IF expression THEN COLON statement_list \n\nelse_if_condition : ELIF expression THEN COLON statement_list\n\nelse_condition : ELSE COLON statement_list\n\nfor_statement : FOR IDENTIFIER IN iterable COLON loop_body END\n            | FOR IDENTIFIER COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END\n            | FOR UNDERSCORE COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END\n            | FOR IDENTIFIER IN RANGE LPAREN expression RPAREN COLON loop_body END\n\nloop_body : statement\n        | statement loop_body\n\niterable : IDENTIFIER\n        | RANGE LPAREN expression RPAREN\n        | ENUMERATE LPAREN IDENTIFIER RPAREN\nexpression : expression LBRACKET expression RBRACKET\nassignment : IDENTIFIER EQUALS expression\n\nexpression : arithmetic_expr\n            | comparison_expr\n\nprimary_expr : IDENTIFIER\n             | NUMBER\n            | numeric_literal\n            | STRING\n            | BOOL\n            | FLOAT\n            | MINUS FLOAT\n            | list\n            | function_call\n            | LPAREN expression RPAREN\n            | dict_literal\n            | index_expression\n\nliteral : number\n        | STRING\n        | BOOL\n        | list\n        | dict_literal\n\nnumber : NUMBER\n        | FLOAT\n\narray_access : primary_expr LBRACKET expression RBRACKET\n\narithmetic_expr : term\n            | arithmetic_expr PLUS term\n            | arithmetic_expr MINUS term\n\n\ncomparison_expr : arithmetic_expr GREATER arithmetic_expr\n            | arithmetic_expr LESS arithmetic_expr\n            | arithmetic_expr EQUALS_EQUALS arithmetic_expr\n            | arithmetic_expr GREATER_EQUALS arithmetic_expr\n            | arithmetic_expr LESS_EQUALS arithmetic_expr\n            | arithmetic_expr NOT_EQUALS arithmetic_expr\n\nterm : factor\n     | term TIMES factor\n     | term DIVIDE factor\n\nfactor : primary_expr\n       | MINUS factor %prec UMINUS\n\nnumeric_literal : NUMBER\n            | FLOAT\n            | MINUS NUMBER\n            | MINUS FLOAT\n\ndict_literal : LBRACE dict_entries RBRACE\n    | LBRACE RBRACE\n\ndict_entries : dict_entry\n    | dict_entry COMMA dict_entries\n\ndict_entry : expression COLON expression\n\nindex_expression : expression LBRACKET expression RBRACKET\n\nlist : LBRACKET list_items RBRACKET\n    | LBRACKET RBRACKET\n\nlist_items : expression\n        | expression COMMA list_items\n\nfunction_call : IDENTIFIER LPAREN argument_list RPAREN\n            | IDENTIFIER LPAREN RPAREN\n\nargument_list : expression\n            | expression COMMA argument_list\n\nrun_list : run_statement\n        | run_statement run_list\n\nrun_statement : RUN STRING\n'
    
_lr_action_items = {'OBJECTIVE':([0,],[3,]),'$end':([1,8,9,13,14,],[0,-1,-99,-100,-101,]),'TASK':([2,5,7,16,17,18,21,22,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[6,6,-2,-5,-6,-7,-8,-9,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'STRING':([3,6,10,19,20,38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[7,12,14,23,24,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'RUN':([4,5,9,11,14,16,17,18,21,22,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[10,-3,10,-4,-101,-5,-6,-7,-8,-9,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'COLON':([12,23,24,39,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,94,101,104,106,107,108,109,110,111,112,113,114,115,117,118,124,127,128,134,143,149,151,163,164,172,173,],[15,25,26,65,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-80,-52,-48,-86,120,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,141,-40,144,-43,152,-90,159,168,-42,175,176,]),'STEP':([15,17,18,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[19,19,19,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'SUBTASK':([15,17,18,25,26,27,28,29,30,31,32,33,34,35,36,41,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[20,20,20,-23,-23,-10,-19,-21,-12,-13,-14,-15,-16,-17,-18,-11,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'IDENTIFIER':([25,26,28,29,30,31,32,33,34,35,36,38,40,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68,70,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,92,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,139,140,141,144,145,146,149,150,152,154,159,160,161,165,166,167,168,174,175,176,179,180,],[37,37,37,-21,-12,-13,-14,-15,-16,-17,-18,53,66,-20,53,53,-22,53,-45,-46,-67,53,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,53,-57,-58,53,-44,-96,53,-92,53,53,53,53,53,53,53,53,53,53,-80,-52,-48,-86,-24,-25,53,127,131,132,-95,53,-91,53,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,53,-56,-85,53,53,-26,-28,-29,53,-43,-27,-30,37,37,53,156,-90,-33,37,37,37,-31,-34,169,170,-32,37,-37,37,37,-35,-36,]),'RETURN':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,144,149,150,152,154,159,160,161,167,168,174,175,176,179,180,],[38,38,38,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,38,38,-90,-33,38,38,38,-31,-34,-32,38,-37,38,38,-35,-36,]),'DECIDE':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,144,149,150,152,154,159,160,161,167,168,174,175,176,179,180,],[39,39,39,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,39,39,-90,-33,39,39,39,-31,-34,-32,39,-37,39,39,-35,-36,]),'FOR':([25,26,28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,144,149,150,152,154,159,160,161,167,168,174,175,176,179,180,],[40,40,40,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,40,40,-90,-33,40,40,40,-31,-34,-32,40,-37,40,40,-35,-36,]),'END':([28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,153,154,159,160,161,162,167,171,174,177,178,179,180,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,-25,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,-29,-43,-27,-30,-23,-90,-33,-23,161,-38,-23,-31,-34,-39,-32,174,-37,179,180,-35,-36,]),'ELSE':([28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,124,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,124,-28,-29,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'ELIF':([28,29,30,31,32,33,34,35,36,42,45,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,68,70,74,86,87,88,92,95,96,101,104,106,107,108,109,110,111,112,113,114,115,117,118,121,122,123,134,139,140,141,149,150,152,159,160,161,167,174,179,180,],[-19,-21,-12,-13,-14,-15,-16,-17,-18,-20,-22,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-44,-96,-92,-80,-52,-48,-86,-24,125,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-26,-28,125,-43,-27,-30,-23,-90,-33,-23,-23,-31,-34,-32,-37,-35,-36,]),'EQUALS':([37,],[43,]),'LPAREN':([37,38,43,44,46,50,53,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,129,130,145,157,158,],[44,61,61,61,61,61,44,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,145,146,61,165,166,]),'MINUS':([38,43,44,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,70,72,74,76,77,78,79,80,81,82,83,84,85,86,87,88,92,97,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,125,134,145,149,],[50,50,50,50,77,-67,50,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,50,-57,-58,50,-96,50,-92,50,50,50,50,50,50,50,50,50,50,-76,-52,-48,-86,50,-95,50,-91,50,-67,-67,77,77,77,77,77,77,-76,-76,50,-56,-85,50,50,50,-90,50,-90,]),'NUMBER':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[54,54,54,54,88,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'BOOL':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'FLOAT':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[58,58,58,58,87,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'LBRACKET':([38,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,68,70,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,94,97,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,125,126,134,136,138,142,145,149,155,],[46,46,46,72,46,-45,-46,-67,46,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,46,-57,-58,46,72,-96,72,46,-92,72,46,46,46,46,46,46,46,46,46,46,-76,-52,-48,116,72,-86,72,46,-95,46,72,-91,46,-67,-67,-45,-45,-45,-45,-45,-45,-76,-76,46,-56,-85,46,46,46,72,-43,72,72,72,46,-43,72,]),'LBRACE':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'UNDERSCORE':([40,],[67,]),'RPAREN':([44,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,69,70,71,74,86,87,88,90,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,133,134,149,155,156,169,170,],[70,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,101,-96,-97,-92,-80,-52,-48,117,-86,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-98,-43,-90,163,164,172,173,]),'RBRACKET':([46,47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,70,73,74,75,86,87,88,92,101,103,104,106,107,108,109,110,111,112,113,114,115,117,118,134,135,136,149,],[74,-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,104,-92,-93,-80,-52,-48,-86,-95,134,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-43,-94,149,-90,]),'COMMA':([47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,66,67,70,71,74,75,86,87,88,92,93,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,138,149,],[-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,99,100,-96,102,-92,105,-80,-52,-48,-86,119,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-43,-89,-90,]),'THEN':([47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,126,134,142,149,],[-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-80,-52,-48,-86,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,143,-43,151,-90,]),'RBRACE':([47,48,49,51,52,53,54,55,56,57,58,59,60,62,63,64,70,74,86,87,88,91,92,93,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,137,138,149,],[-45,-46,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,92,-96,-92,-80,-52,-48,118,-86,-87,-95,-91,-68,-69,-70,-71,-72,-73,-74,-75,-77,-78,-56,-85,-43,-88,-89,-90,]),'PLUS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[76,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,76,76,76,76,76,76,-76,-76,-56,-85,-90,-90,]),'GREATER':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[78,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,78,78,78,78,78,78,-76,-76,-56,-85,-90,-90,]),'LESS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[79,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,79,79,79,79,79,79,-76,-76,-56,-85,-90,-90,]),'EQUALS_EQUALS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[80,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,80,80,80,80,80,80,-76,-76,-56,-85,-90,-90,]),'GREATER_EQUALS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[81,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,81,81,81,81,81,81,-76,-76,-56,-85,-90,-90,]),'LESS_EQUALS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[82,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,82,82,82,82,82,82,-76,-76,-56,-85,-90,-90,]),'NOT_EQUALS':([47,49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,108,109,110,111,112,113,114,115,117,118,134,149,],[83,-67,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,-67,-67,83,83,83,83,83,83,-76,-76,-56,-85,-90,-90,]),'TIMES':([49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,114,115,117,118,134,149,],[84,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,84,84,-76,-76,-56,-85,-90,-90,]),'DIVIDE':([49,51,52,53,54,55,56,57,58,59,60,62,63,70,74,86,87,88,92,101,104,106,107,114,115,117,118,134,149,],[85,-76,-79,-47,-48,-49,-50,-51,-52,-54,-55,-57,-58,-96,-92,-76,-52,-48,-86,-95,-91,85,85,-76,-76,-56,-85,-90,-90,]),'IF':([65,],[97,]),'IN':([66,131,132,],[98,147,148,]),'RANGE':([98,],[129,]),'ENUMERATE':([98,147,148,],[130,157,158,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'objective':([0,],[2,]),'task_list':([2,5,],[4,11,]),'task':([2,5,],[5,5,]),'run_list':([4,9,],[8,13,]),'run_statement':([4,9,],[9,9,]),'step_or_subtask_list':([15,17,18,],[16,21,22,]),'step':([15,17,18,],[17,17,17,]),'subtask':([15,17,18,],[18,18,18,]),'statement_list':([25,26,28,141,152,159,],[27,41,42,150,160,167,]),'statement':([25,26,28,141,144,152,154,159,168,175,176,],[28,28,28,28,154,28,154,28,154,154,154,]),'empty':([25,26,28,141,152,159,],[29,29,29,29,29,29,]),'simple_statement':([25,26,28,141,144,152,154,159,168,175,176,],[30,30,30,30,30,30,30,30,30,30,30,]),'compound_statement':([25,26,28,141,144,152,154,159,168,175,176,],[31,31,31,31,31,31,31,31,31,31,31,]),'assignment':([25,26,28,141,144,152,154,159,168,175,176,],[32,32,32,32,32,32,32,32,32,32,32,]),'function_call':([25,26,28,38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,141,144,145,152,154,159,168,175,176,],[33,33,33,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,33,33,60,33,33,33,33,33,33,]),'return_statement':([25,26,28,141,144,152,154,159,168,175,176,],[34,34,34,34,34,34,34,34,34,34,34,]),'decide_statement':([25,26,28,141,144,152,154,159,168,175,176,],[35,35,35,35,35,35,35,35,35,35,35,]),'for_statement':([25,26,28,141,144,152,154,159,168,175,176,],[36,36,36,36,36,36,36,36,36,36,36,]),'expression':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[45,68,71,75,89,90,94,103,89,89,89,89,89,89,89,89,89,89,126,71,75,136,94,138,142,155,]),'arithmetic_expr':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[47,47,47,47,47,47,47,47,47,47,108,109,110,111,112,113,47,47,47,47,47,47,47,47,47,47,]),'comparison_expr':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'term':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[49,49,49,49,49,49,49,49,106,107,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'factor':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[51,51,51,51,86,51,51,51,51,51,51,51,51,51,51,51,114,115,51,51,51,51,51,51,51,51,]),'primary_expr':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'numeric_literal':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'list':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'dict_literal':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'index_expression':([38,43,44,46,50,61,64,72,76,77,78,79,80,81,82,83,84,85,97,102,105,116,119,120,125,145,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'argument_list':([44,102,],[69,133,]),'list_items':([46,105,],[73,135,]),'dict_entries':([64,119,],[91,137,]),'dict_entry':([64,119,],[93,93,]),'condition_list':([65,],[95,]),'if_condition':([65,],[96,]),'else_if_list':([96,123,],[121,140,]),'else_condition':([96,121,],[122,139,]),'else_if_condition':([96,123,],[123,123,]),'iterable':([98,],[128,]),'loop_body':([144,154,168,175,176,],[153,162,171,177,178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> objective task_list run_list','program',3,'p_program','parser.py',160),
  ('objective -> OBJECTIVE STRING','objective',2,'p_objective','parser.py',165),
  ('task_list -> task','task_list',1,'p_task_list','parser.py',172),
  ('task_list -> task task_list','task_list',2,'p_task_list','parser.py',173),
  ('task -> TASK STRING COLON step_or_subtask_list','task',4,'p_task','parser.py',182),
  ('step_or_subtask_list -> step','step_or_subtask_list',1,'p_step_or_subtask_list','parser.py',189),
  ('step_or_subtask_list -> subtask','step_or_subtask_list',1,'p_step_or_subtask_list','parser.py',190),
  ('step_or_subtask_list -> step step_or_subtask_list','step_or_subtask_list',2,'p_step_or_subtask_list','parser.py',191),
  ('step_or_subtask_list -> subtask step_or_subtask_list','step_or_subtask_list',2,'p_step_or_subtask_list','parser.py',192),
  ('step -> STEP STRING COLON statement_list','step',4,'p_step','parser.py',201),
  ('subtask -> SUBTASK STRING COLON statement_list','subtask',4,'p_subtask','parser.py',208),
  ('statement -> simple_statement','statement',1,'p_statement','parser.py',215),
  ('statement -> compound_statement','statement',1,'p_statement','parser.py',216),
  ('simple_statement -> assignment','simple_statement',1,'p_simple_statement','parser.py',222),
  ('simple_statement -> function_call','simple_statement',1,'p_simple_statement','parser.py',223),
  ('simple_statement -> return_statement','simple_statement',1,'p_simple_statement','parser.py',224),
  ('compound_statement -> decide_statement','compound_statement',1,'p_compound_statement','parser.py',230),
  ('compound_statement -> for_statement','compound_statement',1,'p_compound_statement','parser.py',231),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser.py',237),
  ('statement_list -> statement statement_list','statement_list',2,'p_statement_list','parser.py',238),
  ('statement_list -> empty','statement_list',1,'p_statement_list','parser.py',239),
  ('return_statement -> RETURN expression','return_statement',2,'p_return_statement','parser.py',254),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',260),
  ('decide_statement -> DECIDE COLON condition_list','decide_statement',3,'p_decide_statement','parser.py',266),
  ('condition_list -> if_condition','condition_list',1,'p_condition_list','parser.py',272),
  ('condition_list -> if_condition else_if_list','condition_list',2,'p_condition_list','parser.py',273),
  ('condition_list -> if_condition else_if_list else_condition','condition_list',3,'p_condition_list','parser.py',274),
  ('condition_list -> if_condition else_condition','condition_list',2,'p_condition_list','parser.py',275),
  ('else_if_list -> else_if_condition','else_if_list',1,'p_else_if_list','parser.py',292),
  ('else_if_list -> else_if_condition else_if_list','else_if_list',2,'p_else_if_list','parser.py',293),
  ('if_condition -> IF expression THEN COLON statement_list','if_condition',5,'p_if_condition','parser.py',302),
  ('else_if_condition -> ELIF expression THEN COLON statement_list','else_if_condition',5,'p_else_if_condition','parser.py',312),
  ('else_condition -> ELSE COLON statement_list','else_condition',3,'p_else_condition','parser.py',322),
  ('for_statement -> FOR IDENTIFIER IN iterable COLON loop_body END','for_statement',7,'p_for_statement','parser.py',337),
  ('for_statement -> FOR IDENTIFIER COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END','for_statement',12,'p_for_statement','parser.py',338),
  ('for_statement -> FOR UNDERSCORE COMMA IDENTIFIER IN ENUMERATE LPAREN IDENTIFIER RPAREN COLON loop_body END','for_statement',12,'p_for_statement','parser.py',339),
  ('for_statement -> FOR IDENTIFIER IN RANGE LPAREN expression RPAREN COLON loop_body END','for_statement',10,'p_for_statement','parser.py',340),
  ('loop_body -> statement','loop_body',1,'p_loop_body','parser.py',370),
  ('loop_body -> statement loop_body','loop_body',2,'p_loop_body','parser.py',371),
  ('iterable -> IDENTIFIER','iterable',1,'p_iterable','parser.py',380),
  ('iterable -> RANGE LPAREN expression RPAREN','iterable',4,'p_iterable','parser.py',381),
  ('iterable -> ENUMERATE LPAREN IDENTIFIER RPAREN','iterable',4,'p_iterable','parser.py',382),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_indexing','parser.py',394),
  ('assignment -> IDENTIFIER EQUALS expression','assignment',3,'p_assignment','parser.py',403),
  ('expression -> arithmetic_expr','expression',1,'p_expression','parser.py',418),
  ('expression -> comparison_expr','expression',1,'p_expression','parser.py',419),
  ('primary_expr -> IDENTIFIER','primary_expr',1,'p_primary_expr','parser.py',425),
  ('primary_expr -> NUMBER','primary_expr',1,'p_primary_expr','parser.py',426),
  ('primary_expr -> numeric_literal','primary_expr',1,'p_primary_expr','parser.py',427),
  ('primary_expr -> STRING','primary_expr',1,'p_primary_expr','parser.py',428),
  ('primary_expr -> BOOL','primary_expr',1,'p_primary_expr','parser.py',429),
  ('primary_expr -> FLOAT','primary_expr',1,'p_primary_expr','parser.py',430),
  ('primary_expr -> MINUS FLOAT','primary_expr',2,'p_primary_expr','parser.py',431),
  ('primary_expr -> list','primary_expr',1,'p_primary_expr','parser.py',432),
  ('primary_expr -> function_call','primary_expr',1,'p_primary_expr','parser.py',433),
  ('primary_expr -> LPAREN expression RPAREN','primary_expr',3,'p_primary_expr','parser.py',434),
  ('primary_expr -> dict_literal','primary_expr',1,'p_primary_expr','parser.py',435),
  ('primary_expr -> index_expression','primary_expr',1,'p_primary_expr','parser.py',436),
  ('literal -> number','literal',1,'p_literal','parser.py',451),
  ('literal -> STRING','literal',1,'p_literal','parser.py',452),
  ('literal -> BOOL','literal',1,'p_literal','parser.py',453),
  ('literal -> list','literal',1,'p_literal','parser.py',454),
  ('literal -> dict_literal','literal',1,'p_literal','parser.py',455),
  ('number -> NUMBER','number',1,'p_number','parser.py',461),
  ('number -> FLOAT','number',1,'p_number','parser.py',462),
  ('array_access -> primary_expr LBRACKET expression RBRACKET','array_access',4,'p_array_access','parser.py',468),
  ('arithmetic_expr -> term','arithmetic_expr',1,'p_arithmetic_expr','parser.py',475),
  ('arithmetic_expr -> arithmetic_expr PLUS term','arithmetic_expr',3,'p_arithmetic_expr','parser.py',476),
  ('arithmetic_expr -> arithmetic_expr MINUS term','arithmetic_expr',3,'p_arithmetic_expr','parser.py',477),
  ('comparison_expr -> arithmetic_expr GREATER arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',487),
  ('comparison_expr -> arithmetic_expr LESS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',488),
  ('comparison_expr -> arithmetic_expr EQUALS_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',489),
  ('comparison_expr -> arithmetic_expr GREATER_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',490),
  ('comparison_expr -> arithmetic_expr LESS_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',491),
  ('comparison_expr -> arithmetic_expr NOT_EQUALS arithmetic_expr','comparison_expr',3,'p_comparison_expr','parser.py',492),
  ('term -> factor','term',1,'p_term','parser.py',498),
  ('term -> term TIMES factor','term',3,'p_term','parser.py',499),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',500),
  ('factor -> primary_expr','factor',1,'p_factor','parser.py',510),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',511),
  ('numeric_literal -> NUMBER','numeric_literal',1,'p_numeric_literal','parser.py',520),
  ('numeric_literal -> FLOAT','numeric_literal',1,'p_numeric_literal','parser.py',521),
  ('numeric_literal -> MINUS NUMBER','numeric_literal',2,'p_numeric_literal','parser.py',522),
  ('numeric_literal -> MINUS FLOAT','numeric_literal',2,'p_numeric_literal','parser.py',523),
  ('dict_literal -> LBRACE dict_entries RBRACE','dict_literal',3,'p_dict_literal','parser.py',532),
  ('dict_literal -> LBRACE RBRACE','dict_literal',2,'p_dict_literal','parser.py',533),
  ('dict_entries -> dict_entry','dict_entries',1,'p_dict_entries','parser.py',542),
  ('dict_entries -> dict_entry COMMA dict_entries','dict_entries',3,'p_dict_entries','parser.py',543),
  ('dict_entry -> expression COLON expression','dict_entry',3,'p_dict_entry','parser.py',552),
  ('index_expression -> expression LBRACKET expression RBRACKET','index_expression',4,'p_index_expression','parser.py',558),
  ('list -> LBRACKET list_items RBRACKET','list',3,'p_list','parser.py',568),
  ('list -> LBRACKET RBRACKET','list',2,'p_list','parser.py',569),
  ('list_items -> expression','list_items',1,'p_list_items','parser.py',578),
  ('list_items -> expression COMMA list_items','list_items',3,'p_list_items','parser.py',579),
  ('function_call -> IDENTIFIER LPAREN argument_list RPAREN','function_call',4,'p_function_call','parser.py',588),
  ('function_call -> IDENTIFIER LPAREN RPAREN','function_call',3,'p_function_call','parser.py',589),
  ('argument_list -> expression','argument_list',1,'p_argument_list','parser.py',598),
  ('argument_list -> expression COMMA argument_list','argument_list',3,'p_argument_list','parser.py',599),
  ('run_list -> run_statement','run_list',1,'p_run_list','parser.py',608),
  ('run_list -> run_statement run_list','run_list',2,'p_run_list','parser.py',609),
  ('run_statement -> RUN STRING','run_statement',2,'p_run_statement','parser.py',618),
]
