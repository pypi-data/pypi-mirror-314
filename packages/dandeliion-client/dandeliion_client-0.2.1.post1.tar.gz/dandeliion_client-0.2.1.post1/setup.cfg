[metadata]
name = dandeliion-client
version = 0.2.1.post1
author = Dandeliion Team
description = Client for accessing Dandeliion services
keyworkds = dandeliion, client
license = GNU GPLv3
license_files = LICENSE

[options]
zip_safe = False
package_dir = 
	=python
include_package_data = True
packages = find_namespace:
python_requires = >=3.9
setup_requires = 
	setuptools >=38.3.0
	pytest-runner
install_requires = 
	pip-tools >=6.4.0
	asteval>=0.9.26,<0.10
	djangorestframework
	jax[cpu]
	dill
	tabulate>=0.8.0
	numpy>=1.23.5,<2.0.0
	plotly~=5.3.1
	pybamm~=24.5
	redo
	requests~=2.32.0
	scipy~=1.13.0
	six
	websocket-client~=1.8.0
	vtk~=9.3.1
tests_require = 
	coverage
	pytest

[options.data_files]
examples = examples/example.ipynb,examples/example.sh,examples/example_pybamm.ipynb,examples/example_bpx.json

[aliases]
test = pytest

[options.entry_points]
console_scripts = 
	dandeliion-submit = dandeliion.client.apps.simulation.interfaces.cli.queue:submit
	dandeliion-queue = dandeliion.client.apps.simulation.interfaces.cli.queue:list
	dandeliion-cancel = dandeliion.client.apps.simulation.interfaces.cli.queue:cancel
	dandeliion-connect = dandeliion.client.apps.simulation.interfaces.cli.connection:login
	dandeliion-results = dandeliion.client.apps.simulation.interfaces.cli.results:download
	dandeliion-export = dandeliion.client.apps.simulation.interfaces.cli.export:export

[options.packages.find]
where = python

[build_sphinx]
source-dir = python
build-dir = doc/_build
all_files = 1

[upload_sphinx]
upload-dir = doc/_build/html

[coverage:run]
omit = */test_*
source = 
	python/dandeliion

[coverage:report]
skip_covered = False
show_missing = True

[tool:pytest]
addopts = -p no:warnings

[flake8]
exclude = 
	.git,
	__pycache__,
	.eggs,
	build,
	dist,
	old
max-line-length = 120
ignore = W503

[tox:tox]
envlist = 
	lint
	test
	coverage

[testenv]
basepython = python3.10
whitelist_externals = 
	python
	coverage
	flake8

[testenv:lint]
deps = 
	flake8
commands = 
	flake8 python/dandeliion

[testenv:test]
deps = 
	pytest
	coverage
commands = 
	coverage run -m pytest
	coverage report

[egg_info]
tag_build = 
tag_date = 0

