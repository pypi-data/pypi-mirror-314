[tool.poetry]
name = "quantfin-macro"
version = "0.1.3"
description = "QuantFin collection - Macro related utilities and functions"
authors = ["Matteo Angeloni <mattange@gmail.com>"]
maintainers = ["Matteo Angeloni <mattange@gmail.com>"]
readme = "README.md"
license = "MIT"
packages = [{include = "quantfin", from = "src"}]

[tool.poetry.dependencies]
python = "^3.11.0"
seaborn = "^0.13.2"
great-tables = "^0.13.0"
matplotlib = "^3.9.2"
pandas = "^2.2.3"


[tool.poetry.group.dev.dependencies]
python-semantic-release = "^9.12.0"
ipykernel = "^6.29.5"
ipympl = "^0.9.4"


[tool.poetry.group.doc.dependencies]
sphinx = "^8.1.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.semantic_release]
assets = []
build_command = "poetry build"
build_command_env = []
commit_message = "{version} - Release automatically generated by python-semantic-release"
commit_parser = "emoji"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
repo_dir = "C:/Users/matteo/Documents/code/quantfin-macro"
no_git_verify = false
tag_format = "v{version}"
version_toml = [
    "pyproject.toml:tool.poetry.version",
]
version_variables = [
    "src/quantfin/macro/__version__.py:__version__",
]

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
exclude_commit_patterns = []
mode = "init"
insertion_flag = "<!-- version list -->"
template_dir = "templates"

[tool.semantic_release.changelog.default_templates]
changelog_file = "CHANGELOG.md"
output_format = "md"

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = false

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = true
insecure = false
