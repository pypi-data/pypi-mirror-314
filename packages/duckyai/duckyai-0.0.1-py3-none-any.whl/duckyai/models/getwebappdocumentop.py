"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from duckyai.types import BaseModel
from duckyai.utils import (
    FieldMetadata,
    PathParamMetadata,
    QueryParamMetadata,
    SecurityMetadata,
)
from typing import Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetWebappDocumentSecurityTypedDict(TypedDict):
    bearer_auth: str


class GetWebappDocumentSecurity(BaseModel):
    bearer_auth: Annotated[
        str,
        FieldMetadata(
            security=SecurityMetadata(
                scheme=True,
                scheme_type="apiKey",
                sub_type="header",
                field_name="Authorization",
            )
        ),
    ]


class GetWebappDocumentRequestTypedDict(TypedDict):
    source_document_id: str
    r"""The unique ID of the document to retrieve"""
    project_id: str
    r"""The ID of the project containing the document"""
    index_name: str
    r"""The name of the index containing the document"""
    limit: NotRequired[int]
    r"""The maximum number of chunks to return in the response"""
    cursor: NotRequired[str]
    r"""A cursor to fetch the next set of chunks if the document is paginated"""


class GetWebappDocumentRequest(BaseModel):
    source_document_id: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]
    r"""The unique ID of the document to retrieve"""

    project_id: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The ID of the project containing the document"""

    index_name: Annotated[
        str, FieldMetadata(query=QueryParamMetadata(style="form", explode=True))
    ]
    r"""The name of the index containing the document"""

    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""The maximum number of chunks to return in the response"""

    cursor: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None
    r"""A cursor to fetch the next set of chunks if the document is paginated"""
