[tool.poetry]
name = "politikontroller-py"
version = "3.3.1"
description = "Unofficial client for politikontroller.no"
authors = ["Bendik R. Brenne <bendik@konstant.no>"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "politikontroller_py" },
]

[tool.poetry.dependencies]
aiohttp = "^3.11"
anyio = "4.*"
asyncclick = "8.*"
pycryptodome = "^3.21.0"
mashumaro = {extras = ["orjson"], version = "^3.13.1"}
tabulate = "0.9.*"
python = ">=3.10,<3.13"
async-timeout = "^4.0.3"
geojson = "^3.1.0"

[tool.poetry.group.dev.dependencies]
aresponses = "^3.0.0"
covdefaults = "2.3.0"
pre-commit = ">=3.8,<5.0"
pre-commit-hooks = "^5.0.0"
pylint = "3.3.1"
pytest = "^8.3.3"
pytest-asyncio = "*"
pytest-cov = "^5.0.0"
ruff = "0.6.9"
google-play-scraper = "^1.2.7"

[tool.poetry.scripts]
politikontroller = "politikontroller_py.cli:cli"

[tool.coverage.report]
show_missing = true

[tool.coverage.run]
plugins = ["covdefaults"]
source = ["politikontroller_py"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
line-length = 110

[tool.ruff.lint]
ignore = [
    "ARG001",
    "A003", "ANN001", "ANN003", "ANN101", "ANN102", "ANN201", "ANN202", "ANN204", "ANN205", "ANN401",
    "COM812", "COM819",
    "D100", "D101", "D102", "D103", "D104", "D105", "D106", "D107", "D202", "D203", "D205", "D206", "D213",
    "E501", "EM101", "EM102",
    "ERA001",
    "FBT001", "FBT002", "FBT003",
    "FIX002",
    "G004",
    "ISC001",
    "PLR0913",
    "PTH123",
    "Q000", "Q001", "Q002", "Q003",
    "RUF012",
    "S101",
    "S105",
    "S311",
    "SLOT000",
    "TD003", "TID252", "TRY003", "TRY300",
    "W191",
]
select = ["ALL"]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "format",
    "duplicate-code",
    "used-before-assignment",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-few-public-methods",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.lint.isort]
force-sort-within-sections = true
combine-as-imports = true
known-first-party = ["politikontroller_py"]

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [
    "mashumaro.mixins.orjson.DataClassORJSONMixin",
]

[tool.ruff.lint.mccabe]
max-complexity = 25

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
