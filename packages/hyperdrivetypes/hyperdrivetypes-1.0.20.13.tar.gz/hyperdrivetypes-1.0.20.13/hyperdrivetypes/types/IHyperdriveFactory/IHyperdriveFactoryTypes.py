"""Dataclasses for all structs in the IHyperdriveFactory contract.

DO NOT EDIT.  This file was generated by pypechain v0.0.49.
See documentation at https://github.com/delvtech/pypechain """

# super() call methods are generic, while our version adds values & types
# pylint: disable=arguments-differ

# contracts have PascalCase names
# pylint: disable=invalid-name

# contracts control how many attributes and arguments we have in generated code
# pylint: disable=too-many-instance-attributes
# pylint: disable=too-many-arguments

# unable to determine which imports will be used in the generated code
# pylint: disable=unused-import

# we don't need else statement if the other conditionals all have return,
# but it's easier to generate
# pylint: disable=no-else-return

# We import this contract itself to ensure all nested structs have a fully qualified name.
# We use this to avoid namespace collisions, as well as having a uniform
# type structure to do lookups when functions return these structs.
# pylint: disable=import-self


from __future__ import annotations

from dataclasses import dataclass

from pypechain.core import BaseEvent, BaseEventArgs, ErrorInfo


@dataclass(kw_only=True)
class CheckpointDurationResolutionUpdatedEvent(BaseEvent):
    """The event type for event CheckpointDurationResolutionUpdated"""

    @dataclass(kw_only=True)
    class CheckpointDurationResolutionUpdatedEventArgs(BaseEventArgs):
        """The args to the event CheckpointDurationResolutionUpdated"""

        newCheckpointDurationResolution: int

    # We redefine the args field with the specific event arg type.
    args: CheckpointDurationResolutionUpdatedEventArgs  # type: ignore[override]

    __name__: str = "CheckpointDurationResolutionUpdated"


@dataclass(kw_only=True)
class CheckpointRewarderUpdatedEvent(BaseEvent):
    """The event type for event CheckpointRewarderUpdated"""

    @dataclass(kw_only=True)
    class CheckpointRewarderUpdatedEventArgs(BaseEventArgs):
        """The args to the event CheckpointRewarderUpdated"""

        newCheckpointRewarder: str

    # We redefine the args field with the specific event arg type.
    args: CheckpointRewarderUpdatedEventArgs  # type: ignore[override]

    __name__: str = "CheckpointRewarderUpdated"


@dataclass(kw_only=True)
class DefaultPausersUpdatedEvent(BaseEvent):
    """The event type for event DefaultPausersUpdated"""

    @dataclass(kw_only=True)
    class DefaultPausersUpdatedEventArgs(BaseEventArgs):
        """The args to the event DefaultPausersUpdated"""

        newDefaultPausers: list[str]

    # We redefine the args field with the specific event arg type.
    args: DefaultPausersUpdatedEventArgs  # type: ignore[override]

    __name__: str = "DefaultPausersUpdated"


@dataclass(kw_only=True)
class DeployedEvent(BaseEvent):
    """The event type for event Deployed"""

    @dataclass(kw_only=True)
    class DeployedEventArgs(BaseEventArgs):
        """The args to the event Deployed"""

        deployerCoordinator: str
        hyperdrive: str
        name: str
        config: tuple
        extraData: bytes

    # We redefine the args field with the specific event arg type.
    args: DeployedEventArgs  # type: ignore[override]

    __name__: str = "Deployed"


@dataclass(kw_only=True)
class DeployerCoordinatorAddedEvent(BaseEvent):
    """The event type for event DeployerCoordinatorAdded"""

    @dataclass(kw_only=True)
    class DeployerCoordinatorAddedEventArgs(BaseEventArgs):
        """The args to the event DeployerCoordinatorAdded"""

        deployerCoordinator: str

    # We redefine the args field with the specific event arg type.
    args: DeployerCoordinatorAddedEventArgs  # type: ignore[override]

    __name__: str = "DeployerCoordinatorAdded"


@dataclass(kw_only=True)
class DeployerCoordinatorManagerUpdatedEvent(BaseEvent):
    """The event type for event DeployerCoordinatorManagerUpdated"""

    @dataclass(kw_only=True)
    class DeployerCoordinatorManagerUpdatedEventArgs(BaseEventArgs):
        """The args to the event DeployerCoordinatorManagerUpdated"""

        deployerCoordinatorManager: str

    # We redefine the args field with the specific event arg type.
    args: DeployerCoordinatorManagerUpdatedEventArgs  # type: ignore[override]

    __name__: str = "DeployerCoordinatorManagerUpdated"


@dataclass(kw_only=True)
class DeployerCoordinatorRemovedEvent(BaseEvent):
    """The event type for event DeployerCoordinatorRemoved"""

    @dataclass(kw_only=True)
    class DeployerCoordinatorRemovedEventArgs(BaseEventArgs):
        """The args to the event DeployerCoordinatorRemoved"""

        deployerCoordinator: str

    # We redefine the args field with the specific event arg type.
    args: DeployerCoordinatorRemovedEventArgs  # type: ignore[override]

    __name__: str = "DeployerCoordinatorRemoved"


@dataclass(kw_only=True)
class FeeCollectorUpdatedEvent(BaseEvent):
    """The event type for event FeeCollectorUpdated"""

    @dataclass(kw_only=True)
    class FeeCollectorUpdatedEventArgs(BaseEventArgs):
        """The args to the event FeeCollectorUpdated"""

        newFeeCollector: str

    # We redefine the args field with the specific event arg type.
    args: FeeCollectorUpdatedEventArgs  # type: ignore[override]

    __name__: str = "FeeCollectorUpdated"


@dataclass(kw_only=True)
class GovernanceUpdatedEvent(BaseEvent):
    """The event type for event GovernanceUpdated"""

    @dataclass(kw_only=True)
    class GovernanceUpdatedEventArgs(BaseEventArgs):
        """The args to the event GovernanceUpdated"""

        governance: str

    # We redefine the args field with the specific event arg type.
    args: GovernanceUpdatedEventArgs  # type: ignore[override]

    __name__: str = "GovernanceUpdated"


@dataclass(kw_only=True)
class HyperdriveGovernanceUpdatedEvent(BaseEvent):
    """The event type for event HyperdriveGovernanceUpdated"""

    @dataclass(kw_only=True)
    class HyperdriveGovernanceUpdatedEventArgs(BaseEventArgs):
        """The args to the event HyperdriveGovernanceUpdated"""

        hyperdriveGovernance: str

    # We redefine the args field with the specific event arg type.
    args: HyperdriveGovernanceUpdatedEventArgs  # type: ignore[override]

    __name__: str = "HyperdriveGovernanceUpdated"


@dataclass(kw_only=True)
class LinkerCodeHashUpdatedEvent(BaseEvent):
    """The event type for event LinkerCodeHashUpdated"""

    @dataclass(kw_only=True)
    class LinkerCodeHashUpdatedEventArgs(BaseEventArgs):
        """The args to the event LinkerCodeHashUpdated"""

        newLinkerCodeHash: bytes

    # We redefine the args field with the specific event arg type.
    args: LinkerCodeHashUpdatedEventArgs  # type: ignore[override]

    __name__: str = "LinkerCodeHashUpdated"


@dataclass(kw_only=True)
class LinkerFactoryUpdatedEvent(BaseEvent):
    """The event type for event LinkerFactoryUpdated"""

    @dataclass(kw_only=True)
    class LinkerFactoryUpdatedEventArgs(BaseEventArgs):
        """The args to the event LinkerFactoryUpdated"""

        newLinkerFactory: str

    # We redefine the args field with the specific event arg type.
    args: LinkerFactoryUpdatedEventArgs  # type: ignore[override]

    __name__: str = "LinkerFactoryUpdated"


@dataclass(kw_only=True)
class MaxCheckpointDurationUpdatedEvent(BaseEvent):
    """The event type for event MaxCheckpointDurationUpdated"""

    @dataclass(kw_only=True)
    class MaxCheckpointDurationUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxCheckpointDurationUpdated"""

        newMaxCheckpointDuration: int

    # We redefine the args field with the specific event arg type.
    args: MaxCheckpointDurationUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxCheckpointDurationUpdated"


@dataclass(kw_only=True)
class MaxCircuitBreakerDeltaUpdatedEvent(BaseEvent):
    """The event type for event MaxCircuitBreakerDeltaUpdated"""

    @dataclass(kw_only=True)
    class MaxCircuitBreakerDeltaUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxCircuitBreakerDeltaUpdated"""

        newMaxCircuitBreakerDelta: int

    # We redefine the args field with the specific event arg type.
    args: MaxCircuitBreakerDeltaUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxCircuitBreakerDeltaUpdated"


@dataclass(kw_only=True)
class MaxFeesUpdatedEvent(BaseEvent):
    """The event type for event MaxFeesUpdated"""

    @dataclass(kw_only=True)
    class MaxFeesUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxFeesUpdated"""

        newMaxFees: tuple

    # We redefine the args field with the specific event arg type.
    args: MaxFeesUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxFeesUpdated"


@dataclass(kw_only=True)
class MaxFixedAPRUpdatedEvent(BaseEvent):
    """The event type for event MaxFixedAPRUpdated"""

    @dataclass(kw_only=True)
    class MaxFixedAPRUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxFixedAPRUpdated"""

        newMaxFixedAPR: int

    # We redefine the args field with the specific event arg type.
    args: MaxFixedAPRUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxFixedAPRUpdated"


@dataclass(kw_only=True)
class MaxPositionDurationUpdatedEvent(BaseEvent):
    """The event type for event MaxPositionDurationUpdated"""

    @dataclass(kw_only=True)
    class MaxPositionDurationUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxPositionDurationUpdated"""

        newMaxPositionDuration: int

    # We redefine the args field with the specific event arg type.
    args: MaxPositionDurationUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxPositionDurationUpdated"


@dataclass(kw_only=True)
class MaxTimeStretchAPRUpdatedEvent(BaseEvent):
    """The event type for event MaxTimeStretchAPRUpdated"""

    @dataclass(kw_only=True)
    class MaxTimeStretchAPRUpdatedEventArgs(BaseEventArgs):
        """The args to the event MaxTimeStretchAPRUpdated"""

        newMaxTimeStretchAPR: int

    # We redefine the args field with the specific event arg type.
    args: MaxTimeStretchAPRUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MaxTimeStretchAPRUpdated"


@dataclass(kw_only=True)
class MinCheckpointDurationUpdatedEvent(BaseEvent):
    """The event type for event MinCheckpointDurationUpdated"""

    @dataclass(kw_only=True)
    class MinCheckpointDurationUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinCheckpointDurationUpdated"""

        newMinCheckpointDuration: int

    # We redefine the args field with the specific event arg type.
    args: MinCheckpointDurationUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinCheckpointDurationUpdated"


@dataclass(kw_only=True)
class MinCircuitBreakerDeltaUpdatedEvent(BaseEvent):
    """The event type for event MinCircuitBreakerDeltaUpdated"""

    @dataclass(kw_only=True)
    class MinCircuitBreakerDeltaUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinCircuitBreakerDeltaUpdated"""

        newMinCircuitBreakerDelta: int

    # We redefine the args field with the specific event arg type.
    args: MinCircuitBreakerDeltaUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinCircuitBreakerDeltaUpdated"


@dataclass(kw_only=True)
class MinFeesUpdatedEvent(BaseEvent):
    """The event type for event MinFeesUpdated"""

    @dataclass(kw_only=True)
    class MinFeesUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinFeesUpdated"""

        newMinFees: tuple

    # We redefine the args field with the specific event arg type.
    args: MinFeesUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinFeesUpdated"


@dataclass(kw_only=True)
class MinFixedAPRUpdatedEvent(BaseEvent):
    """The event type for event MinFixedAPRUpdated"""

    @dataclass(kw_only=True)
    class MinFixedAPRUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinFixedAPRUpdated"""

        newMinFixedAPR: int

    # We redefine the args field with the specific event arg type.
    args: MinFixedAPRUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinFixedAPRUpdated"


@dataclass(kw_only=True)
class MinPositionDurationUpdatedEvent(BaseEvent):
    """The event type for event MinPositionDurationUpdated"""

    @dataclass(kw_only=True)
    class MinPositionDurationUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinPositionDurationUpdated"""

        newMinPositionDuration: int

    # We redefine the args field with the specific event arg type.
    args: MinPositionDurationUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinPositionDurationUpdated"


@dataclass(kw_only=True)
class MinTimeStretchAPRUpdatedEvent(BaseEvent):
    """The event type for event MinTimeStretchAPRUpdated"""

    @dataclass(kw_only=True)
    class MinTimeStretchAPRUpdatedEventArgs(BaseEventArgs):
        """The args to the event MinTimeStretchAPRUpdated"""

        newMinTimeStretchAPR: int

    # We redefine the args field with the specific event arg type.
    args: MinTimeStretchAPRUpdatedEventArgs  # type: ignore[override]

    __name__: str = "MinTimeStretchAPRUpdated"


@dataclass(kw_only=True)
class SweepCollectorUpdatedEvent(BaseEvent):
    """The event type for event SweepCollectorUpdated"""

    @dataclass(kw_only=True)
    class SweepCollectorUpdatedEventArgs(BaseEventArgs):
        """The args to the event SweepCollectorUpdated"""

        newSweepCollector: str

    # We redefine the args field with the specific event arg type.
    args: SweepCollectorUpdatedEventArgs  # type: ignore[override]

    __name__: str = "SweepCollectorUpdated"


DeployerCoordinatorAlreadyAddedError = ErrorInfo(
    inputs=[],
    name="DeployerCoordinatorAlreadyAdded",
    selector="0xbd34634f",
    signature="DeployerCoordinatorAlreadyAdded()",
)

DeployerCoordinatorIndexMismatchError = ErrorInfo(
    inputs=[],
    name="DeployerCoordinatorIndexMismatch",
    selector="0x3c9c032c",
    signature="DeployerCoordinatorIndexMismatch()",
)

DeployerCoordinatorNotAddedError = ErrorInfo(
    inputs=[],
    name="DeployerCoordinatorNotAdded",
    selector="0x4bf121ab",
    signature="DeployerCoordinatorNotAdded()",
)

EndIndexTooLargeError = ErrorInfo(
    inputs=[],
    name="EndIndexTooLarge",
    selector="0xe0f7becb",
    signature="EndIndexTooLarge()",
)

InvalidCheckpointDurationError = ErrorInfo(
    inputs=[],
    name="InvalidCheckpointDuration",
    selector="0x5428734d",
    signature="InvalidCheckpointDuration()",
)

InvalidCheckpointDurationResolutionError = ErrorInfo(
    inputs=[],
    name="InvalidCheckpointDurationResolution",
    selector="0x8dbae0a8",
    signature="InvalidCheckpointDurationResolution()",
)

InvalidCircuitBreakerDeltaError = ErrorInfo(
    inputs=[],
    name="InvalidCircuitBreakerDelta",
    selector="0xef9bc65f",
    signature="InvalidCircuitBreakerDelta()",
)

InvalidDeployConfigError = ErrorInfo(
    inputs=[],
    name="InvalidDeployConfig",
    selector="0xe8c02dd7",
    signature="InvalidDeployConfig()",
)

InvalidDeployerCoordinatorError = ErrorInfo(
    inputs=[],
    name="InvalidDeployerCoordinator",
    selector="0x6e623f0f",
    signature="InvalidDeployerCoordinator()",
)

InvalidFeesError = ErrorInfo(
    inputs=[],
    name="InvalidFees",
    selector="0x2d8768f9",
    signature="InvalidFees()",
)

InvalidFixedAPRError = ErrorInfo(
    inputs=[],
    name="InvalidFixedAPR",
    selector="0x30554de1",
    signature="InvalidFixedAPR()",
)

InvalidIndexesError = ErrorInfo(
    inputs=[],
    name="InvalidIndexes",
    selector="0x764e6b56",
    signature="InvalidIndexes()",
)

InvalidMaxCheckpointDurationError = ErrorInfo(
    inputs=[],
    name="InvalidMaxCheckpointDuration",
    selector="0xf9c0959d",
    signature="InvalidMaxCheckpointDuration()",
)

InvalidMaxCircuitBreakerDeltaError = ErrorInfo(
    inputs=[],
    name="InvalidMaxCircuitBreakerDelta",
    selector="0xfdb80c26",
    signature="InvalidMaxCircuitBreakerDelta()",
)

InvalidMaxFeesError = ErrorInfo(
    inputs=[],
    name="InvalidMaxFees",
    selector="0x2c20e3f6",
    signature="InvalidMaxFees()",
)

InvalidMaxFixedAPRError = ErrorInfo(
    inputs=[],
    name="InvalidMaxFixedAPR",
    selector="0x673edec0",
    signature="InvalidMaxFixedAPR()",
)

InvalidMaxPositionDurationError = ErrorInfo(
    inputs=[],
    name="InvalidMaxPositionDuration",
    selector="0xcfb699cb",
    signature="InvalidMaxPositionDuration()",
)

InvalidMaxTimeStretchAPRError = ErrorInfo(
    inputs=[],
    name="InvalidMaxTimeStretchAPR",
    selector="0xa35539d0",
    signature="InvalidMaxTimeStretchAPR()",
)

InvalidMinCheckpointDurationError = ErrorInfo(
    inputs=[],
    name="InvalidMinCheckpointDuration",
    selector="0x0433acc6",
    signature="InvalidMinCheckpointDuration()",
)

InvalidMinCircuitBreakerDeltaError = ErrorInfo(
    inputs=[],
    name="InvalidMinCircuitBreakerDelta",
    selector="0x28a2d9a9",
    signature="InvalidMinCircuitBreakerDelta()",
)

InvalidMinFeesError = ErrorInfo(
    inputs=[],
    name="InvalidMinFees",
    selector="0x15b05a8f",
    signature="InvalidMinFees()",
)

InvalidMinFixedAPRError = ErrorInfo(
    inputs=[],
    name="InvalidMinFixedAPR",
    selector="0x1670f797",
    signature="InvalidMinFixedAPR()",
)

InvalidMinPositionDurationError = ErrorInfo(
    inputs=[],
    name="InvalidMinPositionDuration",
    selector="0x600f5a02",
    signature="InvalidMinPositionDuration()",
)

InvalidMinTimeStretchAPRError = ErrorInfo(
    inputs=[],
    name="InvalidMinTimeStretchAPR",
    selector="0x5a8f6557",
    signature="InvalidMinTimeStretchAPR()",
)

InvalidPositionDurationError = ErrorInfo(
    inputs=[],
    name="InvalidPositionDuration",
    selector="0x4a7fff9e",
    signature="InvalidPositionDuration()",
)

InvalidTimeStretchAPRError = ErrorInfo(
    inputs=[],
    name="InvalidTimeStretchAPR",
    selector="0x83ebdfb7",
    signature="InvalidTimeStretchAPR()",
)

ReceiveLockedError = ErrorInfo(
    inputs=[],
    name="ReceiveLocked",
    selector="0x5563ada8",
    signature="ReceiveLocked()",
)

TransferFailedError = ErrorInfo(
    inputs=[],
    name="TransferFailed",
    selector="0x90b8ec18",
    signature="TransferFailed()",
)

UnauthorizedError = ErrorInfo(
    inputs=[],
    name="Unauthorized",
    selector="0x82b42900",
    signature="Unauthorized()",
)
