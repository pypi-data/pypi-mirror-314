Metadata-Version: 2.1
Name: vbroker
Version: 1.1.5
Summary: vBroker: A Python wrapper for Viet Nam Broker API
Home-page: https://quant.vn
License: MIT
Author: thync
Author-email: thync@outlook.com
Requires-Python: >=3.9,<4.0
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: OS Independent
Classifier: Operating System :: POSIX
Classifier: Operating System :: POSIX :: Linux
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Requires-Dist: nanoid (>=2.0.0,<3.0.0)
Requires-Dist: pycryptodome (>=3.20.0,<4.0.0)
Requires-Dist: pydantic (>=2.9.1,<3.0.0)
Requires-Dist: pyjwt (>=2.9.0,<3.0.0)
Requires-Dist: requests (>=2.32.3,<3.0.0)
Requires-Dist: websockets (>=13.0.1,<14.0.0)
Requires-Dist: xmljson (>=0.2.1,<0.3.0)
Project-URL: Repository, https://github.com/quant-vn/vbroker
Description-Content-Type: text/markdown

# vBroker
vBroker: A Python wrapper for Viet Nam Broker API

![PyPI - Version](https://img.shields.io/pypi/v/vbroker)
![Python Version](https://img.shields.io/pypi/pyversions/vbroker)
![PyPI - Downloads](https://img.shields.io/pypi/dm/vbroker)
![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)

## Installation
```bash
pip install vbroker
```

## Usage

### Basic usage

```python
from vbroker import Broker, Config, EnumBroker

broker = Broker(
    broker=EnumBroker.SSI.value,
    config=Config(
        ssi_broker_account="666666",
        ssi_broker_id="<SSI_BROKER_ID>",
        ssi_broker_secret="<SSI_BROKER_SECRET>",
        ssi_broker_private_key="<SSI_BROKER_PRIVATE_KEY>"
    )
)

# Get/Set OTP
print(broker.api.get_otp())
broker.api.otp = "123456"
# Get Token
broker.api.get_token()
# Get Orderbook
print(broker.api.get_ordebbook(account_no="6666661"))
print(
    broker.api.get_ordebbook(account_no="6666668", from_date="2024-09-01", to_date="2024-09-20")
)
# Get Max Buy/Sell Quantity
print(broker.api.get_max_buy_quantity(account_no="6666661", instrument="SSI", price=33.6))
print(broker.api.get_max_buy_quantity(account_no="6666668", instrument="VN30F2411", price=1315))
print(broker.api.get_max_sell_quantity(account_no="6666661", instrument="SSI", price=33.6))
print(broker.api.get_max_sell_quantity(account_no="6666668", instrument="VN30F2411", price=1315))
# Get Positions
print(broker.api.get_positions(account_no="6666661", is_equity=True))
print(broker.api.get_positions(account_no="6666668", is_equity=False))
# Get Balance
print(broker.api.get_balance(account_no="6666661", is_equity=True))
print(broker.api.get_balance(account_no="6666668", is_equity=False))
# Place Order
print(
    broker.api.place_order(
        account_no="6666661", side="BUY", instrument="SSI", quantity=100, price=25500
    )
)
print(
    broker.api.place_order(
        account_no="6666668", side="BUY", instrument="VN30F2411", quantity=1, price=1226.3,
        is_equity=False
    )
)
# Modify Order
print(
    broker.api.modify_order(
        account_no="6666661",
        order_id="108200271", side="BUY", instrument="SSI", quantity=100, price=24450,
        is_equity=True
    )
)
print(
    broker.api.modify_order(
        account_no="6666668",
        order_id="18118759", side="BUY", instrument="VN30F2411", quantity=1, price=1410,
        is_equity=False
    )
)
# Cancel Order
print(
    broker.api.cancel_order(
        account_no="6666661", order_id="108200271", instrument="SSI", side="BUY",
        is_equity=True
    )
)
print(
    broker.api.cancel_order(
        account_no="6666668", order_id="18118759", instrument="VN30F2411", side="BUY",
        is_equity=False
    )
)

```

### Streaming order

```python
import asyncio
from vbroker import Broker, Config, EnumBroker

broker = Broker(
    broker=EnumBroker.SSI.value,
    config=Config(
        ssi_broker_account="666666",
        ssi_broker_id="<SSI_BROKER_ID>",
        ssi_broker_secret="<SSI_BROKER_SECRET>",
        ssi_broker_private_key="<SSI_BROKER_PRIVATE_KEY>"
    )
)

broker.api.otp = "<OTP>"
print(broker.api.get_token())

def on_message(msg):
    print(f"MESSAGE: {msg}")


asyncio.run(broker.hub.listen(on_message))
```
MIT License

Copyright (c) 2024 Quant.vn

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.

