"""
    EVE Swagger Interface

    An OpenAPI for EVE Online  # noqa: E501

    The version of the OpenAPI document: 1.28
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from esi_client.api_client import ApiClient, Endpoint as _Endpoint
from esi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from esi_client.model.bad_request import BadRequest
from esi_client.model.error_limited import ErrorLimited
from esi_client.model.forbidden import Forbidden
from esi_client.model.gateway_timeout import GatewayTimeout
from esi_client.model.internal_server_error import InternalServerError
from esi_client.model.post_ui_openwindow_newmail_new_mail import PostUiOpenwindowNewmailNewMail
from esi_client.model.post_ui_openwindow_newmail_unprocessable_entity import PostUiOpenwindowNewmailUnprocessableEntity
from esi_client.model.service_unavailable import ServiceUnavailable
from esi_client.model.unauthorized import Unauthorized


class UserInterfaceApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.post_ui_autopilot_waypoint_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'evesso'
                ],
                'endpoint_path': '/ui/autopilot/waypoint/',
                'operation_id': 'post_ui_autopilot_waypoint',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'add_to_beginning',
                    'clear_other_waypoints',
                    'destination_id',
                    'datasource',
                    'token',
                ],
                'required': [
                    'add_to_beginning',
                    'clear_other_waypoints',
                    'destination_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                },
                'openapi_types': {
                    'add_to_beginning':
                        (bool,),
                    'clear_other_waypoints':
                        (bool,),
                    'destination_id':
                        (int,),
                    'datasource':
                        (str,),
                    'token':
                        (str,),
                },
                'attribute_map': {
                    'add_to_beginning': 'add_to_beginning',
                    'clear_other_waypoints': 'clear_other_waypoints',
                    'destination_id': 'destination_id',
                    'datasource': 'datasource',
                    'token': 'token',
                },
                'location_map': {
                    'add_to_beginning': 'query',
                    'clear_other_waypoints': 'query',
                    'destination_id': 'query',
                    'datasource': 'query',
                    'token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_ui_openwindow_contract_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'evesso'
                ],
                'endpoint_path': '/ui/openwindow/contract/',
                'operation_id': 'post_ui_openwindow_contract',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'contract_id',
                    'datasource',
                    'token',
                ],
                'required': [
                    'contract_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                },
                'openapi_types': {
                    'contract_id':
                        (int,),
                    'datasource':
                        (str,),
                    'token':
                        (str,),
                },
                'attribute_map': {
                    'contract_id': 'contract_id',
                    'datasource': 'datasource',
                    'token': 'token',
                },
                'location_map': {
                    'contract_id': 'query',
                    'datasource': 'query',
                    'token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_ui_openwindow_information_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'evesso'
                ],
                'endpoint_path': '/ui/openwindow/information/',
                'operation_id': 'post_ui_openwindow_information',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'target_id',
                    'datasource',
                    'token',
                ],
                'required': [
                    'target_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                },
                'openapi_types': {
                    'target_id':
                        (int,),
                    'datasource':
                        (str,),
                    'token':
                        (str,),
                },
                'attribute_map': {
                    'target_id': 'target_id',
                    'datasource': 'datasource',
                    'token': 'token',
                },
                'location_map': {
                    'target_id': 'query',
                    'datasource': 'query',
                    'token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_ui_openwindow_marketdetails_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'evesso'
                ],
                'endpoint_path': '/ui/openwindow/marketdetails/',
                'operation_id': 'post_ui_openwindow_marketdetails',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'type_id',
                    'datasource',
                    'token',
                ],
                'required': [
                    'type_id',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                },
                'openapi_types': {
                    'type_id':
                        (int,),
                    'datasource':
                        (str,),
                    'token':
                        (str,),
                },
                'attribute_map': {
                    'type_id': 'type_id',
                    'datasource': 'datasource',
                    'token': 'token',
                },
                'location_map': {
                    'type_id': 'query',
                    'datasource': 'query',
                    'token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )
        self.post_ui_openwindow_newmail_endpoint = _Endpoint(
            settings={
                'response_type': None,
                'auth': [
                    'evesso'
                ],
                'endpoint_path': '/ui/openwindow/newmail/',
                'operation_id': 'post_ui_openwindow_newmail',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'new_mail',
                    'datasource',
                    'token',
                ],
                'required': [
                    'new_mail',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                },
                'openapi_types': {
                    'new_mail':
                        (PostUiOpenwindowNewmailNewMail,),
                    'datasource':
                        (str,),
                    'token':
                        (str,),
                },
                'attribute_map': {
                    'datasource': 'datasource',
                    'token': 'token',
                },
                'location_map': {
                    'new_mail': 'body',
                    'datasource': 'query',
                    'token': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client
        )

    def post_ui_autopilot_waypoint(
        self,
        destination_id,
        add_to_beginning=False,
        clear_other_waypoints=False,
        **kwargs
    ):
        """Set Autopilot Waypoint  # noqa: E501

        Set a solar system as autopilot waypoint  --- Alternate route: `/dev/ui/autopilot/waypoint/`  Alternate route: `/legacy/ui/autopilot/waypoint/`  Alternate route: `/v2/ui/autopilot/waypoint/`   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_ui_autopilot_waypoint(destination_id, add_to_beginning=False, clear_other_waypoints=False, async_req=True)
        >>> result = thread.get()

        Args:
            destination_id (int): The destination to travel to, can be solar system, station or structure's id
            add_to_beginning (bool): Whether this solar system should be added to the beginning of all waypoints. defaults to False, must be one of [False]
            clear_other_waypoints (bool): Whether clean other waypoints beforing adding this one. defaults to False, must be one of [False]

        Keyword Args:
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            token (str): Access token to use if unable to set a header. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['add_to_beginning'] = \
            add_to_beginning
        kwargs['clear_other_waypoints'] = \
            clear_other_waypoints
        kwargs['destination_id'] = \
            destination_id
        return self.post_ui_autopilot_waypoint_endpoint.call_with_http_info(**kwargs)

    def post_ui_openwindow_contract(
        self,
        contract_id,
        **kwargs
    ):
        """Open Contract Window  # noqa: E501

        Open the contract window inside the client  --- Alternate route: `/dev/ui/openwindow/contract/`  Alternate route: `/legacy/ui/openwindow/contract/`  Alternate route: `/v1/ui/openwindow/contract/`   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_ui_openwindow_contract(contract_id, async_req=True)
        >>> result = thread.get()

        Args:
            contract_id (int): The contract to open

        Keyword Args:
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            token (str): Access token to use if unable to set a header. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['contract_id'] = \
            contract_id
        return self.post_ui_openwindow_contract_endpoint.call_with_http_info(**kwargs)

    def post_ui_openwindow_information(
        self,
        target_id,
        **kwargs
    ):
        """Open Information Window  # noqa: E501

        Open the information window for a character, corporation or alliance inside the client  --- Alternate route: `/dev/ui/openwindow/information/`  Alternate route: `/legacy/ui/openwindow/information/`  Alternate route: `/v1/ui/openwindow/information/`   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_ui_openwindow_information(target_id, async_req=True)
        >>> result = thread.get()

        Args:
            target_id (int): The target to open

        Keyword Args:
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            token (str): Access token to use if unable to set a header. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['target_id'] = \
            target_id
        return self.post_ui_openwindow_information_endpoint.call_with_http_info(**kwargs)

    def post_ui_openwindow_marketdetails(
        self,
        type_id,
        **kwargs
    ):
        """Open Market Details  # noqa: E501

        Open the market details window for a specific typeID inside the client  --- Alternate route: `/dev/ui/openwindow/marketdetails/`  Alternate route: `/legacy/ui/openwindow/marketdetails/`  Alternate route: `/v1/ui/openwindow/marketdetails/`   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_ui_openwindow_marketdetails(type_id, async_req=True)
        >>> result = thread.get()

        Args:
            type_id (int): The item type to open in market window

        Keyword Args:
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            token (str): Access token to use if unable to set a header. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['type_id'] = \
            type_id
        return self.post_ui_openwindow_marketdetails_endpoint.call_with_http_info(**kwargs)

    def post_ui_openwindow_newmail(
        self,
        new_mail,
        **kwargs
    ):
        """Open New Mail Window  # noqa: E501

        Open the New Mail window, according to settings from the request if applicable  --- Alternate route: `/dev/ui/openwindow/newmail/`  Alternate route: `/legacy/ui/openwindow/newmail/`  Alternate route: `/v1/ui/openwindow/newmail/`   # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.post_ui_openwindow_newmail(new_mail, async_req=True)
        >>> result = thread.get()

        Args:
            new_mail (PostUiOpenwindowNewmailNewMail): The details of mail to create

        Keyword Args:
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            token (str): Access token to use if unable to set a header. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            None
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['new_mail'] = \
            new_mail
        return self.post_ui_openwindow_newmail_endpoint.call_with_http_info(**kwargs)

