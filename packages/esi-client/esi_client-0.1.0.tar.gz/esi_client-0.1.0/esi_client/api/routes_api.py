"""
    EVE Swagger Interface

    An OpenAPI for EVE Online  # noqa: E501

    The version of the OpenAPI document: 1.28
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from esi_client.api_client import ApiClient, Endpoint as _Endpoint
from esi_client.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from esi_client.model.bad_request import BadRequest
from esi_client.model.error_limited import ErrorLimited
from esi_client.model.gateway_timeout import GatewayTimeout
from esi_client.model.get_route_origin_destination_not_found import GetRouteOriginDestinationNotFound
from esi_client.model.internal_server_error import InternalServerError
from esi_client.model.service_unavailable import ServiceUnavailable


class RoutesApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client
        self.get_route_origin_destination_endpoint = _Endpoint(
            settings={
                'response_type': ([int],),
                'auth': [],
                'endpoint_path': '/route/{origin}/{destination}/',
                'operation_id': 'get_route_origin_destination',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'destination',
                    'origin',
                    'avoid',
                    'connections',
                    'datasource',
                    'flag',
                    'if_none_match',
                ],
                'required': [
                    'destination',
                    'origin',
                ],
                'nullable': [
                ],
                'enum': [
                    'datasource',
                    'flag',
                ],
                'validation': [
                    'avoid',
                    'connections',
                ]
            },
            root_map={
                'validations': {
                    ('avoid',): {

                        'max_items': 100,
                    },
                    ('connections',): {

                        'max_items': 100,
                    },
                },
                'allowed_values': {
                    ('datasource',): {

                        "TRANQUILITY": "tranquility"
                    },
                    ('flag',): {

                        "SHORTEST": "shortest",
                        "SECURE": "secure",
                        "INSECURE": "insecure"
                    },
                },
                'openapi_types': {
                    'destination':
                        (int,),
                    'origin':
                        (int,),
                    'avoid':
                        ([int],),
                    'connections':
                        ([[int]],),
                    'datasource':
                        (str,),
                    'flag':
                        (str,),
                    'if_none_match':
                        (str,),
                },
                'attribute_map': {
                    'destination': 'destination',
                    'origin': 'origin',
                    'avoid': 'avoid',
                    'connections': 'connections',
                    'datasource': 'datasource',
                    'flag': 'flag',
                    'if_none_match': 'If-None-Match',
                },
                'location_map': {
                    'destination': 'path',
                    'origin': 'path',
                    'avoid': 'query',
                    'connections': 'query',
                    'datasource': 'query',
                    'flag': 'query',
                    'if_none_match': 'header',
                },
                'collection_format_map': {
                    'avoid': 'csv',
                    'connections': 'csv',
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client
        )

    def get_route_origin_destination(
        self,
        destination,
        origin,
        **kwargs
    ):
        """Get route  # noqa: E501

        Get the systems between origin and destination  --- Alternate route: `/dev/route/{origin}/{destination}/`  Alternate route: `/legacy/route/{origin}/{destination}/`  Alternate route: `/v1/route/{origin}/{destination}/`  --- This route is cached for up to 86400 seconds  # noqa: E501
        This method makes a synchronous HTTP request by default. To make an
        asynchronous HTTP request, please pass async_req=True

        >>> thread = api.get_route_origin_destination(destination, origin, async_req=True)
        >>> result = thread.get()

        Args:
            destination (int): destination solar system ID
            origin (int): origin solar system ID

        Keyword Args:
            avoid ([int]): avoid solar system ID(s). [optional]
            connections ([[int]]): connected solar system pairs. [optional]
            datasource (str): The server name you would like data from. [optional] if omitted the server will use the default value of "tranquility"
            flag (str): route security preference. [optional] if omitted the server will use the default value of "shortest"
            if_none_match (str): ETag from a previous request. A 304 will be returned if this matches the current ETag. [optional]
            _return_http_data_only (bool): response data without head status
                code and headers. Default is True.
            _preload_content (bool): if False, the urllib3.HTTPResponse object
                will be returned without reading/decoding response data.
                Default is True.
            _request_timeout (int/float/tuple): timeout setting for this request. If
                one number provided, it will be total request timeout. It can also
                be a pair (tuple) of (connection, read) timeouts.
                Default is None.
            _check_input_type (bool): specifies if type checking
                should be done one the data sent to the server.
                Default is True.
            _check_return_type (bool): specifies if type checking
                should be done one the data received from the server.
                Default is True.
            _spec_property_naming (bool): True if the variable names in the input data
                are serialized names, as specified in the OpenAPI document.
                False if the variable names in the input data
                are pythonic names, e.g. snake case (default)
            _content_type (str/None): force body content-type.
                Default is None and content-type will be predicted by allowed
                content-types and body.
            _host_index (int/None): specifies the index of the server
                that we want to use.
                Default is read from the configuration.
            _request_auths (list): set to override the auth_settings for an a single
                request; this effectively ignores the authentication
                in the spec for a single request.
                Default is None
            async_req (bool): execute request asynchronously

        Returns:
            [int]
                If the method is called asynchronously, returns the request
                thread.
        """
        kwargs['async_req'] = kwargs.get(
            'async_req', False
        )
        kwargs['_return_http_data_only'] = kwargs.get(
            '_return_http_data_only', True
        )
        kwargs['_preload_content'] = kwargs.get(
            '_preload_content', True
        )
        kwargs['_request_timeout'] = kwargs.get(
            '_request_timeout', None
        )
        kwargs['_check_input_type'] = kwargs.get(
            '_check_input_type', True
        )
        kwargs['_check_return_type'] = kwargs.get(
            '_check_return_type', True
        )
        kwargs['_spec_property_naming'] = kwargs.get(
            '_spec_property_naming', False
        )
        kwargs['_content_type'] = kwargs.get(
            '_content_type')
        kwargs['_host_index'] = kwargs.get('_host_index')
        kwargs['_request_auths'] = kwargs.get('_request_auths', None)
        kwargs['destination'] = \
            destination
        kwargs['origin'] = \
            origin
        return self.get_route_origin_destination_endpoint.call_with_http_info(**kwargs)

