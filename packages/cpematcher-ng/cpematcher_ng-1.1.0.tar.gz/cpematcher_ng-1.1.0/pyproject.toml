[tool.poetry]
name = "cpematcher-ng"
version = "1.1.0"
description = "Match and compare CPEs."
homepage = "https://github.com/onekey-sec/cpematcher-ng"
authors = ["ONEKEY <support@onekey.com>", "alertot SpA"]
license = "MIT"
readme = "README.md"
keywords = ["security", "cpe", "cve"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Security"]
packages = [
    { include = "cpematcher" },
]

[tool.poetry.urls]
"GitHub" = "https://github.com/onekey-sec/cpematcher-ng"
"Bug Tracker" = "https://github.com/onekey-sec/cpematcher-ng/issues"

[tool.poetry.dependencies]
python = "^3.8.0"
natsort = "^8.4.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pre-commit = "^3.5.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"

[tool.ruff.lint]
select = [
  "C90",    # mccabe
  "C4",     # flake8-comprehensions
  "COM818", # flake8-commas; trailing-comma-on-bare-tuple
  "E",      # pycodestyle (errors)
  "F",      # pyflakes
  "I",      # isort
  "ISC",    # flake8-implicit-str-concats
  "PIE",    # flake8-pie
  "RUF",    # ruff's own lints
  "SIM",    # flake8-simplify
  "W",      # pycodestyle (warnings)
]

ignore = [
  "E501",    # line-too-long: Let black handle line length violations
  "RUF012",  # mutable-class-default: Wants to annotate things like `__mapper_args__` with `ClassVar`, producing noise
]

[tool.ruff.lint.mccabe]
max-complexity = 5
