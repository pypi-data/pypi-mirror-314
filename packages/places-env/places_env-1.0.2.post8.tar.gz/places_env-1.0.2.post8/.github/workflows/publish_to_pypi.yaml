name: Publish to PyPI

on:
  push:
    branches:
      - main

jobs:

  test:
    uses: ./.github/workflows/test.yaml

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Python version from pyproject.toml
        run: |
          PYTHON_VERSION=$(grep "requires-python" pyproject.toml | sed -E 's/.*>=([0-9]+\.[0-9]+).*/\1/')
          echo "PYTHON_VERSION=$PYTHON_VERSION" >> $GITHUB_ENV

      - name: Cache uv dependencies
        uses: actions/cache@v3
        with:
          path: ~/.uv
          key: uv-dependencies-${{ runner.os }}-${{ hashFiles('pyproject.toml') }}
          restore-keys: |
            uv-dependencies-${{ runner.os }}-

      - name: Install uv
        uses: astral-sh/setup-uv@v4

      - name: Set up Python
        run: uv python install ${{ env.PYTHON_VERSION }}

      - name: Sync dependencies
        run: uv sync --all-extras --dev

      - name: Build and Publish to PyPI
        run: |
          uv build
          uv run twine upload dist/* \
            -u __token__ -p ${{ secrets.PYPI_API_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          make_latest: true
          name: ${{ steps.version.outputs.version }}
          tag_name: ${{ steps.version.outputs.version }}