Metadata-Version: 2.1
Name: llama-index-readers-jira
Version: 0.4.1
Summary: llama-index readers jira integration
License: MIT
Keywords: jira
Author: Your Name
Author-email: you@example.com
Maintainer: bearguy
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Dist: jira (>=3.6.0,<4.0.0)
Requires-Dist: llama-index-core (>=0.12.0,<0.13.0)
Description-Content-Type: text/markdown

# JIRA Reader

```bash
pip install llama-index-readers-jira
```

The Jira loader returns a set of issues based on the query provided to the dataloader.
We can follow three methods to initialize the loader-
1- basic_auth -> this takes a dict with the following keys
`basic_auth:{
"email": "email",
"api_token": "token",
"server_url": "server_url"
}`
2- Oauth2 -> this takes a dict with the following keys
`oauth:{
"cloud_id": "cloud_id",
"api_token": "token"
}`
3- Personal access Token with Server hosted instance
`PATauth:{
"server_url": "server_url",
"api_token": "token"
}`

You can follow this link for more information regarding Oauth2 -> https://developer.atlassian.com/cloud/confluence/oauth-2-3lo-apps/

## Usage

Here's an example of how to use it

```python
from llama_index.readers.jira import JiraReader

reader = JiraReader(
    email=email, api_token=api_token, server_url="your-jira-server.com"
)
documents = reader.load_data(query="project = <your-project>")
```

Alternately, you can also use download_loader from llama_index

```python
from llama_index.readers.jira import JiraReader

reader = JiraReader(
    email=email, api_token=api_token, server_url="your-jira-server.com"
)
documents = reader.load_data(query="project = <your-project>")
```

