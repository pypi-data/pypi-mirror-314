[tool.poetry]
name = "earthscale"
version = "0.12.0"
description = "Earthscale SDK"
authors = [
    "Noah Golmant <noah@earthscale.ai>",
    "Bernhard Stadlbauer <bernhard@earthscale.ai",
]
# We use the readme from the docs folder for the PyPI page
# to hide our developer-facing docs from the public
readme = "docs/README.md"
packages = [
    { include = "earthscale", from = "." },
]

[tool.poetry.scripts]
earthscale = "earthscale.cli:cli"

[tool.poetry.dependencies]
python = "^3.10"
# 0.1.6 does not have a macos release
# https://github.com/vincentsarago/color-operations/issues/15
color-operations = "0.1.5"
dask = {extras = ["distributed"], version = "^2024.5.1"}
earthengine-api = "^0.1.379"
geocube = "^0.5.2"
geopandas = "^0.14.1"
loguru = "^0.7.2"
networkx = "^3.3"
numpy = "^1.26.4"
odc-geo = "^0.4.6"
odc-stac = "^0.3.9"
pydantic = "^2.7.4"
pyogrio = "^0.8.0"
pyproj = "^3.6.1"
rasterio = "^1.3.11"
requests = "^2.32.3"
rio-stac = "^0.8.1"
rio-tiler = {extras = ["xarray"], version = "^6.6.1"}
rioxarray = "^0.15.5"
shapely = "^2.0.4"
supabase = "^2.5.1"
types-requests = "^2.32.0"
xarray = "^2023.11.0"
zarr = "^2.18.1"

# Optional heavy dependencies
torch = { version = "^2.3.0", optional = true }
gcsfs = "^2024.6.0"
morecantile = "^5.3.0"
pystac-client = "^0.8.2"
stac-pydantic = "^3.1.2"
xee = "^0.0.15"
s3fs = "^2024.9.0"
contextily = "^1.6.2"
pmtiles = "^3.4.1"
uuid-utils = "^0.10.0"

[tool.poetry.extras]
ai = ["torch"]

[tool.poetry.group.dev.dependencies]
bokeh = "^3.4.1"
jupyterlab = "^4.1.8"
matplotlib = "^3.9.0"
mypy = "^1.10.0"
pandas-stubs = "^2.2.2.240603"
pre-commit = "^3.7.0"
ruff = "^0.4.8"
tqdm = "^4.66.4"
notebook = "^7.2.1"
pytest = "^8.2.2"
toml = "^0.10.2"
types-toml = "^0.10.8.20240310"
requests-mock = "^1.12.1"
mercantile = "^1.2.1"
psycopg2-binary = "^2.9.9"
sentry-sdk = "^2.18.0"
types-tqdm = "^4.66.0.20240417"

[tool.poetry.group.backend.dependencies]
fastapi = "^0.111.0"
gunicorn = "^23.0.0"
sentry-sdk = "^2.18.0"
openai = "^1.54.3"
tiktoken = "^0.8.0"

[tool.poetry.group.docs.dependencies]
mkdocs-jupyter = "^0.24.7"
mkdocs-material = "^9.5.20"
mkdocstrings = "^0.25.0"
mkdocstrings-python = "^1.10.0"
pymdown-extensions = "^10.8.1"

[tool.poetry.group.tiler.dependencies]
flask = "^3.0.3"
functions-framework = "^3.7.0"
pillow = "^10.4.0"
titiler = "^0.18.2"
mapbox-vector-tile = "^2.1.0"
sentry-sdk = "^2.18.0"
cachetools = "^5.5.0"

[tool.poetry.group.core.dependencies]
pydantic-settings = "^2.3.3"

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = [
    "B",    # flak8 bugbear
    "C",    # pylint
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "I",    # isort
    "RUF",  # ruff specific rules
    "SIM",  # flake8-simplify
    "T20",  # flak8-print
    "UP",   # pyupgrade
    "W",    # pycodestyle warnigs
]

[tool.mypy]
files = "."  # Run on all files
python_version = "3.10"
strict = true
no_namespace_packages = true
exclude = [
    "tmp/",
    "demo/"
]
plugins = [
    "pydantic.mypy",
]

[[tool.mypy.overrides]]
module = "affine"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rio_stac.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tqdm"
ignore_missing_imports = true


[[tool.mypy.overrides]]
# Not type hints available in shapely
# https://github.com/shapely/shapely/issues/721
module = "shapely"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# Not type hints available in shapely
# https://github.com/shapely/shapely/issues/721
module = "shapely.geometry"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# Not type hints available in shapely
# https://github.com/shapely/shapely/issues/721
module = "shapely.geometry.base"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mapbox_vector_tile"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# Not type hints available in shapely
# https://github.com/shapely/shapely/issues/721
module = "shapely.wkt"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# Typing in earthengine is really off
module = "ee"
follow_imports = "skip"

[[tool.mypy.overrides]]
module = "gotrue"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gotrue.auth"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gotrue.errors"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in geopandas
# https://github.com/geopandas/geopandas/issues/3091
module = "geopandas"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in rasterio
# https://github.com/rasterio/rasterio/issues/2322
module = "rasterio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in rasterio
# https://github.com/rasterio/rasterio/issues/2322
module = "rasterio.warp"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in rasterio
# https://github.com/rasterio/rasterio/issues/2322
module = "rasterio.transform"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in rasterio
# https://github.com/rasterio/rasterio/issues/2322
module = "rasterio.errors"
ignore_missing_imports = true

[[tool.mypy.overrides]]
# No typing stubs in rasterio
# https://github.com/rasterio/rasterio/issues/2322
module = "rasterio.io"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyogrio"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "networkx"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "contextily"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "networkx.readwrite"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fsspec"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fsspec.generic"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "osgeo"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.cloud"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google.cloud.storage"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mercantile"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg2"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg2.extensions"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "psycopg2.extras"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fiona"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "google"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "googleapiclient"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "googleapiclient.discovery"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "googleapiclient.errors"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "cachetools"
ignore_missing_imports = true

[tool.pytest.ini_options]
addopts = "--dont-stop-supabase"
testpaths = [
    "tests",
]
markers = [
    "regression: Tests with this marker will only be run when --regresssion is passed",
]
log_cli = true
log_cli_level = "INFO"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
