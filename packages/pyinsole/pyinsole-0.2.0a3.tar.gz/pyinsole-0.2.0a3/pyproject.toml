[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pyinsole"
dynamic = ["version"]
description = "Asynchronous message dispatcher for concurrent tasks processing"
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["asyncio", "message", "dispatcher", "tasks", "microservices"]
authors = [
  { name = "Eduardo Neto", email = "edopneto@gmail.com" },
  { name = "Christian Hartung", email = "hartung@live.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
  "Topic :: System :: Distributed Computing",
]
dependencies = [
    "aiobotocore>=2.15",
    "botocore",
]

[project.optional-dependencies]
sentry = ["sentry-sdk>=2.0"]

[project.urls]
Documentation = "https://github.com/pyinsole/pyinsole#readme"
Issues = "https://github.com/pyinsole/pyinsole/issues"
Source = "https://github.com/pyinsole/pyinsole"

[tool.coverage.run]
source_pkgs = ["pyinsole", "tests"]
branch = true
parallel = true
omit = [
  "src/pyinsole/__about__.py",
]

[tool.coverage.paths]
pyinsole = ["src/pyinsole", "*/pyinsole/src/pyinsole"]
tests = ["tests", "*/pyinsole/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.deptry]
known_first_party = ["pyinsole"]

[tool.hatch.version]
source = "vcs"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "faker",
  "pytest-asyncio",
  "pytest-cov",
  "pytest-deadfixtures",
  "pytest",
]

[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.11", "3.12", "3.13"]

[tool.hatch.envs.style]
detached = true
dependencies = [
    "deptry",
    "pre-commit",
]

[tool.hatch.envs.hatch-static-analysis]
config-path = "ruff_defaults.toml"
dependencies = ["ruff==0.7.4"]

[tool.hatch.envs.style.scripts]
deps = "deptry ."
lint = "pre-commit run -a -v"
update = "pre-commit autoupdate"
check = [
  "deps",
  "lint",
]

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/pyinsole tests}"

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["src"]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.ruff]
extend = "ruff_defaults.toml"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "parents"
