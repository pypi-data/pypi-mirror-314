name: Publish

on:
  push:
    tags:
      - v*
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9"]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
          cache-dependency-path: 'pyproject.toml'

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.os }}

      - name: Setup rust targets (MacOS)
        run: |
          rustup toolchain install stable-x86_64-apple-darwin
          rustup target add x86_64-apple-darwin
          rustup toolchain install stable-aarch64-apple-darwin
          rustup target add aarch64-apple-darwin
        if: matrix.os == 'macos-latest'

      - name: Setup rust targets (Windows)
        run: |
          rustup toolchain install stable-x86_64-pc-windows-msvc
          rustup target add x86_64-pc-windows-msvc
          rustup toolchain install stable-i686-pc-windows-msvc
          rustup target add i686-pc-windows-msvc
        if: matrix.os == 'windows-latest'

      - name: Install dependencies
        run: make develop

      - name: Make dist
        run: |
          make dist-py-sdist
          make dist-py-wheel
          make dist-check
        if: matrix.os == 'ubuntu-latest'

      - name: Make dist
        run: |
          make dist-py-wheel
          make dist-check
        env:
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=11.0
        if: matrix.os != 'ubuntu-latest'

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{matrix.os}}
          path: dist

