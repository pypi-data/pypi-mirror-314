Metadata-Version: 2.1
Name: marketing-analytics-toolkit
Version: 0.1.0
Summary: Advanced marketing analytics toolkit for customer segmentation and analysis
Home-page: https://github.com/yourusername/marketing-analytics-toolkit
Author: Anil Cogalan
Author-email: anilcogalan@gmail.com
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.19.2
Requires-Dist: pandas>=1.2.0
Requires-Dist: scikit-learn>=0.24.0
Requires-Dist: tensorflow>=2.4.0
Requires-Dist: networkx>=2.5
Requires-Dist: plotly>=4.14.0
Requires-Dist: lifelines>=0.25.0
Requires-Dist: xgboost>=1.3.0
Requires-Dist: shap>=0.40.0
Requires-Dist: category_encoders>=2.3.0
Requires-Dist: feature-engine>=1.2.0
Requires-Dist: optuna>=2.10.0
Requires-Dist: umap-learn>=0.5.3
Requires-Dist: scipy>=1.7.0
Requires-Dist: statsmodels>=0.13.0
Provides-Extra: dev
Requires-Dist: pytest>=6.2.0; extra == "dev"
Requires-Dist: pytest-cov>=2.12.0; extra == "dev"
Requires-Dist: sphinx>=4.0.0; extra == "dev"
Requires-Dist: sphinx-rtd-theme>=0.5.0; extra == "dev"

# Marketing Analytics Toolkit

Advanced marketing analytics toolkit for customer segmentation and analysis.

## Features

- Advanced customer segmentation
- Marketing mix optimization
- Customer lifecycle analysis
- Channel attribution modeling
- Pricing optimization
- Visualization tools

## Installation 

```bash
pip install marketing-analytics-toolkit
```


## Quick Start

```python
from marketing_analytics.models import AdvancedSegmentationModel

### Initialize model
model = AdvancedSegmentationModel(n_segments=3)

### Fit and predict segments
segments = model.fit_predict(X)

### Get segment recommendations
recommendations = model.get_segment_recommendations(0, X)
```

## Documentation

For more detailed documentation, please refer to the [documentation]("").

## Contributing

Contributions are welcome! Please feel free to submit a pull request.

