name: Build (lint and test) and deploy to beta (PyPI)

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Lint, build and test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.x"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install ruff pytest build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Python Linter (ruff)
      run: |
        ruff check
    - name: C Linter (clang)
      uses: cpp-linter/cpp-linter-action@v2.13.1
      id: linter
      env:
        GITHUB_TOKEN: ${{ secrets.CLINT_TOKEN }}
      with:
        style: 'file'
        tidy-checks: ''
        thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
    - name: Build C shared library
      run: |
        make
    - name: Running tests
      run: |
        pytest
    - name: Build alpha package
      run: |
          git tag 0.0.0a0.dev$(git rev-parse --short HEAD | cut -c 1-7 | xxd -p | tr -d '\n' | printf "%d" "0x$(cut -c 1-7)")
          python -m build
    - name: Store the distribution packages
      uses: actions/upload-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
  deploy:
    name: Publish python distribution to TestPyPI
    needs:
      - build
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/project/stmeasures
    permissions:
      id-token: write
    steps:
    - name: Download distribution
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository-url: https://test.pypi.org/legacy/
