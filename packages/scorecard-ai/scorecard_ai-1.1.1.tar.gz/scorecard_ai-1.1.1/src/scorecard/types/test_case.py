# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import pydantic
import datetime as dt
from .test_case_custom_inputs_value import TestCaseCustomInputsValue
from .test_case_custom_labels_value import TestCaseCustomLabelsValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TestCase(UncheckedBaseModel):
    id: typing.Optional[int] = pydantic.Field(default=None)
    """
    The ID of the testcase.
    """

    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The creation date and time of the testcase.
    """

    testset_id: int = pydantic.Field()
    """
    The ID of the testset the testcase belongs to.
    """

    user_query: str = pydantic.Field()
    """
    The user query for the testcase.
    """

    context: typing.Optional[str] = pydantic.Field(default=None)
    """
    The context for the testcase.
    """

    ideal: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ideal response for the testcase.
    """

    custom_inputs: typing.Optional[typing.Dict[str, typing.Optional[TestCaseCustomInputsValue]]] = None
    custom_labels: typing.Optional[typing.Dict[str, typing.Optional[TestCaseCustomLabelsValue]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
