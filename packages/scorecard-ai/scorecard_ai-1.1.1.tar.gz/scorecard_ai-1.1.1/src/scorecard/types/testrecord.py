# This file was auto-generated by Fern from our API Definition.

from ..core.unchecked_base_model import UncheckedBaseModel
import typing
import datetime as dt
import pydantic
from .testrecord_custom_inputs_value import TestrecordCustomInputsValue
from .testrecord_custom_labels_value import TestrecordCustomLabelsValue
from .testrecord_custom_outputs_value import TestrecordCustomOutputsValue
from .testrecord_model_params_value import TestrecordModelParamsValue
from .testrecord_model_debug_info_value import TestrecordModelDebugInfoValue
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Testrecord(UncheckedBaseModel):
    id: typing.Optional[int] = None
    created_at: typing.Optional[dt.datetime] = pydantic.Field(default=None)
    """
    The creation date and time of the testrecord.
    """

    run_id: typing.Optional[int] = pydantic.Field(default=None)
    """
    The ID of the run the testrecord belongs to.
    """

    testset_id: typing.Optional[int] = pydantic.Field(default=None)
    """
    The ID of the testset the testrecord belongs to.
    """

    testcase_id: typing.Optional[int] = pydantic.Field(default=None)
    """
    The ID of the testcase the testrecord belongs to.
    """

    user_query: typing.Optional[str] = pydantic.Field(default=None)
    """
    The user query for the testrecord.
    """

    context: typing.Optional[str] = pydantic.Field(default=None)
    """
    The context for the testrecord.
    """

    model_response: typing.Optional[str] = pydantic.Field(default=None)
    """
    The actual response of the model for the testrecord.
    """

    ideal: typing.Optional[str] = pydantic.Field(default=None)
    """
    The ideal response for the testrecord.
    """

    custom_inputs: typing.Optional[typing.Dict[str, typing.Optional[TestrecordCustomInputsValue]]] = None
    custom_labels: typing.Optional[typing.Dict[str, typing.Optional[TestrecordCustomLabelsValue]]] = None
    custom_outputs: typing.Optional[typing.Dict[str, typing.Optional[TestrecordCustomOutputsValue]]] = None
    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    The current status of the testrecord.
    """

    prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    The prompt used to generate the testrecord.
    """

    model_params: typing.Optional[typing.Dict[str, typing.Optional[TestrecordModelParamsValue]]] = pydantic.Field(
        default=None
    )
    """
    The model parameters used when generating the testrecord.
    """

    model_debug_info: typing.Optional[typing.Dict[str, typing.Optional[TestrecordModelDebugInfoValue]]] = (
        pydantic.Field(default=None)
    )
    """
    Debug information produced during the testrecord's generation.
    """

    error_message: typing.Optional[str] = pydantic.Field(default=None)
    """
    The error message for the testrecord.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
