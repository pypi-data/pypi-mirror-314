bids_dir: "/path/to/bids/dir"
output_dir: "/path/to/output/dir"

force: True

debug: False
derivatives: False

analysis_levels: &analysis_levels
  - participant

targets_by_analysis_level:
  participant:
    - "all"

# from autoafids_prep
pybids_inputs:
  t1w:
    filters:
      suffix: [T1w, T2w]
      extension: .nii.gz
      datatype: anat
    wildcards:
      - subject
      - session
      - acquisition
      - reconstruction
      - run

parse_args:
#---  core BIDS-app options ---
  bids_dir:
    help: The directory with the input dataset formatted according to the BIDS standard.
  
  output_dir:
    help: The directory where the output files should be stored. If you are running
      group level analysis this folder should be prepopulated with the results of
      the participant level analysis.
      
  analysis_level:
    help: Level of the analysis that will be performed
    choices: *analysis_levels

  --participant_label:
      help: The label(s) of the participant(s) that should be analyzed. The label
            corresponds to sub-<participant_label> from the BIDS spec (so it does
            not include "sub-"). If this parameter is not provided, all subjects
            will be analyzed. Multiple participants can be specified with a space
            seperated list.
      nargs: "+"

  --exclude_participant_label:
      help: The label(s) of the participant(s) that should be excluded. The label
            corresponds to sub-<participant_label> from the BIDS spec (so it does
            not include "sub-"). If this parameter is not provided, all subjects
            will be analyzed. Multiple participants can be specified with a space
            sepearated list.
      nargs: "+"

  --acq:
      help: 'The acquisition sequence of the T1w image (e.g. MP2RAGE). (default: %(default)s)'
      default: MP2RAGE
      nargs: "?"

  --profile:
      help: 'Specify the profile and configration for preprocessing. (default: %(default)s)'
      choices: ['slow','medium','fast','superfast']
      default: 'fast'

  --norm:
      help: 'Specify the normalization scheme for images as a binary choice. {0 = z-score, 1 = min-max , 2 = tissue-based [notavailable]}. (default: %(default)s)'
      choices: ['0', '1']
      default: '0'  # Default to 0, which represents z-score normalization

  --res:
      help: 'Specify the resampling resolution (e.g. "100" for 1mm) for images, any resolution is supported but limited to isotropic resampling. (default: %(default)s)'
      default: '100'  # Default to 1 
    
  --template: 
      help: 'Specify the template to use (e.g., T1w or T2w).'
      default: 'T1w'

  --derivatives:
      help: 'Path(s) to a derivatives dataset, for folder(s) that contains multiple
        derivatives datasets (default: %(default)s) '
      default: false
      nargs: +

  --model:
      help: 'Type of machine learning model to apply.'
      default: 'default'
      required: false

  --enable-bids-validation:
    help: |
      Enable validation of BIDS dataset. BIDS validation would be performed
      using the bids-validator plugin (if installed/enabled) or with the pybids
      validator implementation (if bids-validator is not installed/enabled).
    dest: "plugins.validator.skip"
    action: "store_false"
    default: True

#--- workflow specific configuration ---

# Nifti template
templatet1w: 'resources/tpl-MNI152NLin2009cAsym_res-01_T1w.nii.gz'
templatet2w: 'resources/tpl-MNI152NLin2009cAsym_res-01_T2w.nii.gz'

# AFIDs fcsv template
fcsv: 'resources/dummy.fcsv'
fcsv_mni: 'resources/tpl-MNI152NLin2009cAsym_res-01_desc-groundtruth_afids.fcsv'

singularity:
  synthstrip: docker://freesurfer/synthstrip:1.3

# It will be downloaded to ~/.cache/autoafids
resource_urls:
  default: 'zenodo.org/records/14284289/files/model-combined.afidsmodel'
  synthSR: 'zenodo.org/records/14284290/files/model-combined.afidsmodel' # dummy file which doesn't exist

plugins.validator.skip: False