[build-system]
requires = ['setuptools', 'pyscipopt', 'cython >=3.0.0']
build-backend = "setuptools.build_meta"

[project]
name = "PyGCGOpt"
description = "Python interface and modeling environment for GCG"
authors = [
    {name = "Lehrstuhl fÃ¼r Operations Research - RWTH Aachen University", email = "gcg-bugs@or.rwth-aachen.de"},
]
dependencies = ["pyscipopt"]
requires-python = ">=3.8"
readme = "README.md"
license = {text = "MIT"}
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Cython",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/SCIP-Interfaces/PyGCGOpt"

[tool.pytest.ini_options]
norecursedirs = ["check"]
testpaths = ["tests"]

[tool.setuptools]
include-package-data = false

[tool.setuptools.dynamic]
version = {attr = "pygcgopt.__version__"}

[tool.cibuildwheel]
skip="pp*" # currently doesn't work with PyPy
manylinux-x86_64-image = "manylinux_2_28"

[tool.cibuildwheel.linux]
skip="pp* cp36* cp37* *musllinux*"
before-all = [
    "(apt-get update && apt-get install --yes wget) || yum install -y wget zlib libgfortran || brew install wget",
    "wget https://github.com/jurgen-lentz/scipoptsuite-deploy/releases/download/v0.5.0/libscip-linux.zip -O gcg.zip",
    "unzip gcg.zip",
    ]
environment = {PIP_NO_BINARY="pyscipopt", SCIPOPTDIR="$(pwd)/scip_install", GCGOPTDIR="$(pwd)/scip_install", LD_LIBRARY_PATH="$(pwd)/scip_install/lib:$LD_LIBRARY_PATH", DYLD_LIBRARY_PATH="$(pwd)/scip_install/lib:$DYLD_LIBRARY_PATH", PATH="$(pwd)/scip_install/bin:$PATH", PKG_CONFIG_PATH="$(pwd)/scip_install/lib/pkgconfig:$PKG_CONFIG_PATH", RELEASE="true"}

[tool.cibuildwheel.macos]
skip="pp* cp36* cp37*"
before-all = '''
#!/bin/bash
brew install wget zlib gcc
if [[ $CIBW_ARCHS == *"arm"* ]]; then
    wget https://github.com/jurgen-lentz/scipoptsuite-deploy/releases/download/v0.5.0/libscip-macos-arm.zip -O gcg.zip
    export MACOSX_DEPLOYMENT_TARGET=14.0
else
    wget https://github.com/jurgen-lentz/scipoptsuite-deploy/releases/download/v0.5.0/libscip-macos.zip -O gcg.zip
    export MACOSX_DEPLOYMENT_TARGET=13.0
fi
unzip gcg.zip
'''
environment = {PIP_NO_BINARY="pyscipopt", SCIPOPTDIR="$(pwd)/scip_install", GCGOPTDIR="$(pwd)/scip_install", LD_LIBRARY_PATH="$(pwd)/scip_install/lib:LD_LIBRARY_PATH", DYLD_LIBRARY_PATH="$(pwd)/scip_install/lib:$DYLD_LIBRARY_PATH", PATH="$(pwd)/scip_install/bin:$PATH", PKG_CONFIG_PATH="$(pwd)/scip_install/lib/pkgconfig:$PKG_CONFIG_PATH", RELEASE="true"}
repair-wheel-command = '''
    bash -c '
    if [[ $CIBW_ARCHS == *"arm"* ]]; then
        export MACOSX_DEPLOYMENT_TARGET=14.0
        delocate-listdeps {wheel}
        delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
    else
        export MACOSX_DEPLOYMENT_TARGET=13.0
        delocate-listdeps {wheel}
        delocate-wheel --require-archs {delocate_archs} -w {dest_dir} {wheel}
    fi
    '
'''

[tool.cibuildwheel.windows]
skip="pp* cp36* cp37*"
before-all = [
    "choco install 7zip wget",
    "wget https://github.com/jurgen-lentz/scipoptsuite-deploy/releases/download/v0.5.0/libscip-windows.zip -O gcg.zip",
    "\"C:\\Program Files\\7-Zip\\7z.exe\" x \"gcg.zip\" -o\"gcg-test\"",
    "mv .\\gcg-test\\scip_install .\\test",
    "mv .\\test .\\gcg"
]
before-build = "pip install delvewheel"
environment = {PIP_NO_BINARY="pyscipopt",SCIPOPTDIR='D:\\a\\PyGCGOpt\\PyGCGOpt\\gcg', GCGOPTDIR='D:\\a\\PyGCGOpt\\PyGCGOpt\\gcg', RELEASE="true" }
repair-wheel-command = "delvewheel repair --add-path c:/bin;c:/lib;c:/bin/src;c:/lib/src;D:/a/PyGCGOpt/PyGCGOpt/gcg/;D:/a/PyGCGOpt/PyGCGOpt/gcg/lib/;D:/a/PyGCGOpt/PyGCGOpt/gcg/bin/ -w {dest_dir} {wheel}"
