[build-system]
requires = [
    "pip",
    "setuptools>=42",
    "scikit-build",
    "cmake>=3.20",
    "ninja",
    "pybind11>=2.6",
    "libcasm-global>=2.0.5",
    "libcasm-xtal>=2.0a10",
]
build-backend = "setuptools.build_meta"

[project]
name = "libcasm-clexulator"
version = "2.0a7"
authors = [
  { name="CASM developers", email="casm-developers@lists.engr.ucsb.edu" },
]
description = "CASM clexulator"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "LGPL2.1+"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Programming Language :: C++",
    "License :: OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "Topic :: Scientific/Engineering",
]
dependencies = [
    "libcasm-global>=2.0.5",
    "libcasm-xtal>=2.0a10",
    "numpy",
]

[project.urls]
Homepage = "https://prisms-center.github.io/CASMcode_docs/"
Repository = "https://github.com/prisms-center/CASMcode_clexulator"

[tool.pytest.ini_options]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "very_slow: marks tests as very slow (deselect with '-m \"not very_slow\"')",
]

[build_sphinx]
source-dir = "doc"
build-dir  = "doc/build"
all_files  = 1

[tool.ruff.lint]
select = ["NPY201", "E", "F", "I"]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.lint.isort]
known-first-party = ["libcasm", "casm"]

[tool.cibuildwheel]
# Build for python3.9, 3.10, 3.11, 3.12
build = "cp39-* cp310-* cp311-* cp312-*"
# Build for cpython only
skip =  "pp*"

# Need libcasm-global at wheel repair stage
before-build = "pip install -r build_requirements.txt"

# Testing
test-requires = "pytest pytest-datadir"
test-command = [
    "export CASM_PREFIX=$(python -m libcasm.casmglobal --prefix)",
    "echo $CASM_PREFIX",
    "pytest -rsap {project}/python/tests",
]

[tool.cibuildwheel.macos]
# C++17
environment = { MACOSX_DEPLOYMENT_TARGET="10.15" }

repair-wheel-command = ""

[tool.cibuildwheel.linux]
# dependencies do not build for musl
skip = ["pp* *musllinux*"]

repair-wheel-command = ""