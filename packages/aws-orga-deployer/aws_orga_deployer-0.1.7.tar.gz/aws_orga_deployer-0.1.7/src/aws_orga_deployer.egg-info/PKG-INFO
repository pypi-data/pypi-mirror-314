Metadata-Version: 2.1
Name: aws-orga-deployer
Version: 0.1.7
Summary: Deploy infrastructure-as-code at the scale of an AWS organization
Home-page: https://github.com/malaval/aws-orga-deployer/
Author: Nicolas Malaval
Author-email: malavaln@gmail.com
Project-URL: Documentation, https://malaval.github.io/aws-orga-deployer/
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: boto3
Requires-Dist: pyyaml
Requires-Dist: networkx
Requires-Dist: jsonschema
Provides-Extra: dev
Requires-Dist: coverage; extra == "dev"
Requires-Dist: black==23.*; extra == "dev"
Requires-Dist: isort==5.13.*; extra == "dev"
Requires-Dist: isort[pyproject]; extra == "dev"
Requires-Dist: mypy==1.11.*; extra == "dev"
Requires-Dist: pylint==3.3.*; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: types-jsonschema; extra == "dev"
Requires-Dist: moto[cloudformation,organizations,s3,server,ssm,sts]==4.*; extra == "dev"
Requires-Dist: build; extra == "dev"
Requires-Dist: twine; extra == "dev"

# AWS Orga Deployer

*Read the documentation: [https://malaval.github.io/aws-orga-deployer](https://malaval.github.io/aws-orga-deployer)*

*Medium story: [https://medium.com/@malavaln/why-i-built-my-own-tool-to-deploy-landing-zones-on-aws-9ed609c1cb25](https://medium.com/@malavaln/why-i-built-my-own-tool-to-deploy-landing-zones-on-aws-9ed609c1cb25)*

## Introduction

AWS Orga Deployer makes it easier to deploy and manage infrastructure-as-code at the scale of an AWS organization. It enables to deploy Terraform or CloudFormation templates and to execute Python scripts in multiple AWS accounts and multiple regions, making it particularly suitable for building AWS foundations (or Landing Zones).

To get started, develop modules (Terraform or CloudFormation templates or Python scripts), create a package definition file to specify which modules to deploy in which accounts and regions and using which parameters, and let AWS Orga Deployer deploy modules and manage dependencies between deployments.

## Installation

AWS Orga Deployer is a Python package with a command-line interface. To install it and check that it works:

```bash
pip install aws-orga-deployer
aws-orga-deployer --help
```

## Documentation

The documentation is available at [https://malaval.github.io/aws-orga-deployer](https://malaval.github.io/aws-orga-deployer). For an example of how to use AWS Orga Deployer,  read the [Getting Started](https://malaval.github.io/aws-orga-deployer/getting-started.html) page.

MIT License

Copyright (c) 2023 Nicolas Malaval

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
