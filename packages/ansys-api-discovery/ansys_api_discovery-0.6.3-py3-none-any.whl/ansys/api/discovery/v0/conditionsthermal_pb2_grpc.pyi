"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import ansys.api.discovery.v0.conditionsthermal_pb2
import ansys.api.discovery.v0.discoverymodels_pb2
import grpc

class ConditionsThermalStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    CreateHeatVolumetricTotal: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatTotalCreationResponse] = ...
    """Heat condition methods"""

    CreateHeatVolumetricDistributed: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatVolumetricDistributedCreationResponse] = ...

    CreateHeatSurfaceTotal: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatTotalCreationResponse] = ...

    CreateHeatSurfaceDistributed: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.HeatSurfaceDistributedCreationResponse] = ...

    ChangeHeatLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeTotalHeat: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatPerUnitVolume: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatPerUnitArea: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeHeatSpecification: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.ChangeHeatSpecificationRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    CreateTemperatureVolumetric: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationResponse] = ...
    """Temperature condition methods"""

    CreateTemperatureSurface: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationResponse] = ...

    ChangeTemperatureLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeTemperatureMagnitude: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    CreateInsulated: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.InsulatedCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.InsulatedCreationResponse] = ...
    """Insulated condition methods"""

    ChangeInsulatedLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    CreateConvection: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.conditionsthermal_pb2.ConvectionCreationRequest,
        ansys.api.discovery.v0.conditionsthermal_pb2.ConvectionCreationResponse] = ...
    """Convection condition methods"""

    ChangeConvectionLocation: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeConvectionCoefficientMagnitude: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...

    ChangeConvectionTemperatureMagnitude: grpc.UnaryUnaryMultiCallable[
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse] = ...


class ConditionsThermalServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def CreateHeatVolumetricTotal(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.HeatTotalCreationResponse:
        """Heat condition methods"""
        pass

    @abc.abstractmethod
    def CreateHeatVolumetricDistributed(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.HeatVolumetricDistributedCreationResponse: ...

    @abc.abstractmethod
    def CreateHeatSurfaceTotal(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.HeatTotalCreationResponse: ...

    @abc.abstractmethod
    def CreateHeatSurfaceDistributed(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.HeatCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.HeatSurfaceDistributedCreationResponse: ...

    @abc.abstractmethod
    def ChangeHeatLocation(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeTotalHeat(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitVolume(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatPerUnitArea(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeHeatSpecification(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.ChangeHeatSpecificationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def CreateTemperatureVolumetric(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationResponse:
        """Temperature condition methods"""
        pass

    @abc.abstractmethod
    def CreateTemperatureSurface(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.TemperatureCreationResponse: ...

    @abc.abstractmethod
    def ChangeTemperatureLocation(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationExtendedRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeTemperatureMagnitude(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def CreateInsulated(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.InsulatedCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.InsulatedCreationResponse:
        """Insulated condition methods"""
        pass

    @abc.abstractmethod
    def ChangeInsulatedLocation(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def CreateConvection(self,
        request: ansys.api.discovery.v0.conditionsthermal_pb2.ConvectionCreationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.conditionsthermal_pb2.ConvectionCreationResponse:
        """Convection condition methods"""
        pass

    @abc.abstractmethod
    def ChangeConvectionLocation(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeLocationRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeConvectionCoefficientMagnitude(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...

    @abc.abstractmethod
    def ChangeConvectionTemperatureMagnitude(self,
        request: ansys.api.discovery.v0.discoverymodels_pb2.ChangeQuantityRequest,
        context: grpc.ServicerContext,
    ) -> ansys.api.discovery.v0.discoverymodels_pb2.ChangeResponse: ...


def add_ConditionsThermalServicer_to_server(servicer: ConditionsThermalServicer, server: grpc.Server) -> None: ...
