# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from viaduct.dao.v1 import dao_pb2 as viaduct_dot_dao_dot_v1_dot_dao__pb2


class DaoServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Query = channel.unary_stream(
                '/viaduct.dao.v1.DaoService/Query',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryResponse.FromString,
                )
        self.CreateConnection = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/CreateConnection',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionResponse.FromString,
                )
        self.ListConnections = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/ListConnections',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsResponse.FromString,
                )
        self.DeleteConnection = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/DeleteConnection',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionResponse.FromString,
                )
        self.CreateQueryEngine = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/CreateQueryEngine',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineResponse.FromString,
                )
        self.SetDefaultQueryEngine = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/SetDefaultQueryEngine',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineResponse.FromString,
                )
        self.ListQueryEngines = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/ListQueryEngines',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesResponse.FromString,
                )
        self.DeleteQueryEngine = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/DeleteQueryEngine',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineResponse.FromString,
                )
        self.CreateDataSource = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/CreateDataSource',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceResponse.FromString,
                )
        self.ListDataSources = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/ListDataSources',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesResponse.FromString,
                )
        self.DeleteDataSource = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/DeleteDataSource',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceResponse.FromString,
                )
        self.CreateOrganization = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/CreateOrganization',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationResponse.FromString,
                )
        self.GetOrganization = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/GetOrganization',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationResponse.FromString,
                )
        self.ListOrganizations = channel.unary_unary(
                '/viaduct.dao.v1.DaoService/ListOrganizations',
                request_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsRequest.SerializeToString,
                response_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsResponse.FromString,
                )


class DaoServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Query(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateConnection(self, request, context):
        """Connection
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConnections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteConnection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateQueryEngine(self, request, context):
        """Query Engine
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetDefaultQueryEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListQueryEngines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteQueryEngine(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDataSource(self, request, context):
        """DataSource
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataSources(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataSource(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateOrganization(self, request, context):
        """Organization Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrganization(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListOrganizations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DaoServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Query': grpc.unary_stream_rpc_method_handler(
                    servicer.Query,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryResponse.SerializeToString,
            ),
            'CreateConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateConnection,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionResponse.SerializeToString,
            ),
            'ListConnections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConnections,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsResponse.SerializeToString,
            ),
            'DeleteConnection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteConnection,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionResponse.SerializeToString,
            ),
            'CreateQueryEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateQueryEngine,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineResponse.SerializeToString,
            ),
            'SetDefaultQueryEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.SetDefaultQueryEngine,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineResponse.SerializeToString,
            ),
            'ListQueryEngines': grpc.unary_unary_rpc_method_handler(
                    servicer.ListQueryEngines,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesResponse.SerializeToString,
            ),
            'DeleteQueryEngine': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteQueryEngine,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineResponse.SerializeToString,
            ),
            'CreateDataSource': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDataSource,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceResponse.SerializeToString,
            ),
            'ListDataSources': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataSources,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesResponse.SerializeToString,
            ),
            'DeleteDataSource': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataSource,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceResponse.SerializeToString,
            ),
            'CreateOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateOrganization,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationResponse.SerializeToString,
            ),
            'GetOrganization': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrganization,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationResponse.SerializeToString,
            ),
            'ListOrganizations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListOrganizations,
                    request_deserializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsRequest.FromString,
                    response_serializer=viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'viaduct.dao.v1.DaoService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DaoService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Query(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/viaduct.dao.v1.DaoService/Query',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.QueryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/CreateConnection',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConnections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/ListConnections',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListConnectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteConnection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/DeleteConnection',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteConnectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateQueryEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/CreateQueryEngine',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateQueryEngineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetDefaultQueryEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/SetDefaultQueryEngine',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.SetDefaultQueryEngineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListQueryEngines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/ListQueryEngines',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListQueryEnginesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteQueryEngine(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/DeleteQueryEngine',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteQueryEngineResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateDataSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/CreateDataSource',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateDataSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDataSources(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/ListDataSources',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListDataSourcesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataSource(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/DeleteDataSource',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.DeleteDataSourceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/CreateOrganization',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.CreateOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrganization(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/GetOrganization',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.GetOrganizationResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListOrganizations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/viaduct.dao.v1.DaoService/ListOrganizations',
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsRequest.SerializeToString,
            viaduct_dot_dao_dot_v1_dot_dao__pb2.ListOrganizationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
