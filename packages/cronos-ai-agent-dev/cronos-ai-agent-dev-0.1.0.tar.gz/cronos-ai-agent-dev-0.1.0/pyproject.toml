[tool.poetry]
name = "assistant-demo-nov-2024"
version = "0.1.0"
description = ""
authors = ["ken timsit <8959282+kentimsit@users.noreply.github.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
requests = "^2.32.3"
python-dotenv = "^1.0.1"
python-telegram-bot = "^21.7"
black = "^24.10.0"
openai = "^1.54.4"
jupyter = "^1.1.1"
pyairtable = "^2.3.6"
cohere = "^5.11.4"
crypto-com-ai-agent-client = "^1.0.2b0"

# Add development dependencies
unicorn = "^2.1.1"
[tool.poetry.group.dev.dependencies]
flake8 = "^7.0.0"
mypy = "^1.7.1"
isort = "^5.12.0"
pytest = "^7.4.3"
pytest-cov = "^4.1.0"
pre-commit = "^3.5.0"
black = "^24.10.0"
pylance = "^0.20.0"
python-lsp-server = "^1.12.0"
pylint = "^3.3.2"
autopep8 = "^2.3.1"
rope = "^1.13.0"
pycodestyle = "^2.12.1"
pydocstyle = "^6.3.0"
yapf = "^0.43.0"
sourcery-cli = "^1.20.0"

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
# A regex preceded with ^/ will apply only to files and directories
# in the root of the project.
^/foo.py  # exclude a file named foo.py in the root of the project
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_gitignore = true

[tool.mypy]
python_version = "3.12"  # Updated to match your Python version
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_optional = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src"
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"