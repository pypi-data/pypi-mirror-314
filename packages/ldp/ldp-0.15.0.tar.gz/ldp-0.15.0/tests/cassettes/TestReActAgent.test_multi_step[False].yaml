interactions:
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}], "model": "gpt-4o-2024-08-06", "parallel_tool_calls":
        false, "stop": ["Observation:", "Action:"], "tool_choice": "none", "tools":
        [{"type": "function", "function": {"name": "print_story", "description": "Print
        a story.", "parameters": {"type": "object", "properties": {"story": {"description":
        "Story to print.", "title": "Story", "type": "string"}}, "required": ["story"]}}},
        {"type": "function", "function": {"name": "cast_float", "description": "Cast
        the input argument x to a float.", "parameters": {"type": "object", "properties":
        {"x": {"title": "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function",
        "function": {"name": "cast_int", "description": "Cast the input argument x to
        an integer.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "1496"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xSwWrcMBC9+ysGXXJZL/bGToJvgUIJ7SVtD4W2GEUa2+rKkqoZl7Zh/73Iu1k7
          NIVcBJo37/HeYx4zAGG0aECoQbIag81vP3zc8/378M7c73/c7d8wlZWmtz9rmj7/EZvE8A/fUfET
          a6v8GCyy8e4Iq4iSMamW15dlWdxc1/UMjF6jTbQ+cF75fFfsqry4yYurE3HwRiGJBr5kAACP85ss
          Oo2/RAPF5mkyIpHsUTTnJQARvU0TIYkMsXQsNguovGN0s+tPg5/6gRu4A4eogT0oSQwX9ba+SD8J
          nfWSoTORePvVrXUidhPJFMNN1p7mh7Mx6/sQ/QOd8PO8M87Q0EaU5F0yQeyDmNFDBvBtLmB6lkmE
          6MfALfs9uiS4u6yPemKpfEHLqxPInqVdsepy84Jeq5GlsbSqUCipBtQLdelbTtr4FZCtUv/r5iXt
          Y3Lj+tfIL4BSGBh1GyJqo54nXtYipov839q55dmwoN/EOLadcT3GEM3xKLrQVrXq6kqjRJEdsr8A
          AAD//wMAmAtgtR0DAAA=
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95cfbef009651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:36 GMT
        Server:
          - cloudflare
        Set-Cookie:
          - __cf_bm=WKotkLMRrc2Xef4Wt20THwR7B3nUMnqvEep67nlhetk-1731108756-1.0.1.1-6i3zk77orf_J7hJlSoW3c2v1yn1wRxvKWgWnrcbwUhcsEDUx5FnpaQ6ayIN6AoYYodGSIlrfv7DQv3sm_B75mA;
            path=/; expires=Sat, 09-Nov-24 00:02:36 GMT; domain=.api.openai.com; HttpOnly;
            Secure; SameSite=None
          - _cfuvid=LgwtIHBxPREoiqN9o6k_ZNhA5wCEXzPApu7fgAc1UTQ-1731108756267-0.0.1.1-604800000;
            path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "344"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999837"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_daf830881bc887390fc604ba46cfa2fd
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}, {"role": "assistant", "content": "Thought: I need to
        cast ''5.5'' to a float first.\n. Based on this reasoning, let''s select the
        appropriate tool!\nAction: "}, {"role": "user", "content": "Continue..."}],
        "model": "gpt-4o-2024-08-06", "parallel_tool_calls": false, "stop": ["Observation:",
        "Action:"], "tool_choice": "required", "tools": [{"type": "function", "function":
        {"name": "print_story", "description": "Print a story.", "parameters": {"type":
        "object", "properties": {"story": {"description": "Story to print.", "title":
        "Story", "type": "string"}}, "required": ["story"]}}}, {"type": "function",
        "function": {"name": "cast_float", "description": "Cast the input argument x
        to a float.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function", "function":
        {"name": "cast_int", "description": "Cast the input argument x to an integer.",
        "parameters": {"type": "object", "properties": {"x": {"title": "X", "type":
        "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "1702"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xTTW+bQBC98ytWczYR2GCn3HKKqqpN5TRVq7pCm2XA6+xXd5cmruX/HgE2YMeR
          ymG1mjfvzczbYRcQAryAjABbU8+kEeHN8v6prr9spTf3dnP35/sy+ey2t+JZPPwUMGkY+nGDzB9Z
          V0xLI9BzrTqYWaQeG9V4MYvj6HqRzltA6gJFQ6uMDxMdTqNpEkbXYTQ/ENeaM3SQkV8BIYTs2rNp
          URX4AhmJJseIROdohZD1SYSA1aKJAHWOO0+Vh8kAMq08qqZrVQsxArzWImdUiKFw9+1G98EnKkT+
          6e+/29lDqpYb+eOumn7dPNOPcvbtZlSvk96atqGyVqz3Z4T38eysGCGgqMSuoPN5KTT1Z2xCgNqq
          lqh80znsVvCygmwF6VW6gj2cJO+DS/ffIxsslrWj4uDPIb7vDRe6MlY/ujP/oOSKu3Vukbp2jrGd
          wbFaWwfqkxcDY7U0Pvf6CVUjO12knSoMCzWg8fwAeu2pGLE+xJMLenmBnvL2SfstYpStsRiowzbR
          uuB6BASj2d92c0m7m5+r6n/kB4AxNB6L3FgsODudeEiz2Pxv76X1LrcNg9s6jzIvuarQGsvblYfS
          5EnKyjQpkCIE++AVAAD//wMAouRTjfsDAAA=
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95cfef9fe9651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:36 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "359"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999802"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_d9470d313a7c0717e7dae8a16beed8ef
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}, {"role": "assistant", "content": "Thought: I need to
        cast ''5.5'' to a float first.\n. Based on this reasoning, let''s select the
        appropriate tool!\nAction: "}, {"role": "user", "content": "Continue..."}, {"role":
        "assistant", "content": null, "function_call": null, "tool_calls": [{"id": "call_KvzG3U5nRjmXOg2PjwaIm3TA",
        "type": "function", "function": {"arguments": "{\"x\": \"5.5\"}", "name": "cast_float"}}]},
        {"role": "tool", "content": "Observation: 5.5", "name": "cast_float", "tool_call_id":
        "call_KvzG3U5nRjmXOg2PjwaIm3TA"}], "model": "gpt-4o-2024-08-06", "parallel_tool_calls":
        false, "stop": ["Observation:", "Action:"], "tool_choice": "none", "tools":
        [{"type": "function", "function": {"name": "print_story", "description": "Print
        a story.", "parameters": {"type": "object", "properties": {"story": {"description":
        "Story to print.", "title": "Story", "type": "string"}}, "required": ["story"]}}},
        {"type": "function", "function": {"name": "cast_float", "description": "Cast
        the input argument x to a float.", "parameters": {"type": "object", "properties":
        {"x": {"title": "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function",
        "function": {"name": "cast_int", "description": "Cast the input argument x to
        an integer.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2027"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xSPW/bMBDd9SsOXLJIhmxLjqutYzrUQdoCDdpCYKiTyFjiEeSpaRH4vxeSFUtB
          U6ALh3sffO/I5whAmEoUIJSWrDrXJu/vPh17c9D35D8cvhwPj++2dHd7n3l3+9WKeFDQwyMqflGt
          FHWuRTY0wcqjZBxc19fb9TrdX+e7EeiownaQNY6TjJJNusmSdJ+ku0moySgMooBvEQDA83gOEW2F
          v0QBafwy6TAE2aAoLiQA4akdJkKGYAJLyyKeQUWW0Y6pP2vqG80FfKQnYC0ZbkDLnwhKBoarfJVf
          ARNIqFuSHMOTNkqDCZCv8hhuwCJWA2GkGx65FoxlbNCvvtvltR7rPsihte3bdpqfLj1aapynhzDh
          l3ltrAm69CgD2SFzYHJiRE8RwI9xX/2rFQjnqXNcMh3RDobbdHf2E/MLLdDNBDKxbBfz7T5+w6+s
          kKVpw2LjQkmlsZql8/PIvjK0AKJF67/TvOV9bm5s8z/2M6AUOsaqdB4ro143nmkehw/8L9ply2Ng
          EX4Hxq6sjW3QO2/Of6h2ZZarOs8qlCiiU/QHAAD//wMAe66zYUwDAAA=
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95d022cb59651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:37 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "579"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999796"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_53a5f569ed5dd9384ae363644dbf2f4f
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}, {"role": "assistant", "content": "Thought: I need to
        cast ''5.5'' to a float first.\n. Based on this reasoning, let''s select the
        appropriate tool!\nAction: "}, {"role": "user", "content": "Continue..."}, {"role":
        "assistant", "content": null, "function_call": null, "tool_calls": [{"id": "call_KvzG3U5nRjmXOg2PjwaIm3TA",
        "type": "function", "function": {"arguments": "{\"x\": \"5.5\"}", "name": "cast_float"}}]},
        {"role": "tool", "content": "Observation: 5.5", "name": "cast_float", "tool_call_id":
        "call_KvzG3U5nRjmXOg2PjwaIm3TA"}, {"role": "assistant", "content": "Thought:
        Now that I have cast ''5.5'' to a float, which is 5.5, I need to cast it to
        an integer.\n. Based on this reasoning, let''s select the appropriate tool!\nAction:
        "}, {"role": "user", "content": "Continue..."}], "model": "gpt-4o-2024-08-06",
        "parallel_tool_calls": false, "stop": ["Observation:", "Action:"], "tool_choice":
        "required", "tools": [{"type": "function", "function": {"name": "print_story",
        "description": "Print a story.", "parameters": {"type": "object", "properties":
        {"story": {"description": "Story to print.", "title": "Story", "type": "string"}},
        "required": ["story"]}}}, {"type": "function", "function": {"name": "cast_float",
        "description": "Cast the input argument x to a float.", "parameters": {"type":
        "object", "properties": {"x": {"title": "X", "type": "string"}}, "required":
        ["x"]}}}, {"type": "function", "function": {"name": "cast_int", "description":
        "Cast the input argument x to an integer.", "parameters": {"type": "object",
        "properties": {"x": {"title": "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2280"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xTUW+bMBB+51dY9xyqhEIS8RatU7dp67T1aVon5JoD3Brbs481WZT/PgEJkC6T
          xoNl3Xf3fXefj33AGMgcUgai4iRqq8LN1/vnXzfF7u5JF+/jkqroPv9y8/slutv+XMKsrTCPTyjo
          VHUlTG0VkjS6h4VDTtiyLlbXi8V8vUpWHVCbHFVbVloKYxNG8ygO5+twfuQVlZECPaTse8AYY/vu
          bFvUOW4hZfPZKVKj97xESIckxsAZ1UaAey89cU0wG0FhNKFuu9aNUhOAjFGZ4EqNwv23n9xHn7hS
          2dsFfbyNNs27jaRvu/L2DS9eig+fP030euqd7RoqGi0Gfyb4EE9fiTEGmtfYC3rK5NksxwzuyqZG
          TW3fsH+A7QOkyVVygLPEQ3Dp/mNigMOi8VwdnTnGD4PVypTWmUf/yjkopJa+yhxy300wNTI4qXU6
          0Jy9FVhnaksZmWfULe31MupZYVylEV0sjyAZ4mpStVrPLvBlORKX3WMO+yO4qDAfS8c94k0uzQQI
          JrP/3c0l7n5+qcv/oR8BIdAS5pl1mEtxPvGY5rD90/6VNrjcNQx+5wnrrJC6RGed7JYdCpvFiSiS
          OEeOEByCPwAAAP//AwBsxhCV9QMAAA==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95d0698c99651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:38 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "804"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999750"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_5ba19ba130b00d9cc8726cdb6aacfd79
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}, {"role": "assistant", "content": "Thought: I need to
        cast ''5.5'' to a float first.\n. Based on this reasoning, let''s select the
        appropriate tool!\nAction: "}, {"role": "user", "content": "Continue..."}, {"role":
        "assistant", "content": null, "function_call": null, "tool_calls": [{"id": "call_KvzG3U5nRjmXOg2PjwaIm3TA",
        "type": "function", "function": {"arguments": "{\"x\": \"5.5\"}", "name": "cast_float"}}]},
        {"role": "tool", "content": "Observation: 5.5", "name": "cast_float", "tool_call_id":
        "call_KvzG3U5nRjmXOg2PjwaIm3TA"}, {"role": "assistant", "content": "Thought:
        Now that I have cast ''5.5'' to a float, which is 5.5, I need to cast it to
        an integer.\n. Based on this reasoning, let''s select the appropriate tool!\nAction:
        "}, {"role": "user", "content": "Continue..."}, {"role": "assistant", "content":
        null, "function_call": null, "tool_calls": [{"id": "call_E1tLG2AuHAitYygGCafwfJOM",
        "type": "function", "function": {"arguments": "{\"x\": 5.5}", "name": "cast_int"}}]},
        {"role": "tool", "content": "Observation: 5", "name": "cast_int", "tool_call_id":
        "call_E1tLG2AuHAitYygGCafwfJOM"}], "model": "gpt-4o-2024-08-06", "parallel_tool_calls":
        false, "stop": ["Observation:", "Action:"], "tool_choice": "none", "tools":
        [{"type": "function", "function": {"name": "print_story", "description": "Print
        a story.", "parameters": {"type": "object", "properties": {"story": {"description":
        "Story to print.", "title": "Story", "type": "string"}}, "required": ["story"]}}},
        {"type": "function", "function": {"name": "cast_float", "description": "Cast
        the input argument x to a float.", "parameters": {"type": "object", "properties":
        {"x": {"title": "X", "type": "string"}}, "required": ["x"]}}}, {"type": "function",
        "function": {"name": "cast_int", "description": "Cast the input argument x to
        an integer.", "parameters": {"type": "object", "properties": {"x": {"title":
        "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2595"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xSwWrcMBS8+yseOu8Ge2MnW98ChRJKF9rk0NIUo0jPthpZT0jPcTZh/73Yu1lv
          aAq96DDzZjTzpJcEQBgtShCqlaw6b5dX324ehufvX9PnT/XNx82PbvjyWV7dbjJ1YWuxGBV0/xsV
          v6rOFHXeIhtye1oFlIyja3Z5nmXp+rJYT0RHGu0oazwvc1qu0lW+TNfL9OIgbMkojKKEnwkAwMt0
          jhGdxidRQrp4RTqMUTYoyuMQgAhkR0TIGE1k6VgsZlKRY3RT6tuW+qblEjY0ALeS4Rpa+YjALYJx
          jA0GeJS2RygWcA0OUQMTDMEwgoTIFLYwGG4Bn6Riu4UCBgo6nt250zsD1n2UY2XXW3vAd8cSlhof
          6D4e+CNeG2diWwWUkdwYODJ5MbG7BODXtKz+TX/hA3WeK6YHdKPh+Yds7yfm55nZVX4gmVjaGc+z
          YvGOX6WRpbHxZN1CSdWinqXz28heGzohkpPWf6d5z3vf3Ljmf+xnQin0jLryAbVRbxvPYwHH3/uv
          seOWp8AibiNjV9XGNRh8MPsPVPsqL1Rd5BolimSX/AEAAP//AwCJYBnBSQMAAA==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95d0d1eab9651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:39 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "486"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999745"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_fad1c5ae2dfe136d6124a1bc3f567a70
      status:
        code: 200
        message: OK
  - request:
      body:
        '{"messages": [{"role": "system", "content": "Answer the following questions
        as best you can, using the provided tools.\n\nUse the following format:\n\nThought:
        you should always think about what to do\nAction: the action to take, should
        be one of the provided tools with necessary arguments\nObservation: the result
        of the action\n... (this Thought/Action/Observation can repeat N times)\n\nExample:\n\nThought:
        I need to use the get_weather tool\nAction: get_weather(\"New York\", 7)\nObservation:
        The 7 day forecast for New York is [...]"}, {"role": "user", "content": "Cast
        ''5.5'' to a float, then to an integer, and finally use it to write a story
        of that many words."}, {"role": "assistant", "content": "Thought: I need to
        cast ''5.5'' to a float first.\n. Based on this reasoning, let''s select the
        appropriate tool!\nAction: "}, {"role": "user", "content": "Continue..."}, {"role":
        "assistant", "content": null, "function_call": null, "tool_calls": [{"id": "call_KvzG3U5nRjmXOg2PjwaIm3TA",
        "type": "function", "function": {"arguments": "{\"x\": \"5.5\"}", "name": "cast_float"}}]},
        {"role": "tool", "content": "Observation: 5.5", "name": "cast_float", "tool_call_id":
        "call_KvzG3U5nRjmXOg2PjwaIm3TA"}, {"role": "assistant", "content": "Thought:
        Now that I have cast ''5.5'' to a float, which is 5.5, I need to cast it to
        an integer.\n. Based on this reasoning, let''s select the appropriate tool!\nAction:
        "}, {"role": "user", "content": "Continue..."}, {"role": "assistant", "content":
        null, "function_call": null, "tool_calls": [{"id": "call_E1tLG2AuHAitYygGCafwfJOM",
        "type": "function", "function": {"arguments": "{\"x\": 5.5}", "name": "cast_int"}}]},
        {"role": "tool", "content": "Observation: 5", "name": "cast_int", "tool_call_id":
        "call_E1tLG2AuHAitYygGCafwfJOM"}, {"role": "assistant", "content": "Thought:
        Now that I have the integer value 5, I need to write a story with exactly 5
        words.\n. Based on this reasoning, let''s select the appropriate tool!\nAction:
        "}, {"role": "user", "content": "Continue..."}], "model": "gpt-4o-2024-08-06",
        "parallel_tool_calls": false, "stop": ["Observation:", "Action:"], "tool_choice":
        "required", "tools": [{"type": "function", "function": {"name": "print_story",
        "description": "Print a story.", "parameters": {"type": "object", "properties":
        {"story": {"description": "Story to print.", "title": "Story", "type": "string"}},
        "required": ["story"]}}}, {"type": "function", "function": {"name": "cast_float",
        "description": "Cast the input argument x to a float.", "parameters": {"type":
        "object", "properties": {"x": {"title": "X", "type": "string"}}, "required":
        ["x"]}}}, {"type": "function", "function": {"name": "cast_int", "description":
        "Cast the input argument x to an integer.", "parameters": {"type": "object",
        "properties": {"x": {"title": "X", "type": "number"}}, "required": ["x"]}}}]}'
      headers:
        accept:
          - application/json
        accept-encoding:
          - gzip, deflate
        connection:
          - keep-alive
        content-length:
          - "2845"
        content-type:
          - application/json
        host:
          - api.openai.com
        user-agent:
          - AsyncOpenAI/Python 1.54.3
        x-stainless-arch:
          - arm64
        x-stainless-async:
          - async:asyncio
        x-stainless-lang:
          - python
        x-stainless-os:
          - MacOS
        x-stainless-package-version:
          - 1.54.3
        x-stainless-raw-response:
          - "true"
        x-stainless-retry-count:
          - "0"
        x-stainless-runtime:
          - CPython
        x-stainless-runtime-version:
          - 3.12.7
      method: POST
      uri: https://api.openai.com/v1/chat/completions
    response:
      body:
        string: !!binary |
          H4sIAAAAAAAAA4xTTW/bMAy9+1cIPCdFvpP61m7YMAzYIRvWFstgKDJta5UlTaKHZEH++2A5sZ2s
          BeqDIPDxPZJP9CFiDGQKMQNRcBKlVcO79dfnnfj9x/5Ffa8X24978f39Mnv8tP6sH2BQM8z2Fwo6
          s26EKa1CkkY3sHDICWvV8XI6Ho9Wy/ltAEqToqppuaXhzAwno8lsOFoNR4sTsTBSoIeY/YgYY+wQ
          zrpFneIOYjYanCMles9zhLhNYgycUXUEuPfSE9cEgw4URhPqumtdKdUDyBiVCK5UV7j5Dr175xNX
          KrG7p3fpl4fVeu0mH8wdPbr7p8V0Ne3Va6T3NjSUVVq0/vTwNh5fFWMMNC8D1zqpKfFk3P6Kzhhw
          l1claqpbh8MGQtoG4g18K5AJTsxzYkYzKpCVnG42cIQLkWP00v1nzx+HWeW5Ohl3ih/bl1Amt85s
          /ZWxkEktfZE45D4M2Pc5OlcLdaC6eEqwzpSWEjLPqGvZ2fS2UYVu0zp0cloKIENc9VjzM+tCL0mR
          uAxv3a6X4KLAtKN2a8arVJoeEPVm/7+bl7Sb+aXO3yLfAUKgJUwT6zCV4nLiLs1h/SO+lta6HBoG
          v/eEZZJJnaMLWxVW0yazucjmsxQ5QnSM/gEAAP//AwDPufswFAQAAA==
      headers:
        CF-Cache-Status:
          - DYNAMIC
        CF-RAY:
          - 8df95d118aa49651-SJC
        Connection:
          - keep-alive
        Content-Encoding:
          - gzip
        Content-Type:
          - application/json
        Date:
          - Fri, 08 Nov 2024 23:32:39 GMT
        Server:
          - cloudflare
        Transfer-Encoding:
          - chunked
        X-Content-Type-Options:
          - nosniff
        access-control-expose-headers:
          - X-Request-ID
        alt-svc:
          - h3=":443"; ma=86400
        openai-organization:
          - future-house-xr4tdh
        openai-processing-ms:
          - "409"
        openai-version:
          - "2020-10-01"
        strict-transport-security:
          - max-age=31536000; includeSubDomains; preload
        x-ratelimit-limit-requests:
          - "10000"
        x-ratelimit-limit-tokens:
          - "30000000"
        x-ratelimit-remaining-requests:
          - "9999"
        x-ratelimit-remaining-tokens:
          - "29999699"
        x-ratelimit-reset-requests:
          - 6ms
        x-ratelimit-reset-tokens:
          - 0s
        x-request-id:
          - req_da74a5eb9bca14038fce7bd69d7a5a10
      status:
        code: 200
        message: OK
version: 1
