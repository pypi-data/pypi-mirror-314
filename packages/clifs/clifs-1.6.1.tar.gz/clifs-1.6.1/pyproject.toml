[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
dev-mode-dirs = ["."]

[project]
name = "clifs"
description = "Command line interface for basic file system operations."
readme = "README.md"
authors = [{ email = "don.felice@gmx.net", name = "Felix Segerer" }]
license-files = { paths = ["LICENSE"] }
classifiers = ["Programming Language :: Python :: 3"]
keywords = ["file system", "command line"]
dependencies = ["rich>=13.7.0", "python-dateutil"]
dynamic = ["version"]
requires-python = ">=3.8"

[project.urls]
"Source code" = "https://github.com/Don-Felice/clifs"

[tool.hatch.version]
path = "clifs/VERSION"
pattern = "^(?P<version>.*)$"

[project.scripts]
clifs = "clifs.__main__:main"

[project.entry-points."clifs.plugins"]
tree = "clifs.plugins.tree:DirectoryTree"
du = "clifs.plugins.disc_usage:DiscUsageExplorer"
cp = "clifs.plugins.como:FileCopier"
mv = "clifs.plugins.como:FileMover"
del = "clifs.plugins.delete:FileDeleter"
ren = "clifs.plugins.rename:Renamer"
backup = "clifs.plugins.backup:FileSaver"
sed = "clifs.plugins.edit:StreamingEditor"

[tool.hatch.envs.default]
dependencies = [
    "pytest",
    "pytest-cov",
    "mypy",
    "pylint",
    "ruff>=0.8.2",
    "types-python-dateutil",
    "clifs @ file://{root}",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args}"
lint = [
    "ruff format --check .",
    "ruff check clifs",
    "pylint clifs",
    "mypy clifs --strict",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v --cov --cov-report term-missing --cov-config=pyproject.toml --cov=clifs"

[tool.coverage.run]
branch = true
parallel = true
source = ['clifs']

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.pylint.'MESSAGES CONTROL']
disable = ["missing-function-docstring", "duplicate-code"]

[tool.ruff]
lint.extend-select = [
    "I",   # sorting of imports 
    "W",   # pycodestyle warnings
    "S",   # flake8-bandit security testing
    "SIM", # simplify
]
